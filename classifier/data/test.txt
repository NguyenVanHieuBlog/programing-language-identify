__lb__lang-java public interface ExampleInterface { public void doAction(); public String doThis(int number); } public class sub implements ExampleInterface { public void doAction() { } public String doThis(int number) { } }
__lb__lang-sh STR1=$(echo "https: STR2=$(echo "https: OUT2=$(echo "$STR2" | sed -f urlencode.sed) echo "$STR1?$OUT2"
__lb__lang-sh $ command_here | highlight green "input" | highlight red "output"
__lb__lang-java package pack; class A{ void msg(){System.out.println("Hello");} } package mypack; import pack.*; class B{ public static void main(String args[]){ A obj = new A(); obj.msg(); } }
__lb__lang-html <div id="parent"> <div id="child">Hello World!</div> </div>
__lb__lang-css .block { text-align: center; } .block:before { content: display: inline-block; height: 100%; vertical-align: middle; margin-right: -0.25em; } .centered { display: inline-block; vertical-align: middle; width: 300px; }
__lb__lang-sh > ./run-many-processes.sh & ProcessID=28957 begins (./run-many-processes.sh) ProcessID=28959 begins (./child.sh) ProcessID=28958 begins (./child.sh) ProcessID=28960 begins (./grandchild.sh) ProcessID=28961 begins (./grandchild.sh) ProcessID=28962 begins (./grandchild.sh) ProcessID=28963 begins (./grandchild.sh) > PID=$! > PGID=$(ps opgid= "$PID") > ps fj PPID PID PGID SID TTY TPGID STAT UID TIME COMMAND 28348 28349 28349 28349 pts/3 28969 Ss 33021 0:00 -bash 28349 28957 28957 28349 pts/3 28969 S 33021 0:00 \_ /bin/sh ./run-many-processes.sh 28957 28958 28957 28349 pts/3 28969 S 33021 0:00 | \_ /bin/sh ./child.sh background 28958 28961 28957 28349 pts/3 28969 S 33021 0:00 | | \_ /bin/sh ./grandchild.sh background 28961 28965 28957 28349 pts/3 28969 S 33021 0:00 | | | \_ sleep 9999 28958 28963 28957 28349 pts/3 28969 S 33021 0:00 | | \_ /bin/sh ./grandchild.sh foreground 28963 28967 28957 28349 pts/3 28969 S 33021 0:00 | | \_ sleep 9999 28957 28959 28957 28349 pts/3 28969 S 33021 0:00 | \_ /bin/sh ./child.sh foreground 28959 28960 28957 28349 pts/3 28969 S 33021 0:00 | \_ /bin/sh ./grandchild.sh background 28960 28964 28957 28349 pts/3 28969 S 33021 0:00 | | \_ sleep 9999 28959 28962 28957 28349 pts/3 28969 S 33021 0:00 | \_ /bin/sh ./grandchild.sh foreground 28962 28966 28957 28349 pts/3 28969 S 33021 0:00 | \_ sleep 9999 28349 28969 28969 28349 pts/3 28969 R+ 33021 0:00 \_ ps fj
__lb__lang-cs protected string GetLoggedInUsername() { string UserName = System.Security.Principal.WindowsIdentity.GetCurrent().Name; String UserName2 = Request.LogonUserIdentity.Name; String UserName3 = Environment.UserName; string UserName4 = HttpContext.Current.User.Identity.Name; string UserName5 = System.Windows.Forms.SystemInformation.UserName; return UserName4; }
__lb__lang-css div {width: 100px;border: 1px solid red;} img {width: 100px;height: auto;} .block img{ display:block; } .bottom img{ vertical-align:bottom; }
__lb__lang-java double a = 123.00449; double roundOff1 = Math.round(a*10000)/10000.00; double roundOff2 = Math.round(roundOff1*1000)/1000.00; double roundOff = Math.round(roundOff2*100)/100.00; System.out.println("result:"+roundOff);
__lb__lang-java public class Customer implements Parcelable { private String firstName, lastName, address; int age; public Customer(Parcel in ) { readFromParcel( in ); } public static final Parcelable.Creator CREATOR = new Parcelable.Creator() { public LeadData createFromParcel(Parcel in ) { return new Customer( in ); } public Customer[] newArray(int size) { return new Customer[size]; } }; @Override public void writeToParcel(Parcel dest, int flags) { dest.writeString(firstName); dest.writeString(lastName); dest.writeString(address); dest.writeInt(age); } private void readFromParcel(Parcel in ) { firstName = in .readString(); lastName = in .readString(); address = in .readString(); age = in .readInt(); }
__lb__lang-cs string title = "ASTRINGTOTEST"; title.Contains("string");
__lb__lang-sh find ./fs*/* -type d -print0 | xargs -0 -n 1 cp test
__lb__lang-c char *s0 = "hello world"; char s1[] = "hello world";
__lb__lang-sh read -e -p " List the content of your home dir ? [Y/n] " YN [[ $YN == "y" || $YN == "Y" || $YN == "" ]] && ls -la ~/
__lb__lang-cs public static string GetDescriptionValue<T>(this T source) { FieldInfo fileInfo = source.GetType().GetField(source.ToString()); DescriptionAttribute[] attributes = (DescriptionAttribute[])fileInfo.GetCustomAttributes(typeof(DescriptionAttribute), false); if (attributes != null && attributes.Length > 0) { return attributes[0].Description; } else { return source.ToString(); } }
__lb__lang-cs public class AutoReleaseComObject<T> : IDisposable { private T m_comObject; private bool m_armed = true; private bool m_disposed = false; public AutoReleaseComObject(T comObject) { Debug.Assert(comObject != null); m_comObject = comObject; } ~AutoReleaseComObject() { Debug.WriteLine("Finalize being called, should have been disposed"); if (this.ComObject != null) { Debug.WriteLine(string.Format("ComObject was not null:{0}, name:{1}.", this.ComObject, this.ComObjectName)); } } public T ComObject { get { Debug.Assert(!m_disposed); return m_comObject; } } private string ComObjectName { get { if(this.ComObject is Microsoft.Office.Interop.Excel.Workbook) { return ((Microsoft.Office.Interop.Excel.Workbook)this.ComObject).Name; } return null; } } public void Disarm() { Debug.Assert(!m_disposed); m_armed = false; } public void Dispose() { Dispose(true); GC.SuppressFinalize(this); } protected virtual void Dispose(bool disposing) { if (!m_disposed) { if (m_armed) { int refcnt = 0; do { refcnt = System.Runtime.InteropServices.Marshal.ReleaseComObject(m_comObject); } while (refcnt > 0); m_comObject = default(T); } m_disposed = true; } } }
__lb__lang-cs public static class DateTimeExtensions { public static int Age(this DateTime birthDate) { return Age(birthDate, DateTime.Today); } public static int Age(this DateTime birthDate, DateTime laterDate) { int age; age = laterDate.Year - birthDate.Year; if (age > 0) { age -= Convert.ToInt32(laterDate.Date < birthDate.Date.AddYears(age)); } else { age = 0; } return age; } }
__lb__lang-c message = strcat("TEXT ", var); message2 = strcat(strcat("TEXT ", foo), strcat(" TEXT ", bar));
__lb__lang-sh git ls-remote | cut -f1 | git cat-file --batch-check >&-
__lb__lang-sh $ ls -l /bin/echo -rwxr-xr-x 1 root root 22856 Jul 21 2011 /bin/echo
__lb__lang-java List<String> names = new StickyList<>( "Scott Fitzgerald", "Fyodor Dostoyevsky" );
__lb__lang-cpp using namespace std; vector<string> split(const string &s, char delim) { vector<string> elems; stringstream ss(s); string item; while (getline(ss, item, delim)) { elems.push_back(item); } return elems; } int main() { vector<string> x = split("thi is an sample test", unsigned int i; for(i=0;i<x.size();i++) cout<<i<<":"<<x[i]<<endl; return 0; }
__lb__lang-golang func indexOf(element string, data []string) (int) { for k, v := range data { if element == v { return k } } return -1 }
__lb__lang-sh $ ksh -c 1 2 3 4 5 $ ksh -c Version JM 93u+ 2012-02-29 $ bash -c {1..5}
__lb__lang-sh $ ./test.sh Connection to example.com on port 80 succeeded
__lb__lang-html <?xml version="1.0" encoding="utf-8"?> <!DOCTYPE html PUBLIC "- <html xmlns="http: <head> <title>{DYNAMIC(TITLE)}</title> <meta http-equiv="content-type" content="text/html;charset=utf-8" /> <meta http-equiv="Content-Style-Type" content="text/css" /> <link rel="stylesheet" type="text/css" href="./styles/base.css" /> </head> <body> <div id="header"> <h1><!-- Page title --></h1> <ol id="navigation"> <!-- Navigation items --> </ol> <div class="clearfix"></div> </div> <div id="sidebar"> <!-- Sidebar content --> </div> <!-- Page content --> <p id="footer"><!-- Footer content --></p> </body> </html>
__lb__lang-hs tqsort xs = tqsort tqsort tqsort qpart [] as bs cs r = tqsort qpart (x | x | x
__lb__lang-sh if ! which command > /dev/null; then echo -e "Command not found! Install? (y/n) \c" read if "$REPLY" = "y"; then sudo apt-get install command fi fi
__lb__lang-html <div class="container"> <div>Tree</div> <div class="second">View</div> </div>
__lb__lang-cs Stream s; byte[] b; using (BinaryReader br = new BinaryReader(s)) { b = br.ReadBytes((int)s.Length); }
__lb__lang-java <servlet> <servlet-name>UploadServlet</servlet-name> <servlet-class>UploadServlet</servlet-class> </servlet> <servlet-mapping> <servlet-name>UploadServlet</servlet-name> <url-pattern>/UploadServlet</url-pattern> </servlet-mapping>
__lb__lang-php $block =1024*1024; if ($fh = fopen("file.txt", "r")) { $left= while (!feof($fh)) { $temp = fread($fh, $block); $fgetslines = explode("\n",$temp); $fgetslines[0]=$left.$fgetslines[0]; if(!feof($fh) )$left = array_pop($lines); foreach ($fgetslines as $k => $line) { } } } fclose($fh);
__lb__lang-cpp extern "C" int printf (const char*, ...); extern int global_var_name; extern int local_var_name; void print () { printf("%d%d\n", global_var_name, local_var_name); }
__lb__lang-cs dynamic obj = new ExpandoObject(); obj.Name = "John";
__lb__lang-c do { char c = read_input(); process_input(c); } while (c !=
__lb__lang-php final class TestEnum { private static $_values = [ ]; private static $_instances = []; public static function __getStatic($name) { if (isset(static::$_values[$name])) { if (empty(static::$_instances[$name])) { static::$_instances[$name] = new static($name); } return static::$_instances[$name]; } throw new Exception(sprintf( } private $_value; public function __construct($name) { $this->_value = static::$_values[$name]; } public function __equals($object) { if ($object instanceof static) { return $object->_value === $this->_value; } return $object === $this->_value; } } $foo = TestEnum::$FOO; $zap = TestEnum::$ZAP; $qux = TestEnum::$QUX; TestEnum::$QUX == $qux;
__lb__lang-c Num: Value Size Type Bind Vis Ndx Name 9: 0000000000000000 4 OBJECT GLOBAL DEFAULT 3 not_extern_int 12: 0000000000000000 0 NOTYPE GLOBAL DEFAULT UND extern_int
__lb__lang-java import java.io.*; private void stringToFile( String text, String fileName ) { try { File file = new File( fileName ); if ( ! file.exists( ) ) { file.createNewFile( ); } FileWriter fw = new FileWriter( file.getAbsoluteFile( ) ); BufferedWriter bw = new BufferedWriter( fw ); bw.write( text ); bw.close( ); } catch( IOException e ) { System.out.println("Error: " + e); e.printStackTrace( ); } }
__lb__lang-php $query = Activity::whereNotNull( $count = 0; foreach ($this->Reporter()->get() as $service) { $condition = ($count == 0) ? "where" : "orWhere"; $query->$condition(function ($query) use ($service) { $query->where( ->where( ->whereBetween( }); $count++; } return $query->get();
__lb__lang-sh ./shell.sh --copyfile abc.pl /tmp/ ./shell.sh -c abc.pl /tmp/
__lb__lang-golang func makeThing(name string) Thing { return Thing{name, 33} }
__lb__lang-c tElem e; e.typ = ELEM_VARIABLE; e.str = strdup ("b");
__lb__lang-java 100 600 1100 1600 2100 test10 0.333 1.631 2.752 5.937 8.024 test3 0.309 1.971 4.147 8.147 10.473 test6 0.372 2.190 4.470 8.322 10.531 test1 0.405 2.237 4.616 8.645 10.707 test2 0.376 2.267 4.809 8.403 10.910 test7 0.473 2.448 5.668 9.790 12.125 test9 0.565 2.830 5.952 13.220 16.965 test4 0.808 5.012 8.813 13.939 17.407 test5 0.810 5.104 8.533 14.064 17.422 test8 5.173 12.499 17.351 24.671 30.403
__lb__lang-php include_once("../include/session.php"); $lnum = $session->lnum; $directory = uploaded_labels; if (!file_exists($directory."/".$lnum)) { mkdir($directory."/".$lnum, 0777, true); }
__lb__lang-hs {- newtype Id t = Id t instance Monad Id where return :: t -> Id t return = Id (=<<) :: (a -> Id b) -> Id a -> Id b f =<< (Id x) = f x
__lb__lang-cpp double compute(double x) noexcept; { string s = "Courtney and Anya"; vector<double> tmp(10); }
__lb__lang-cs Private Function SplitOnNewLine(input as String) As String Return input.Split(Environment.NewLine) End Function
__lb__lang-php $numItems = count($arr); $i=0; $firstitem=$arr[0]; $i++; while($i<$numItems-1){ $some_item=$arr[$i]; $i++; } $last_item=$arr[$i]; $i++;
__lb__lang-java android { compileSdkVersion 25 buildToolsVersion defaultConfig { applicationId "yourpackage" minSdkVersion 10 targetSdkVersion 25 versionCode 1 versionName "1.0" multiDexEnabled true } dexOptions { javaMaxHeapSize "4g" } }
__lb__lang-java synchronized(LOCK) { Thread.sleep(1000); } synchronized(LOCK) { LOCK.wait(); }
__lb__lang-cs string convert = "This is the string to be converted"; byte[] buffer = System.Text.Encoding.UTF8.GetBytes(convert); string s = System.Text.Encoding.UTF8.GetString(buffer, 0, buffer.Length);
__lb__lang-java public <T> T[] concatenate(T[] a, T[] b) { int aLen = a.length; int bLen = b.length; @SuppressWarnings("unchecked") T[] c = (T[]) Array.newInstance(a.getClass().getComponentType(), aLen + bLen); System.arraycopy(a, 0, c, 0, aLen); System.arraycopy(b, 0, c, aLen, bLen); return c; }
__lb__lang-sh limit=4 i=1; while [ $i -le $limit ]; do echo $i i=$(($i + 1)) done for i in $(seq 1 $limit); do echo $i done
__lb__lang-perl print "Need to start exec command"; my $data2 = exec( print "Now END exec command"; print "Hello $data2\n\n";
__lb__lang-php $color = array("a" => "red", "b" => "green" , "c" => "blue"); $first_color = array_shift($color); print_r ($color); print_r (
__lb__lang-sh function get_variable_name_for_option { local OPT_DESC=${1} local OPTION=${2} local VAR=$(echo ${OPT_DESC} | sed -e "s/.*\[\?-${OPTION} \([A-Z_]\+\).*/\1/g" -e "s/.*\[\?-\(${OPTION}\).*/\1FLAG/g") if [[ "${VAR}" == "${1}" ]]; then echo "" else echo ${VAR} fi } function parse_options { local OPT_DESC=${1} local INPUT=$(get_input_for_getopts "${OPT_DESC}") shift while getopts ${INPUT} OPTION ${@}; do [ ${OPTION} == "?" ] && usage VARNAME=$(get_variable_name_for_option "${OPT_DESC}" "${OPTION}") [ "${VARNAME}" != "" ] && eval "${VARNAME}=${OPTARG:-true}" done check_for_required "${OPT_DESC}" } function check_for_required { local OPT_DESC=${1} local REQUIRED=$(get_required "${OPT_DESC}" | sed -e "s/\: while test -n "${REQUIRED}"; do OPTION=${REQUIRED:0:1} VARNAME=$(get_variable_name_for_option "${OPT_DESC}" "${OPTION}") [ -z "${!VARNAME}" ] && printf "ERROR: %s\n" "Option -${OPTION} must been set." && usage REQUIRED=${REQUIRED:1} done } function get_input_for_getopts { local OPT_DESC=${1} echo ${OPT_DESC} | sed -e "s/\([a-zA-Z]\) [A-Z_]\+/\1:/g" -e "s/[][ -] } function get_optional { local OPT_DESC=${1} echo ${OPT_DESC} | sed -e "s/[^[]*\(\[[^]]*\]\)[^[]*/\1/g" -e "s/\([a-zA-Z]\) [A-Z_]\+/\1:/g" -e "s/[][ -] } function get_required { local OPT_DESC=${1} echo ${OPT_DESC} | sed -e "s/\([a-zA-Z]\) [A-Z_]\+/\1:/g" -e "s/\[[^[]*\] } function usage { printf "Usage:\n\t%s\n" "${0} ${OPT_DESC}" exit 10 }
__lb__lang-golang package main import ( "launchpad.net/tomb" "time" "fmt" ) type Proc struct { Tomb tomb.Tomb } func (proc *Proc) Exec() { defer proc.Tomb.Done() for { select { case <-proc.Tomb.Dying(): return default: time.Sleep(300 * time.Millisecond) fmt.Println("Loop the loop") } } } func main() { proc := &Proc{} go proc.Exec() time.Sleep(1 * time.Second) proc.Tomb.Kill(fmt.Errorf("Death from above")) err := proc.Tomb.Wait() fmt.Println(err) }
__lb__lang-java void MyParameterizedFunction(String param1, int param2, bool param3=false, int param4=42) {}
__lb__lang-php <?php function buildBaseString($baseURI, $method, $params) { $r = array(); ksort($params); foreach($params as $key=>$value){ $r[] = "$key=" . rawurlencode($value); } return $method."&" . rawurlencode($baseURI) . } function buildAuthorizationHeader($oauth) { $r = $values = array(); foreach($oauth as $key=>$value) $values[] = "$key=\"" . rawurlencode($value) . "\""; $r .= implode( return $r; } $url = "https: $oauth_access_token = "YOURVALUE"; $oauth_access_token_secret = "YOURVALUE"; $consumer_key = "YOURVALUE"; $consumer_secret = "YOURVALUE"; $oauth = array( $base_info = buildBaseString($url, $composite_key = rawurlencode($consumer_secret) . $oauth_signature = base64_encode(hash_hmac( $oauth[ $header = array(buildAuthorizationHeader($oauth), $options = array( CURLOPT_HTTPHEADER => $header, CURLOPT_HEADER => false, CURLOPT_URL => $url, CURLOPT_RETURNTRANSFER => true, CURLOPT_SSL_VERIFYPEER => false); $feed = curl_init(); curl_setopt_array($feed, $options); $json = curl_exec($feed); curl_close($feed); $twitter_data = json_decode($json); print_r ($twitter_data); ?>
__lb__lang-php import { parseURL, parseQueryString } from import { getImageSize } from const PICTURE_SIZE_NAMES = [ ] export default { parse: async function(url) { let id const location = parseURL(url) if (location.hostname === if (location.search) { const query = parseQueryString(location.search.slice( id = query.v } } else if (location.hostname === id = location.pathname.slice( } if (id) { return { source: { provider: id }, picture: await this.getPicture(id) } } }, getPicture: async (id) => { for (const sizeName of PICTURE_SIZE_NAMES) { try { const url = getPictureSizeURL(id, sizeName) return { type: sizes: [{ url, ...(await getImageSize(url)) }] } } catch (error) { console.error(error) } } throw new Error(`No picture found for YouTube video ${id}`) }, getEmbeddedVideoURL(id, options = {}) { return `https: } } const getPictureSizeURL = (id, sizeName) => `https:
__lb__lang-sh read -p "Is this a good question (y/n)? " answer case ${answer:0:1} in y|Y ) echo Yes ;; * ) echo No ;; esac
__lb__lang-cpp class Foo { public: Foo() {}; Foo(int a) {}; void bar() {}; }; int main() { Foo foo1(1); foo1.bar(); Foo foo2(); foo2.bar(); return 0; }
__lb__lang-c extern int increment(void); extern int oddball_value(void); extern void use_them(void);
__lb__lang-c int pow( int base, int exponent) { if (exponent == 0) return 1; int temp = pow(base, exponent/2); if (exponent % 2 == 0) return temp * temp; else return (base * temp * temp); }
__lb__lang-cs Decimal Binary 1 1 (1 followed by 0 zero) 2 10 (1 followed by 1 zero) 4 100 (1 followed by 2 zeroes) 8 1000 (1 followed by 3 zeroes) . . . . . .
__lb__lang-html <fieldset class="checks"> <legend>checks for whatevers</legend> <input type="" id="x" /> <label for="x">Label</label> <input type="" id="y" /> <label for="y">Label</label> <input type="" id="z" /> <label for="z">Label</label> </fieldset>
__lb__lang-css body,html{ min-height:100%; } div.center{ width:200px; left:50%; margin-left:-100px; position:absolute; background: border:1px solid height:100px; text-align:center }
__lb__lang-golang a: [1 2 0 0 0 0 0 0 0 0] x: [1 2], y: [3 4] cap(x): 10 x: [1 2 3 4] a: [1 2 3 4 0 0 0 0 0 0]
__lb__lang-golang type Program struct { } func (p Program) Run() { } func (p Program) Stop() { }
__lb__lang-php echo $myArray1["Greetings"]; echo $myArray2["Greetings"]; echo $myArray3["Greetings"];
__lb__lang-php $input => 123 sprintf( (string)$input => 123 strval($input) => 123 settype($input, "string") => 123
__lb__lang-cs public abstract class MustInitialize<T> { public MustInitialize(T parameters) { } }
__lb__lang-css display: grid; grid-template-columns: 100px auto; color:white; } background: red; grid-column: 1; } background: green; grid-column: 2; }
__lb__lang-cs static long Fibo(int n) { long n1 = 0, n2 = 1, fibo = 0; n++; try { for (int i = 1; i < n; i++) { n1 = n2; n2 = fibo; fibo = n1 + n2; } } catch {} return fibo; }
__lb__lang-golang package main import "fmt" func main() { message := `This is a Multi-line Text String Because it uses the raw-string back ticks instead of quotes. ` fmt.Printf("%s", message) }
__lb__lang-java Benchmark Mode Cnt Score Error Units test3_UsingForEachAndJava8 avgt 10 0.308 ± 0.021 µs/op test10_UsingEclipseMap avgt 10 0.309 ± 0.009 µs/op test1_UsingWhileAndMapEntry avgt 10 0.380 ± 0.014 µs/op test6_UsingForAndIterator avgt 10 0.387 ± 0.016 µs/op test2_UsingForEachAndMapEntry avgt 10 0.391 ± 0.023 µs/op test7_UsingJava8StreamApi avgt 10 0.510 ± 0.014 µs/op test9_UsingApacheIterableMap avgt 10 0.524 ± 0.008 µs/op test4_UsingKeySetAndForEach avgt 10 0.816 ± 0.026 µs/op test5_UsingKeySetAndIterator avgt 10 0.863 ± 0.025 µs/op test8_UsingJava8StreamApiParallel avgt 10 5.552 ± 0.185 µs/op
__lb__lang-java BeanClass cb = intent.getSerializableExtra("class");
__lb__lang-cs typeof(IMyInterface).IsAssignableFrom(someclass.GetType());
__lb__lang-cs static class Program { static Mutex mutex = new Mutex(true, "{8F6F0AC4-B9A1-45fd-A8CF-72F04E6BDE8F}"); [STAThread] ... }
__lb__lang-java search: { for (Type type : types) { for (Type t : types2) { if (some condition) { break search; } } } }
__lb__lang-perl use strict; use warnings; my $text = "M Y H A P P Y T E X T"; my $regex = if ($text =~ m/$regex/){ print "true\n"; } else { print "false\n"; }
__lb__lang-c ((__builtin_types_compatible_p(int, a)?foo(a):(__builtin_types_compatible_p(float, a)?foo(a):)
__lb__lang-golang dep ensure --add github.com/gorilla/websocket@1.2.0
__lb__lang-cs PropertyInfo[] propertyInfos; propertyInfos = typeof(MyClass).GetProperties(BindingFlags.Public|BindingFlags.Static);
__lb__lang-html <script src="https: <input type="checkbox" id="isAgeSelected"/> <div id="txtAge" style="display:none">Age is something</div>
__lb__lang-cs class Program { static void Main(string[] args) { A a=new A(); B b=new B(); int ida=a.ID, idb=b.ID; } }
__lb__lang-cs public static class ReturnType { public static readonly int Success = 1; public static readonly int Duplicate = 2; public static readonly int Error = -1; }
__lb__lang-java java.nio.file.Paths.get( getClass().getProtectionDomain().getCodeSource().getLocation().toURI() );
__lb__lang-sh MYVAR=sometext echo "double quotes gives you $MYVAR" echo
__lb__lang-java public static boolean isNumeric(String maybeNumeric) { return maybeNumeric != null && maybeNumeric.matches("[0-9]+"); }
__lb__lang-c int increment(void) { return global_variable++; } int oddball_value(void) { return oddball_struct.a + oddball_struct.b; }
__lb__lang-cs class Person { public int Id { get; set; } public int Name { get; set; } public override bool Equals(object obj) { return ((Person)obj).Id == Id; } public override int GetHashCode() { return Id.GetHashCode(); } }
__lb__lang-c 0,0 | 0,1 | 0,2 | 0,3 ----+-----+-----+---- 1,0 | 1,1 | 1,2 | 1,3 ----+-----+-----+---- 2,0 | 2,1 | 2,2 | 2,3
__lb__lang-sh echo "this goes to stdout" redirect_outputs_to_logfile /tmp/one.log echo "this goes to logfile" restore_standard_outputs echo "this goes to stdout"
__lb__lang-c typedef union { UINT8 buffer[PACKET_SIZE]; struct { UINT8 size; UINT8 cmd; UINT8 payload[PAYLOAD_SIZE]; UINT8 crc; } fields; }PACKET_T; void packet_builder(UINT8* buffer, UINT8 data) { static UINT8 received_bytes = 0; buffer[received_bytes] = data; received_bytes++; } void packet_handler(PACKET_T* packet) { if(packet->fields.size > TOO_BIG) { } if(packet->fields.cmd == CMD_X) { } }
__lb__lang-java final Set<String> a = Collections.unmodifiableSet(new HashSet<String>(){{ add("1"); add("2"); }})
__lb__lang-sh $ cat shl DIR=/tmp/so ls $DIR $ bash -x shl + DIR=/tmp/so + ls /tmp/so $
__lb__lang-java Throwable exception = ; Thread currentThread = Thread.currentThread(); Thread.UncaughtExceptionHandler uncaughtExceptionHandler = currentThread.getUncaughtExceptionHandler(); uncaughtExceptionHandler.uncaughtException(currentThread, exception);
__lb__lang-html <script src="https: <table style="width:100%"> <tr> <td>Normal:</td> <td><input type="checkbox" /></td> <td><input type="checkbox" checked="checked" /></td> <td><input type="checkbox" disabled="disabled" /></td> <td><input type="checkbox" disabled="disabled" checked="checked" /></td> </tr> <tr> <td>Small:</td> <td><input type="checkbox" class="myinput" /></td> <td><input type="checkbox" checked="checked" class="myinput" /></td> <td><input type="checkbox" disabled="disabled" class="myinput" /></td> <td><input type="checkbox" disabled="disabled" checked="checked" class="myinput" /></td> </tr> <tr> <td>Large:</td> <td><input type="checkbox" class="myinput large" /></td> <td><input type="checkbox" checked="checked" class="myinput large" /></td> <td><input type="checkbox" disabled="disabled" class="myinput large" /></td> <td><input type="checkbox" disabled="disabled" checked="checked" class="myinput large" /></td> </tr> <tr> <td>Custom icon:</td> <td><input type="checkbox" class="myinput large custom" /></td> <td><input type="checkbox" checked="checked" class="myinput large custom" /></td> <td><input type="checkbox" disabled="disabled" class="myinput large custom" /></td> <td><input type="checkbox" disabled="disabled" checked="checked" class="myinput large custom" /></td> </tr> </table>
__lb__lang-java import java.io.ByteArrayOutputStream; import java.io.InputStream; ... InputStream is = .... ByteArrayOutputStream baos = new ByteArrayOutputStream(8192); byte[] buffer = new byte[8192]; int count = 0; try { while ((count = is.read(buffer)) != -1) { baos.write(buffer, 0, count); } } finally { try { is.close(); } catch (Exception ignore) { } } String charset = "UTF-8"; String inputStreamAsString = baos.toString(charset);
__lb__lang-golang [[projects]] name = "github.com/gorilla/websocket" packages = ["."] revision = "ea4d1f681babbce9545c9c5f3d5194a789c89f5b" version = "v1.2.0" [solve-meta] analyzer-name = "dep" analyzer-version = 1 inputs-digest = "941e8dbe52e16e8a7dff4068b7ba53ae69a5748b29fbf2bcb5df3a063ac52261" solver-name = "gps-cdcl" solver-version = 1
__lb__lang-php public function getError() { return $this->error; }
__lb__lang-java public static void writeToFile(String text, String targetFilePath) throws IOException { Path targetPath = Paths.get(targetFilePath); byte[] bytes = text.getBytes(StandardCharsets.UTF_8); Files.write(targetPath, bytes, StandardOpenOption.CREATE); }
__lb__lang-java at com.example.myproject.Book.getTitle(Book.java:16)
__lb__lang-java @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) { if (requestCode == RSS_DOWNLOAD_REQUEST_CODE) { switch (resultCode) { case DownloadIntentService.INVALID_URL_CODE: handleInvalidURL(); break; case DownloadIntentService.ERROR_CODE: handleError(data); break; case DownloadIntentService.RESULT_CODE: handleRSS(data); break; } handleRSS(data); } super.onActivityResult(requestCode, resultCode, data); }
__lb__lang-cpp 73c68,69 < movss LCPI1_0(%rip), %xmm1 --- > movabsq $0, %rcx > cvtsi2ssq %rcx, %xmm1 81d76 < subss %xmm1, %xmm0
__lb__lang-sh l_TELNET=`echo "quit" | telnet $SERVER $PORT | grep "Escape character is"` if [ "$?" -ne 0 ]; then echo "Connection to $SERVER on port $PORT failed" exit 1 else echo "Connection to $SERVER on port $PORT succeeded" exit 0 fi
__lb__lang-hs 3 : take 2 [2,3,4] -- outermost function is a constructor (:) (3+1) : [4..] -- ditto \x -> 4+5 -- lambda expression
__lb__lang-java Listener listener = mock(Listener.class); w.addListener(listener); world.doAction(..); verify(listener).doAction();
__lb__lang-c for (int a, b, c; scanf("%d %d %d", &a, &b, &c) == 3; ) { consume(a, b, c); }
__lb__lang-cpp void *task(void *argument){ char* msg; msg = (char*)argument; std::cout<<msg<<std::endl; } int main(){ pthread_t thread1, thread2; int i1,i2; i1 = pthread_create( &thread1, NULL, task, (void*) "thread 1"); i2 = pthread_create( &thread2, NULL, task, (void*) "thread 2"); pthread_join(thread1,NULL); pthread_join(thread2,NULL); return 0; }
__lb__lang-cs class Sample { private readonly int _intField; public int IntProperty { get { return _intField; } } void setupStuff(ref int intField, int newValue) { intField = newValue; } public Sample(string theIntAsString) { int i = int.Parse(theIntAsString); setupStuff(ref _intField,i); } public Sample(int theInt) { setupStuff(ref _intField, theInt); } }
__lb__lang-java @component @controller @Repository @service @RestController
__lb__lang-html <div> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry </div>
__lb__lang-java <context:component-scan basePackages="" annotation-config="false"/>
__lb__lang-java public static String slurp (final File file) throws IOException { StringBuilder result = new StringBuilder(); BufferedReader reader = new BufferedReader(new FileReader(file)); try { char[] buf = new char[1024]; int r = 0; while ((r = reader.read(buf)) != -1) { result.append(buf, 0, r); } } finally { reader.close(); } return result.toString(); }
__lb__lang-html <div class="outer-container"> <div class="inner-container"> <div class="centered-content"> You can put anything here! </div> </div> </div>
__lb__lang-php function startsWith($haystack, $needle) { return strpos($haystack, $needle) === 0 ? 1 : 0; } function endsWith($haystack, $needle) { return stripos($haystack, $needle) === 0 ? 1 : 0; } function startsWith($haystack, $needle) { return strpos($haystack, $needle) === 0 ? } function endsWith($haystack, $needle) { return stripos($haystack, $needle) === 0 ? }
__lb__lang-cs using System; using System.Collections; using System.Collections.Generic; using System.Collections.ObjectModel; using System.Dynamic; using System.Linq; using System.Text; using System.Web.Script.Serialization; public sealed class DynamicJsonConverter : JavaScriptConverter { public override object Deserialize(IDictionary<string, object> dictionary, Type type, JavaScriptSerializer serializer) { if (dictionary == null) throw new ArgumentNullException("dictionary"); return type == typeof(object) ? new DynamicJsonObject(dictionary) : null; } public override IDictionary<string, object> Serialize(object obj, JavaScriptSerializer serializer) { throw new NotImplementedException(); } public override IEnumerable<Type> SupportedTypes { get { return new ReadOnlyCollection<Type>(new List<Type>(new[] { typeof(object) })); } } private sealed class DynamicJsonObject : DynamicObject { private readonly IDictionary<string, object> _dictionary; public DynamicJsonObject(IDictionary<string, object> dictionary) { if (dictionary == null) throw new ArgumentNullException("dictionary"); _dictionary = dictionary; } public override string ToString() { var sb = new StringBuilder("{"); ToString(sb); return sb.ToString(); } private void ToString(StringBuilder sb) { var firstInDictionary = true; foreach (var pair in _dictionary) { if (!firstInDictionary) sb.Append(","); firstInDictionary = false; var value = pair.Value; var name = pair.Key; if (value is string) { sb.AppendFormat("{0}:\"{1}\"", name, value); } else if (value is IDictionary<string, object>) { new DynamicJsonObject((IDictionary<string, object>)value).ToString(sb); } else if (value is ArrayList) { sb.Append(name + ":["); var firstInArray = true; foreach (var arrayValue in (ArrayList)value) { if (!firstInArray) sb.Append(","); firstInArray = false; if (arrayValue is IDictionary<string, object>) new DynamicJsonObject((IDictionary<string, object>)arrayValue).ToString(sb); else if (arrayValue is string) sb.AppendFormat("\"{0}\"", arrayValue); else sb.AppendFormat("{0}", arrayValue); } sb.Append("]"); } else { sb.AppendFormat("{0}:{1}", name, value); } } sb.Append("}"); } public override bool TryGetMember(GetMemberBinder binder, out object result) { if (!_dictionary.TryGetValue(binder.Name, out result)) { result = null; return true; } result = WrapResultObject(result); return true; } public override bool TryGetIndex(GetIndexBinder binder, object[] indexes, out object result) { if (indexes.Length == 1 && indexes[0] != null) { if (!_dictionary.TryGetValue(indexes[0].ToString(), out result)) { result = null; return true; } result = WrapResultObject(result); return true; } return base.TryGetIndex(binder, indexes, out result); } private static object WrapResultObject(object result) { var dictionary = result as IDictionary<string, object>; if (dictionary != null) return new DynamicJsonObject(dictionary); var arrayList = result as ArrayList; if (arrayList != null && arrayList.Count > 0) { return arrayList[0] is IDictionary<string, object> ? new List<object>(arrayList.Cast<IDictionary<string, object>>().Select(x => new DynamicJsonObject(x))) : new List<object>(arrayList.Cast<object>()); } return result; } } }
__lb__lang-cs var numbers = new List<int> { 6, 2, 8, 3 }; int sum = numbers.Aggregate(func: Add); private static int Add(int x, int y) { return x + y; }
__lb__lang-php function stringBeginsWith($haystack, $beginning, $caseInsensitivity = false) { if ($caseInsensitivity) return strncasecmp($haystack, $beginning, strlen($beginning)) === 0; else return strncmp($haystack, $beginning, strlen($beginning)) === 0; } function stringEndsWith($haystack, $ending, $caseInsensitivity = false) { if ($caseInsensitivity) return strcasecmp(substr($haystack, strlen($haystack) - strlen($ending)), $haystack) === 0; else return strpos($haystack, $ending, strlen($haystack) - strlen($ending)) !== false; }
__lb__lang-java public class SingletonImpl { private static final SingletonImpl instance = new SingletonImpl(); private static SingletonImpl alt; public static void setInstance(SingletonImpl inst) { alt = inst; } public static SingletonImpl getInstance() { if (alt != null) { return alt; } return instance; } public void a() { System.out.println("Default Method"); } } public class SingletonMock extends SingletonImpl { @Override public void a() { System.out.println("Mock Method"); } }
__lb__lang-golang buf := bytes.NewBuffer(nil) for _, filename := range filenames { f, _ := os.Open(filename) io.Copy(buf, f) f.Close() } s := string(buf.Bytes())
__lb__lang-java public Foo acquireFoo(int id) { Foo result = null; if (id > 50) { result = fooService.read(id); } else { result = new Foo(id); } assert result != null; return result; }
__lb__lang-cs <ListView Name="MyDictionaryListView"> <ListView.View> <GridView> <GridViewColumn DisplayMemberBinding="{Binding Path=MyString}" Header="MyStringColumnName"></GridViewColumn> <GridViewColumn DisplayMemberBinding="{Binding Path=MyValue}" Header="MyValueColumnName"></GridViewColumn> </GridView> </ListView.View> </ListView>
__lb__lang-php <?php $grass = "This is pratik joshi"; $needle = "pratik"; if (stripos($grass,$needle) !== false) { echo }else{ echo "does NOT contain word"; } ?>
__lb__lang-cpp using namespace std; int main () { string tmps; istringstream is ("the dellimiter is the space"); while (is.good ()) { is >> tmps; cout << tmps << "\n"; } return 0; }
__lb__lang-hs instance Functor Maybe where fmap _ Nothing = Nothing fmap f (Just a) = Just (f a)
__lb__lang-php $res = array(); $str = $str = preg_replace("/[^0-9\.]/", " ", $str); $str = trim(preg_replace( $arr = explode( for ($i = 0; $i < count($arr); $i++) { if (is_numeric($arr[$i])) { $res[] = $arr[$i]; } } print_r($res);
__lb__lang-cs using System.Data.Entity; query = query.Include(a => a.LazyLoadedProperty);
__lb__lang-php array_map($function, $array) === array_reduce($array, $MAP, array()) array_filter($array, $function) === array_reduce($array, $FILTER, array())
__lb__lang-css *::-webkit-input-placeholder { color: red; } *:-moz-placeholder { color: red; opacity: 1; } *::-moz-placeholder { color: red; opacity: 1; } *:-ms-input-placeholder { color: red; } *::-ms-input-placeholder { color: red; } *::placeholder { color: red; }
__lb__lang-php $inputstring = getFromUser(); $utf8string = iconv($current_encoding, $flawedstring = iconv($current_encoding,
__lb__lang-cs public static byte[] ReadFileBytes(string filePath) { byte[] buffer = null; try { using (FileStream fileStream = File.Open(filePath, FileMode.Open, FileAccess.ReadWrite, FileShare.None)) { int length = (int)fileStream.Length; buffer = new byte[length]; int count; int sum = 0; while ((count = fileStream.Read(buffer, sum, length - sum)) > 0) sum += count; fileStream.Close(); } } catch (IOException ex) { if (IsFileLocked(ex)) { } } catch (Exception ex) { } finally { } return buffer; } public static string ReadFileTextWithEncoding(string filePath) { string fileContents = string.Empty; byte[] buffer; try { using (FileStream fileStream = File.Open(filePath, FileMode.Open, FileAccess.ReadWrite, FileShare.None)) { int length = (int)fileStream.Length; buffer = new byte[length]; int count; int sum = 0; while ((count = fileStream.Read(buffer, sum, length - sum)) > 0) { sum += count; } fileStream.Close(); fileContents = System.Text.Encoding.Default.GetString(buffer); } } catch (IOException ex) { if (IsFileLocked(ex)) { } } catch (Exception ex) { } finally { } return fileContents; } public static string ReadFileTextNoEncoding(string filePath) { string fileContents = string.Empty; byte[] buffer; try { using (FileStream fileStream = File.Open(filePath, FileMode.Open, FileAccess.ReadWrite, FileShare.None)) { int length = (int)fileStream.Length; buffer = new byte[length]; int count; int sum = 0; while ((count = fileStream.Read(buffer, sum, length - sum)) > 0) { sum += count; } fileStream.Close(); char[] chars = new char[buffer.Length / sizeof(char) + 1]; System.Buffer.BlockCopy(buffer, 0, chars, 0, buffer.Length); fileContents = new string(chars); } } catch (IOException ex) { if (IsFileLocked(ex)) { } } catch (Exception ex) { } finally { } return fileContents; }
__lb__lang-java "C:\studio\eclipse.exe" -vm "C:\Program Files\Java\jre7\bin\server\jvm.dll" eclipse.vm="C:\Program Files\Java\jre7\bin\server\jvm.dll" java.home="C:\Program Files\Java\jre7" java.runtime.version=1.7.0
__lb__lang-java int.class.getName(); int.class.getCanonicalName(); int.class.getSimpleName(); Integer.class.getName(); Integer.class.getCanonicalName(); Integer.class.getSimpleName(); Map.Entry.class.getName(); Map.Entry.class.getCanonicalName(); Map.Entry.class.getSimpleName(); Class<?> anonymousInnerClass = new Cloneable() {}.getClass(); anonymousInnerClass.getName(); anonymousInnerClass.getCanonicalName(); anonymousInnerClass.getSimpleName(); Class<?> primitiveArrayClass = new int[0].getClass(); primitiveArrayClass.getName(); primitiveArrayClass.getCanonicalName(); primitiveArrayClass.getSimpleName(); Class<?> objectArrayClass = new Integer[0].getClass(); objectArrayClass.getName(); objectArrayClass.getCanonicalName(); objectArrayClass.getSimpleName();
__lb__lang-php function is_indexed_array(&$arr) { for (reset($arr); is_int(key($arr)); next($arr)); return is_null(key($arr)); } function is_sequential_array(&$arr, $base = 0) { for (reset($arr), $base = (int) $base; key($arr) === $base++; next($arr)); return is_null(key($arr)); }
__lb__lang-cs public class Foo { public void Bar<T>() { var baz = new List<T>(); } }
__lb__lang-php <?php $fname=array("Peter","Ben","Joe"); $age=array("35","37","43"); $c=array_combine($fname,$age); print_r($c); ?>
__lb__lang-cs foreach (DirectoryInfo subDir in new DirectoryInfo(targetDir).GetDirectories()) subDir.Delete(true);
__lb__lang-cs public static class ExceptionAssert { private static T GetException<T>(Action action, string message="") where T : Exception { try { action(); } catch (T exception) { return exception; } throw new AssertFailedException("Expected exception " + typeof(T).FullName + ", but none was propagated. " + message); } public static void Propagates<T>(Action action) where T : Exception { Propagates<T>(action, ""); } public static void Propagates<T>(Action action, string message) where T : Exception { GetException<T>(action, message); } public static void Propagates<T>(Action action, Action<T> validation) where T : Exception { Propagates(action, validation, ""); } public static void Propagates<T>(Action action, Action<T> validation, string message) where T : Exception { validation(GetException<T>(action, message)); } }
__lb__lang-sh test -z "$(git status --porcelain)" || red-alert "UNCLEAN UNCLEAN"
__lb__lang-hs main = do result <- tryJust selectDivByZero (evaluate $ 5 `div` 0) case result of Left what -> putStrLn $ "Division by " ++ what Right val -> putStrLn $ "The answer was: " ++ show val where selectDivByZero :: ArithException -> Maybe String selectDivByZero DivideByZero = Just "zero" selectDivByZero _ = Nothing
__lb__lang-sh today=$(</tmp/lovers.txt) tomorrow="${today echo "${tomorrow
__lb__lang-sh $ printf "a line without trailing linefeed" $ printf "a line with trailing linefeed\n"
__lb__lang-sh @for /f "usebackq" %i in (`git symbolic-ref -q HEAD`) do @echo %~ni
__lb__lang-java <project> [...] <properties> <maven.compiler.source>1.8</maven.compiler.source> <maven.compiler.target>1.8</maven.compiler.target> </properties> [...] </project>
__lb__lang-sh wget --include downloads/good --mirror --execute robots=off --no-host-directories --cut-dirs=1 --reject="index.html*" --continue http:
__lb__lang-perl use Log::Log4perl qw(:easy); Log::Log4perl->easy_init( { level => $DEBUG, file => ">>d:\\tokyo.log" } ); my $logger = Log::Log4perl::get_logger(); $logger->debug("your log message");
__lb__lang-java System.out.println( new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime()) ); System.out.println( new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime()) ); System.out.println(new SimpleDateFormat("MM/dd/yyyy").format(Calendar.getInstance().getTime())); System.out.println( new SimpleDateFormat("yyyyMMdd_HHmmss").format(Calendar.getInstance().getTime()) ); System.out.println( Calendar.getInstance().getTime() ); System.out.println( new Date(System.currentTimeMillis()) ); System.out.println( new Date().toString().substring(0, 10) ); System.out.println( new java.sql.Date(System.currentTimeMillis()) ); Date d = new Date(); System.out.println( (d.getTime() / 1000 / 60 / 60) % 24 + ":" + (d.getTime() / 1000 / 60) % 60 + ":" + (d.getTime() / 1000) % 60 ); System.out.println( new Timestamp(System.currentTimeMillis()) ); System.out.println( ZonedDateTime.now() ); System.out.println( ZonedDateTime.now().format(DateTimeFormatter.RFC_1123_DATE_TIME) ); System.out.println( LocalDate.now(ZoneId.of("Europe/Paris")) ); System.out.println( LocalTime.now().getHour() ); System.out.println( LocalDateTime.now() );
__lb__lang-sh $ set -- The quick brown fox jumps over the lazy dog $ echo "${@:~0}" dog
__lb__lang-hs guard :: Additive m => Bool -> m () guard True = return () guard False = fail
__lb__lang-sh tar -czf backup.tar.gz --exclude=PATTERN1 --exclude=PATTERN2 ... /path/to/backup
__lb__lang-c typedef enum { OPT_ON, OPT_OFF } foo_option; void foo(foo_option option);
__lb__lang-cs [TestMethod] [ExpectedException(typeof(Exception), AllowDerivedTypes = true)] public void ThrowExceptionTest() { }
__lb__lang-cpp inline111: fun() = 222, &fun = 0x402980 inline222: fun() = 222, &fun = 0x402980
__lb__lang-cs public class SomeObject : AbstractObject { public string AnotherProperty { get { return someProperty ? "Car" : "Plane"; } } bool someProperty = false; public bool SomeProperty { get { return someProperty; } set { SetValue(ref someProperty, value, "SomeProperty", "AnotherProperty"); } } public SomeObject() : base() { } }
__lb__lang-java StringWriter writer = new StringWriter(); IOUtils.copy(inputStream, writer, "UTF-8"); return writer.toString();
__lb__lang-java import java.lang.*; import java.util.*; import java.io.*; public class RandomWords { public static void main (String[] args) { Set<String> wordSet = new HashSet<String>(); String fileName = (args.length > 0 ? args[0] : "/usr/share/dict/words"); readWordMap(wordSet, fileName); System.err.println(wordSet.size() + " words read."); findRandomWords(wordSet); } private static void readWordMap (Set<String> wordSet, String fileName) { try { BufferedReader reader = new BufferedReader(new FileReader(fileName)); String line; while ((line = reader.readLine()) != null) { line = line.trim().toLowerCase(); if (isLowerAlpha(line)) wordSet.add(line); } } catch (IOException e) { System.err.println("Error reading from " + fileName + ": " + e); } } private static boolean isLowerAlpha (String word) { char[] c = word.toCharArray(); for (int i = 0; i < c.length; i++) { if (c[i] < } return true; } private static void findRandomWords (Set<String> wordSet) { char[] c = new char[256]; Random r = new Random(); for (long seed0 = 0; seed0 >= 0; seed0++) { for (int sign = -1; sign <= 1; sign += 2) { long seed = seed0 * sign; r.setSeed(seed); int i; for (i = 0; i < c.length; i++) { int n = r.nextInt(27); if (n == 0) break; c[i] = (char)((int) } String s = new String(c, 0, i); if (wordSet.contains(s)) { System.out.println(s + ": " + seed); wordSet.remove(s); } } } } }
__lb__lang-golang sudo add-apt-repository ppa:ubuntu-lxc/lxd-stable sudo apt-get update sudo apt-get install golang
__lb__lang-java public class Test { public static void main(String... args) throws Exception { URL location = Test.class.getProtectionDomain().getCodeSource().getLocation(); System.out.println(location.getFile()); } }
__lb__lang-cs using Microsoft.VisualBasic; using Microsoft.VisualBasic.CompilerServices;
__lb__lang-sh func_check_for_root() { if [ ! $( id -u ) -eq 0 ]; then echo "ERROR: $0 Must be run as root, Script terminating" ;exit 7 fi } func_check_for_root
__lb__lang-java static <E extends Enum<E>> Enum getEnumValue(String what, Class<E> enumClass) { Enum<E> unknown=null; for (Enum<E> enumVal: enumClass.getEnumConstants()) { if (what.compareToIgnoreCase(enumVal.name()) == 0) { return enumVal; } if (enumVal.name().compareToIgnoreCase("unknown") == 0) { unknown=enumVal; } } return unknown; }
__lb__lang-php foreach ($playerlist as $key => $value) { if (empty($value)) { unset($playerlist[$key]); } } if (empty($playerlist)) { }
__lb__lang-cs public class BenchmarkStringUnion { List<string> testData = new List<string>(); public BenchmarkStringUnion() { for(int i=0;i<1000;i++) { testData.Add(i.ToString()); } } [Benchmark] public string StringJoin() { var text = string.Join<string>(",", testData); return text; } [Benchmark] public string SeparatorSubstitution() { var sb = new StringBuilder(); var separator = String.Empty; foreach (var value in testData) { sb.Append(separator).Append(value); separator = ","; } return sb.ToString(); } [Benchmark] public string SeparatorStepBack() { var sb = new StringBuilder(); foreach (var item in testData) sb.Append(item).Append( if (sb.Length>=1) sb.Length--; return sb.ToString(); } [Benchmark] public string Enumerable() { var sb = new StringBuilder(); var e = testData.GetEnumerator(); bool moveNext = e.MoveNext(); while (moveNext) { sb.Append(e.Current); moveNext = e.MoveNext(); if (moveNext) sb.Append(","); } return sb.ToString(); } }
__lb__lang-css .tri { display:inline-block; width:100px; height:100px; background-image: linear-gradient(to bottom right, transparent 49.8%,red 50%), linear-gradient(to bottom left, transparent 49.8%,red 50%); background-size:50.5% 100%; background-position:left,right; background-repeat:no-repeat; animation:change 2s linear infinite alternate; } @keyframes change { from { width:100px; height:100px; } to { height:50px; width:180px; } }
__lb__lang-hs lend amount balance = let reserve = 100 newBalance = balance - amount in if balance < reserve then Nothing else Just newBalance
__lb__lang-php $emptyRemoved = remove_empty($linksArray); function remove_empty($array) { return array_filter($array, } function _remove_empty_internal($value) { return !empty($value) || $value === 0; }
__lb__lang-java public class MyTest { @Rule public ExpectedException exceptions = ExpectedException.none(); ClassUnderTest classUnderTest; @Before public void setUp() throws Exception { classUnderTest = new ClassUnderTest(); } @Test public void testAppleisSweetAndRed() throws Exception { exceptions.expect(Exception.class); exceptions.expectMessage("this is the exception message"); exceptions.expectCause(Matchers.<Throwable>equalTo(exceptionCause)); classUnderTest.methodUnderTest("param1", "param2"); } }
__lb__lang-cs public enum CompareDirection { Forward, Backward } private static unsafe bool UnsafeEquals(byte[] a, byte[] b, CompareDirection direction = CompareDirection.Forward) { if (a == b) return true; if (a == null || b == null || a.Length != b.Length) return false; const int UNROLLED = 16; int size = sizeof(long) * UNROLLED; int len = a.Length; int n = len / size; int r = len % size; fixed (byte* pb_a = a, pb_b = b) { if (r > 0 && direction == CompareDirection.Backward) { byte* pa = pb_a + len - 1; byte* pb = pb_b + len - 1; byte* phead = pb_a + len - r; while(pa >= phead) { if (*pa != *pb) return false; pa--; pb--; } } if (n > 0) { int nOffset = n * size; if (direction == CompareDirection.Forward) { long* pa = (long*)pb_a; long* pb = (long*)pb_b; long* ptail = (long*)(pb_a + nOffset); while (pa < ptail) { if (*(pa + 0) != *(pb + 0) || *(pa + 1) != *(pb + 1) || *(pa + 2) != *(pb + 2) || *(pa + 3) != *(pb + 3) || *(pa + 4) != *(pb + 4) || *(pa + 5) != *(pb + 5) || *(pa + 6) != *(pb + 6) || *(pa + 7) != *(pb + 7) || *(pa + 8) != *(pb + 8) || *(pa + 9) != *(pb + 9) || *(pa + 10) != *(pb + 10) || *(pa + 11) != *(pb + 11) || *(pa + 12) != *(pb + 12) || *(pa + 13) != *(pb + 13) || *(pa + 14) != *(pb + 14) || *(pa + 15) != *(pb + 15) ) { return false; } pa += UNROLLED; pb += UNROLLED; } } else { long* pa = (long*)(pb_a + nOffset); long* pb = (long*)(pb_b + nOffset); long* phead = (long*)pb_a; while (phead < pa) { if (*(pa - 1) != *(pb - 1) || *(pa - 2) != *(pb - 2) || *(pa - 3) != *(pb - 3) || *(pa - 4) != *(pb - 4) || *(pa - 5) != *(pb - 5) || *(pa - 6) != *(pb - 6) || *(pa - 7) != *(pb - 7) || *(pa - 8) != *(pb - 8) || *(pa - 9) != *(pb - 9) || *(pa - 10) != *(pb - 10) || *(pa - 11) != *(pb - 11) || *(pa - 12) != *(pb - 12) || *(pa - 13) != *(pb - 13) || *(pa - 14) != *(pb - 14) || *(pa - 15) != *(pb - 15) || *(pa - 16) != *(pb - 16) ) { return false; } pa -= UNROLLED; pb -= UNROLLED; } } } if (r > 0 && direction == CompareDirection.Forward) { byte* pa = pb_a + len - r; byte* pb = pb_b + len - r; byte* ptail = pb_a + len; while(pa < ptail) { if (*pa != *pb) return false; pa++; pb++; } } } return true; }
__lb__lang-cs private int GetAge(int _year, int _month, int _day { DateTime yourBirthDate= new DateTime(_year, _month, _day); DateTime todaysDateTime = DateTime.Today; int noOfYears = todaysDateTime.Year - yourBirthDate.Year; if (DateTime.Now.Month < yourBirthDate.Month || (DateTime.Now.Month == yourBirthDate.Month && DateTime.Now.Day < yourBirthDate.Day)) { noOfYears--; } return noOfYears; }
__lb__lang-php /** * Returns how long ago something happened in the past, showing it * as n seconds / minutes / hours / days / weeks / months / years ago. * * For periods over a day, it rolls over at midnight (so doesn * on current time of day), and it correctly accounts for month-lengths * and leap-years (months and years rollover on current day of month). * * $param string $timestamp in DateTime format * $return string description of interval */ function ago($timestamp) { $then = date_create($timestamp); $today = date_create( $diff = date_diff($then, $today); if ($diff->y > 0) return $diff->y. if ($diff->m > 0) return $diff->m. $diffW = floor($diff->d / 7); if ($diffW > 0) return $diffW. if ($diff->d > 1) return $diff->d. $now = date_create(); $diff = date_diff($then, $now); if ($diff->d > 0) return if ($diff->h > 0) return $diff->h. if ($diff->i > 0) return $diff->i. return $diff->s. }
__lb__lang-cs var originalFolder = @"c:\myHugeCollectionOfFiles"; var someFolder = Path.Combine(originalFolder, "..", Guid.NewGuid().ToString("N")); try { Directory.Move(originalFolder, someFolder); } catch { } finally { Directory.Move(someFolder, originalFolder); }
__lb__lang-php <?php $ids = array(1, 2, 3, 7, 8, 9); $inQuery = implode( $db = new PDO(...); $stmt = $db->prepare( FROM table WHERE id IN( ); foreach ($ids as $k => $id) $stmt->bindValue(($k+1), $id); $stmt->execute(); ?>
__lb__lang-sh function die() { echo "Error: $1"; exit 1 } function assertVariableDeclared() { IsDeclared "$1" || die "variable not declared: $1" } function expectVariables() { while (( $ assertVariableDeclared $1; shift done } function exampleFunction() { expectVariables inputStr outputStr outputStr="$inputStr world!" } function bonus() { local inputStr= local outputStr= exampleFunction echo $outputStr } bonus
__lb__lang-golang func TestPrintSomething(t *testing.T) { fmt.Println("Say hi") }
__lb__lang-cpp template< class Collection > void foo( Collection const& c ) { constexpr int n = n_items( c ); } auto main() -> int { int x[42]; foo( x ); }
__lb__lang-perl sub foo() { my $x = shift; my $y = shift; my $z = shift; }
__lb__lang-cs var success = Reflector.Get(DateTime.Now, null, "Date.Year", out int value);
__lb__lang-cpp while ( !s.empty() && isspace(s.back()) ) s.pop_back();
__lb__lang-java String packageNameToFilter = "org.springframework"; StringWriter sw = new StringWriter(); PrintWriter pw = new SelectivePrintWriter(sw, packageNameToFilter); e.printStackTrace(pw); String sStackTrace = sw.toString(); System.out.println(sStackTrace);
__lb__lang-sh $ set -o | grep noclobber noclobber on $ set +o noclobber $ set -o | grep noclobber noclobber off $ date > $testfile ; cat $testfile Mon Jan 7 13:24:27 CET 2013 $ rm $testfile
__lb__lang-php $expiry = 1800 ; if (isset($_SESSION[ session_unset(); session_destroy(); } $_SESSION[
__lb__lang-c My Flag 0001011011100001001010110111110101111000100100001111000000101000
__lb__lang-html <div> <div style="float: left;">Sidebar</div> <div style="clear: both;"></div> <!-- Clear the float --> </div>
__lb__lang-java private static final Map<String, String> MAP = new StickyMap<>( new MapEntry<>("name", "Jeffrey"), new MapEntry<>("age", "35") );
__lb__lang-hs {- import qualified Control.Exception as Exception import qualified Control.Monad as Monad import qualified Data.ByteString as ByteString import Data.Sequence as S newtype Msg = Msg ByteString.ByteString data Chan = Chan Int (Seq ByteString.ByteString) message :: Int -> Msg message n = Msg (ByteString.replicate 1024 (fromIntegral n)) maxSize :: Int maxSize = 200000 pushMsg :: Chan -> Msg -> IO Chan pushMsg (Chan !offset sq) (Msg msgContent) = Exception.evaluate $ let newSize = 1 + S.length sq newSq = sq |> msgContent in if newSize <= maxSize then Chan offset newSq else case S.viewl newSq of (_ :< newSq S.EmptyL -> error "Can getMsg :: Chan -> Int -> Maybe Msg getMsg (Chan offset sq) i_ = getMsg where getMsg | i < 0 = Nothing | i >= S.length sq = Nothing | otherwise = Just (Msg (S.index sq i)) main :: IO () main = Monad.foldM_ pushMsg (Chan 0 S.empty) (map message [1..5 * maxSize])
__lb__lang-cs string joined = string.Join(",", strings.ToArray()); string joined = string.Join(",", new List<string>(strings).ToArray());
__lb__lang-cs public static string SerializeDTO(DTO dto) { XmlSerializer xmlSer = new XmlSerializer(dto.GetType()); StringWriter sWriter = new StringWriter(); xmlSer.Serialize(sWriter, dto); return sWriter.ToString(); }
__lb__lang-sh if [ "$ then echo "No arguments supplied" else echo "Hello world" fi
__lb__lang-c void func(){ static int count; printf("%d, ", count); count++; } void main(){ while(true){ func(); } }
__lb__lang-perl use Readonly; Readonly my $HOME => Readonly my $WORK => Readonly my $MOBILE => $phone_number->{type} = $HOME;
__lb__lang-java public class IsInstanceOfTest { public static void main(final String[] args) { String s; s = ""; System.out.println((s instanceof String)); System.out.println(String.class.isInstance(s)); s = null; System.out.println((s instanceof String)); System.out.println(String.class.isInstance(s)); } }
__lb__lang-hs import Control.Monad import Data.Array.IO import Data.IORef qsort :: IOUArray Int Int -> Int -> Int -> IO () qsort a lo hi = do (h,l,p,t) <- liftM4 (,,,) z z z z when (lo < hi) $ do l .= lo h .= hi p .=. (a!hi) doWhile (get l .< get h) $ do while ((get l .< get h) .&& ((a.!l) .<= get p)) $ do modifyIORef l succ while ((get h .> get l) .&& ((a.!h) .>= get p)) $ do modifyIORef h pred b <- get l .< get h when b $ do t .=. (a.!l) lVal <- get l hVal <- get h writeArray a lVal =<< a!hVal writeArray a hVal =<< get t lVal <- get l writeArray a hi =<< a!lVal writeArray a lVal =<< get p hi qsort a lo hi' lo qsort a lo
__lb__lang-hs feed(h, <x, messages>) = let <y, message> = h(x) in <y, messages message> = let <y, message> = feed(f, g(x)) in <y, messages message> = let <y, message> = feed(f, <x, "called g. ">) in <y, messages message> = let <y, message> = let <z, msg> = f(x) in <z, "called g. " msg> in <y, messages message> = let <y, message> = let <z, msg> = <x, "called f. "> in <z, "called g. " msg> in <y, messages message> = let <y, message> = <x, "called g. " "called f. "> in <y, messages message> = <x, messages "called g. " "called f. "> = feed(f, <x, messages "called g. ">) = feed(f, feed(g, <x, messages>))
__lb__lang-sh for f in `find . -not -name "*Music*"` do cp $f /target/dir done
__lb__lang-golang agg := make(chan string) for _, ch := range chans { go func(c chan string) { for msg := range c { agg <- msg } }(ch) } select { case msg <- agg: fmt.Println("received ", msg) }
__lb__lang-php function isSequential($value){ if(is_array($value) || ($value instanceof \Countable && $value instanceof \ArrayAccess)){ for ($i = count($value) - 1; $i >= 0; $i--) { if (!isset($value[$i]) && !array_key_exists($i, $value)) { return false; } } return true; } else { throw new \InvalidArgumentException( sprintf( ); } }
__lb__lang-cpp bool ok; std::string; int i = QString::fromStdString(str).toInt(&ok); if (!ok) float f = QString::fromStdString(str).toFloat(&ok); if (!ok) double d = QString::fromStdString(str).toDouble(&ok); if (!ok)
__lb__lang-cpp FILE* fp = fopen(FILENAME, "r"); if (fp == NULL) exit(EXIT_FAILURE); char* line = NULL; size_t len = 0; while ((getline(&line, &len, fp)) != -1) { printf("%s", line); } fclose(fp); if (line) free(line);
__lb__lang-php namespace App\Helpers; class BobFinder { static function bob() { return } }
__lb__lang-sh if ls /path/to/your/files* 1> /dev/null 2>&1; then echo "files do exist" else echo "files do not exist" fi
__lb__lang-java import java.io.FileOutputStream; import java.io.IOException; import java.math.BigInteger; import java.net.URL; import java.nio.ByteBuffer; import java.nio.channels.Channels; import java.nio.channels.ReadableByteChannel; import java.nio.channels.WritableByteChannel; import java.security.DigestOutputStream; import java.security.MessageDigest; import java.security.NoSuchAlgorithmException; void downloadFile(String fromURL, String toFile, BigInteger md5) throws IOException, NoSuchAlgorithmException { ReadableByteChannel in = Channels.newChannel(new URL(fromURL).openStream()); MessageDigest md5Digest = MessageDigest.getInstance("MD5"); WritableByteChannel out = Channels.newChannel( new DigestOutputStream(new FileOutputStream(toFile), md5Digest)); ByteBuffer buffer = ByteBuffer.allocate(1024 * 1024); while (in.read(buffer) != -1) { buffer.flip(); out.write(buffer); buffer.clear(); } BigInteger md5Actual = new BigInteger(1, md5Digest.digest()); if (! md5Actual.equals(md5)) throw new RuntimeException( "MD5 mismatch for file " + toFile + ": expected " + md5.toString(16) + ", got " + md5Actual.toString(16) ); }
__lb__lang-css input[type="file"] { position: absolute; left: 0; opacity: 0; top: 0; bottom: 0; width: 100%; } div { position: absolute; left: 0; top: 0; bottom: 0; width: 100%; display: flex; align-items: center; justify-content: center; background: border: 3px dotted border-radius: 10px; } label { display: inline-block; position: relative; height: 100px; width: 400px; }
__lb__lang-php <html> <form method="post" action="?"> <table> <tr><td>Name</td><td><input type= <tr><td>Email</td><td><input type= <tr><td>Message</td><td><input type= <tr><td></td><td><input type= </table> </form> </html>
__lb__lang-java 1. Lists.charactersOf("String") 2. Lists.newArrayList(Splitter.fixedLength(1).split("String"))
__lb__lang-cpp void func5(std::vector<double>& v, const double& epsilon) { std::transform(v.begin(), v.end(), v.begin(), [epsilon](double d) -> double { if (d < epsilon) { return 0; } else { return d; } }); }
__lb__lang-cs [Usage("list", "List the objects we have so far")] [CommandDescription("List objects", Name = "list")] public class ListCommand : FubuCommand<NullInput> { public override bool Execute(NullInput input) { State.Objects.ForEach(Console.WriteLine); return false; } }
__lb__lang-c double Combiner(double a, double b, std::function<double (double,double)> func){ return func(a,b); } double Add(double a, double b){ return a+b; } double Mult(double a, double b){ return a*b; } int main(){ Combiner(12,13,Add); Combiner(12,13,Mult); }
__lb__lang-java /** * Used to determine whether the user making this call is subject to * teleportations. * * <p>As of {@link android.os.Build.VERSION_CODES * now automatically identify goats using advanced goat recognition technology.</p> * * @return Returns true if the user making this call is a goat. */ public boolean isUserAGoat() { return mContext.getPackageManager() .isPackageAvailable("com.coffeestainstudios.goatsimulator"); }
__lb__lang-java A a = new A(1); B b = new B(1,1); a.equals(b) == true; b.equals(a) == false;
__lb__lang-c struct Pair { char key[16]; char val[32]; }; struct Pair p_data[] = { STRUCTVAL_48("Key", "Value") }; int a_data[][4] = { STRUCTVAL_48(12, 19, 23, 37) };
__lb__lang-cpp person(const person& that) { name = new char[strlen(that.name) + 1]; strcpy(name, that.name); age = that.age; } person& operator=(const person& that) { if (this != &that) { delete[] name; name = new char[strlen(that.name) + 1]; strcpy(name, that.name); age = that.age; } return *this; }
__lb__lang-sh Usage: rl [OPTION]... [FILE]... Randomize the lines of a file (or stdin). -c, --count=N select N lines from the file -r, --reselect lines may be selected multiple times -o, --output=FILE send output to file -d, --delimiter=DELIM specify line delimiter (one character) -0, --null set line delimiter to null character (useful with find -print0) -n, --line-number print line number with output lines -q, --quiet, --silent do not output any errors or warnings -h, --help display this help and exit -V, --version output version information and exit
__lb__lang-c sykes2.c:1:1: warning: return type defaults to ‘int’ [-Wreturn-type] sykes2.c: In function ‘main’: sykes2.c:1:14: warning: value computed is not used [-Wunused-value] sykes2.c:1:1: warning: implicit declaration of function ‘putchar’ [-Wimplicit-function-declaration] sykes2.c:1:1: warning: suggest parentheses around arithmetic in operand of ‘|’ [-Wparentheses] sykes2.c:1:1: warning: suggest parentheses around arithmetic in operand of ‘|’ [-Wparentheses] sykes2.c:1:1: warning: control reaches end of non-void function [-Wreturn-type]
__lb__lang-sh $ manage.py syncdb -bash: manage.py: command not found
__lb__lang-sh find . -mindepth 1 -maxdepth 1 -type d| xargs -n 1 cp -i index.html
__lb__lang-css div{border:1px solid red;} img{width:100px;height:auto;}
__lb__lang-cs WeekDay parsedDayOrArgumentException = EnumUtils.Parse<WeekDay>("monday", ignoreCase:true); WeekDay parsedDayOrDefault; bool didParse = EnumUtils.TryParse<WeekDay>("clubs", out parsedDayOrDefault, ignoreCase:true); parsedDayOrDefault = EnumUtils.ParseOrDefault<WeekDay>("friday", ignoreCase:true, defaultValue:WeekDay.Sunday);
__lb__lang-perl foreach my $line ( <STDIN> ) { chomp( $line ); print "$line\n"; }
__lb__lang-php Fatal error: Cannot use object of type stdClass as array in C:\Users\Dail\software\abs.php on line 108
__lb__lang-html <ul class="bulletPics"> <li id="img1">movie</li> <li id="img2">earth</li> <li id="img3">kiwi</li> </ul>
__lb__lang-sh { read foo ; read filesystem size used avail prct mountpoint ; } < <(df -k /) echo $used 529020
__lb__lang-php $int = 5; echo $int . $int_as_string = "$int"; echo $int_as_string . $string_int = $int. echo $int_as_string .
__lb__lang-hs λ: addTwo x y = x + y λ: addTwo 1 2 3 λ: :t addTwo addTwo :: Num a => a -> a -> a
__lb__lang-css .myClass { border: solid; border-width: 0 480px 320px 0; border-image: url("http: }
__lb__lang-golang func switchboard(w http.ResponseWriter, r *http.Request) { uri := r.URL.RequestURI() if fp, err := os.Open("static" + uri); err == nil { defer fp.Close() staticHandler(w, r, fp) return } }
__lb__lang-java StringBuffer demo1 = new StringBuffer(“Hello”) ; demo1=new StringBuffer(“Bye”);
__lb__lang-java public class Foo() { private static class ParameterObject { int param1 = 1; String param2 = ""; } public static void main(String[] args) { new Foo().myMethod(new ParameterObject() {{ param1 = 10; param2 = "bar";}}); } private void myMethod(ParameterObject po) { } }
__lb__lang-java static void appendStringToFile(Path file, String s) throws IOException { try (BufferedWriter out = Files.newBufferedWriter(file, StandardCharsets.UTF_8, StandardOpenOption.APPEND)) { out.append(s); out.newLine(); } }
__lb__lang-cpp class CMyClass : public CMyBase {...}; class CMyOtherStuff {...} ; CMyBase *pSomething;
__lb__lang-php ----------------------------------------------- | Interface | Base Class | Trait | =============================================== > 1 per class | Yes | No | Yes | --------------------------------------------------------------------- Define Method Body | No | Yes | Yes | --------------------------------------------------------------------- Polymorphism | Yes | Yes | No | ---------------------------------------------------------------------
__lb__lang-php $mArray=array( $mSearch= $allowed=array_filter( array_keys($mArray), function($key) use ($mSearch){ return stristr($key,$mSearch); }); $mResult=array_intersect_key($mArray,array_flip($allowed));
__lb__lang-cpp sudo chown yourUserName:yourUserName /path/to/.so/file
__lb__lang-php /** * If $value is a JSON encoded object or array it will be decoded * and returned. * If $value is not JSON format, then it will be returned unmodified. */ function get_data( $value ) { if ( ! is_string( $value ) ) { return $value; } if ( strlen( $value ) < 2 ) { return $value; } if ( $json_data = json_decode( $value ); if ( ! $json_data ) { return $value; } return $json_data; }
__lb__lang-golang data := map[string]interface{}{ "Name": "Bob", "UserName": "bob92", "Roles": []string{"dbteam", "uiteam", "tester"}, }
__lb__lang-sh for databaseName in db_one db_two db_three do echo $databaseName done
__lb__lang-sh FROM microsoft/nanoserver SHELL ["powershell","-command"] RUN New-Item -ItemType Directory C:\Example ADD Execute-MyCmdlet.ps1 c:\example\ RUN c:\example\Execute-MyCmdlet -sample
__lb__lang-sh echo -ne "15\n100\n"|sort -c |& tee >sort_result.txt
__lb__lang-cs using System; using System.Data; using System.Configuration; using System.Text; using System.Security.Cryptography; namespace Encription { class CryptorEngine { public static string Encrypt(string ToEncrypt, bool useHasing) { byte[] keyArray; byte[] toEncryptArray = UTF8Encoding.UTF8.GetBytes(ToEncrypt); string Key = "Bhagwati"; if (useHasing) { MD5CryptoServiceProvider hashmd5 = new MD5CryptoServiceProvider(); keyArray = hashmd5.ComputeHash(UTF8Encoding.UTF8.GetBytes(Key)); hashmd5.Clear(); } else { keyArray = UTF8Encoding.UTF8.GetBytes(Key); } TripleDESCryptoServiceProvider tDes = new TripleDESCryptoServiceProvider(); tDes.Key = keyArray; tDes.Mode = CipherMode.ECB; tDes.Padding = PaddingMode.PKCS7; ICryptoTransform cTransform = tDes.CreateEncryptor(); byte[] resultArray = cTransform.TransformFinalBlock(toEncryptArray, 0, toEncryptArray.Length); tDes.Clear(); return Convert.ToBase64String(resultArray, 0, resultArray.Length); } public static string Decrypt(string cypherString, bool useHasing) { byte[] keyArray; byte[] toDecryptArray = Convert.FromBase64String(cypherString); string key = "Bhagwati"; if (useHasing) { MD5CryptoServiceProvider hashmd = new MD5CryptoServiceProvider(); keyArray = hashmd.ComputeHash(UTF8Encoding.UTF8.GetBytes(key)); hashmd.Clear(); } else { keyArray = UTF8Encoding.UTF8.GetBytes(key); } TripleDESCryptoServiceProvider tDes = new TripleDESCryptoServiceProvider(); tDes.Key = keyArray; tDes.Mode = CipherMode.ECB; tDes.Padding = PaddingMode.PKCS7; ICryptoTransform cTransform = tDes.CreateDecryptor(); try { byte[] resultArray = cTransform.TransformFinalBlock(toDecryptArray, 0, toDecryptArray.Length); tDes.Clear(); return UTF8Encoding.UTF8.GetString(resultArray,0,resultArray.Length); } catch (Exception ex) { throw ex; } } } }
__lb__lang-java List<String> list = new ArrayList<String>(m.keySet());
__lb__lang-cs var numberString = "123"; int number; int.TryParse(numberString , out number);
__lb__lang-cs Response.Write("<br/> " + HttpContext.Current.Request.Url.Host); Response.Write("<br/> " + HttpContext.Current.Request.Url.Authority); Response.Write("<br/> " + HttpContext.Current.Request.Url.Port); Response.Write("<br/> " + HttpContext.Current.Request.Url.AbsolutePath); Response.Write("<br/> " + HttpContext.Current.Request.ApplicationPath); Response.Write("<br/> " + HttpContext.Current.Request.Url.AbsoluteUri); Response.Write("<br/> " + HttpContext.Current.Request.Url.PathAndQuery);
__lb__lang-java BBB...31744 BBB...31744 BBB...31744 BBB...31744 BBB...226365807 BBB...31744 BBB...31744 BBB...31744 BBB...31744 BBB...226365807 . . .
__lb__lang-cs class BaseClass { public BaseClass():this(10) { } public BaseClass(int val) { } } class Program { static void Main(string[] args) { new BaseClass(); ReadLine(); } }
__lb__lang-sh function isNaturalNumber() { [[ ${1} =~ ^[0-9]+$ ]] } function isInteger() { [[ ${1} == ?(-)+([0-9]) ]] } function isFloat() { [[ ${1} == ?(-)@(+([0-9]).*([0-9])|*([0-9]).+([0-9]))?(E?(-|+)+([0-9])) ]] } function isNumber() { isNaturalNumber $1 || isInteger $1 || isFloat $1 } bools=("TRUE" "FALSE") int_values="0 123 -0 -123" float_values="0.0 0. .0 -0.0 -0. -.0 \ 123.456 123. .456 -123.456 -123. -.456 \ 123.456E08 123.E08 .456E08 -123.456E08 -123.E08 -.456E08 \ 123.456E+08 123.E+08 .456E+08 -123.456E+08 -123.E+08 -.456E+08 \ 123.456E-08 123.E-08 .456E-08 -123.456E-08 -123.E-08 -.456E-08" false_values="blah meh mooh blah5 67mooh a123bc" for value in ${int_values} ${float_values} ${false_values} do printf " %5s=%-30s" $(isNaturalNumber $value) ${bools[$?]} $(printf "isNaturalNumber(%s)" $value) printf "%5s=%-24s" $(isInteger $value) ${bools[$?]} $(printf "isInteger(%s)" $value) printf "%5s=%-24s" $(isFloat $value) ${bools[$?]} $(printf "isFloat(%s)" $value) printf "%5s=%-24s\n" $(isNumber $value) ${bools[$?]} $(printf "isNumber(%s)" $value) done
__lb__lang-java OffsetDateTime odtUtc = odt.withOffsetSameInstant( ZoneOffset.UTC );
__lb__lang-php <script type="text/javascript"> var js_variable = <script>
__lb__lang-cs using System; class Program { static void Main(string[] args) { string t = "爱虫"; string s = "Test\ud800Test"; byte[] dumpToBytes = GetBytes(s); string getItBack = GetString(dumpToBytes); foreach (char item in getItBack) { Console.WriteLine("{0} {1}", item, ((ushort)item).ToString("x")); } } static byte[] GetBytes(string str) { byte[] bytes = new byte[str.Length * sizeof(char)]; System.Buffer.BlockCopy(str.ToCharArray(), 0, bytes, 0, bytes.Length); return bytes; } static string GetString(byte[] bytes) { char[] chars = new char[bytes.Length / sizeof(char)]; System.Buffer.BlockCopy(bytes, 0, chars, 0, bytes.Length); return new string(chars); } }
__lb__lang-cpp void swap1(char **str1_ptr, char **str2_ptr) { char *temp = *str1_ptr; *str1_ptr = *str2_ptr; *str2_ptr = temp; } int main() { char *str1 = "Hi"; char *str2 = "Hello"; swap1(&str1, &str2); printf("str1 is %s, str2 is %s", str1, str2); return 0; }
__lb__lang-css .vertical { writing-mode: vertical-lr; text-align: center; height: 100%; width: 100%; } .horizontal { display: inline-block; writing-mode: horizontal-tb; width: 100%; text-align: center; } .content { text-align: left; display: inline-block; border: 1px solid padding: .5em 1em; border-radius: 1em; }
__lb__lang-php var formData = formData; $.ajax({ type: "POST", url: url, async: false, data: formData, processData: false, contentType: false, xhr: function () { $(" var xhr = new window.XMLHttpRequest(); xhr.upload.addEventListener("progress", function (evt) { if (evt.lengthComputable) { var percentComplete = (evt.loaded / evt.total) * 100; $( } }, false); xhr.addEventListener("progress", function (evt) { if (evt.lengthComputable) { var percentComplete = evt.loaded / evt.total; } }, false); return xhr; }, beforeSend: function (xhr) { qyuraLoader.startLoader(); }, success: function (response, textStatus, jqXHR) { qyuraLoader.stopLoader(); try { $(" var data = $.parseJSON(response); if (data.status == 0) { if (data.isAlive) { $( console.log(data.errors); $.each(data.errors, function (index, value) { if (typeof data.custom == $( } else { $( if (index == { $( } else { $( } } }); if (data.errors.TopError) { $( $( setTimeout(function () { $( $( }, 5000); } } else { $( } } else { $( $( $( if (data.msg != bootbox.alert({closeButton: false, message: data.msg, callback: function () { if (data.url) { window.location.href = } else { location.reload(true); } }}); } else { bootbox.alert({closeButton: false, message: "Success", callback: function () { if (data.url) { window.location.href = } else { location.reload(true); } }}); } } } catch (e) { if (e) { $( $( setTimeout(function () { $( $( }, 5000); } } } });
__lb__lang-c template<typename T, size_t SIZE> size_t getSize(T (&)[SIZE]) { return SIZE; } struct foo_t { int ball; }; int main() { foo_t foos3[] = {{1},{2},{3}}; foo_t foos5[] = {{1},{2},{3},{4},{5}}; printf("%u\n", getSize(foos3)); printf("%u\n", getSize(foos5)); return 0; }
__lb__lang-c void *malloc( size_t n); void *calloc( size_t n, size_t t)
__lb__lang-java public class VariableStorage implements Serializable { private String inString; public String getInString() { return inString; } public void setInString(String inString) { this.inString = inString; } }
__lb__lang-cs public class MyClass : BaseClass { private MyClass(string someString) : base(someString) { } public static MyClass FactoryMethod(string someString) { return new MyClass(someString); } }
__lb__lang-hs words :: String -> [String] words s = case dropWhile Char.isSpace s of "" -> [] s where (w, s
__lb__lang-cs collection .AsParallel() .Where((e,i) => ) .ForAll(e => { }); collection .AsParallel() .Select((e, i) => new MyWrapper(e, i));
__lb__lang-perl $ perl -wle 1 $ perl -wle 1 $ perl -wle (empty line)
__lb__lang-cs var transactionsOnWorkingDay = GetTransactionOnLatestWorkingDay(); var justNeedOneToProcess = transactionsOnWorkingDay.First():
__lb__lang-php /* Do some operation here, like talk to the database, the file-session * The world beyond, limbo, the city of shimmers, and Canada. * * AJAX generally uses strings, but you can output JSON, HTML and XML as well. * It all depends on the Content-type header that you send with your AJAX * request. */ echo json_encode(42);
__lb__lang-sh bool=true if [ "$bool" = true ]; then if [ "$bool" = "true" ]; then if [[ "$bool" = true ]]; then if [[ "$bool" = "true" ]]; then if [[ "$bool" == true ]]; then if [[ "$bool" == "true" ]]; then if test "$bool" = true; then if test "$bool" = "true"; then
__lb__lang-java 2*(i*i) | 2*i*i ----------+---------- 0.5183738 | 0.6246434 0.5298337 | 0.6049722 0.5308647 | 0.6603363 0.5133458 | 0.6243328 0.5003011 | 0.6541802 0.5366181 | 0.6312638 0.515149 | 0.6241105 0.5237389 | 0.627815 0.5249942 | 0.6114252 0.5641624 | 0.6781033 0.538412 | 0.6393969 0.5466744 | 0.6608845 0.531159 | 0.6201077 0.5048032 | 0.6511559 0.5232789 | 0.6544526
__lb__lang-cpp std::string str("hello world! "); boost::trim_right(str);
__lb__lang-cs public class Order : IComparable { public DateTime OrderDate { get; set; } public int OrderId { get; set; } public int CompareTo(object obj) { Order orderToCompare = obj as Order; if (orderToCompare.OrderDate < OrderDate || orderToCompare.OrderId < OrderId) { return 1; } if (orderToCompare.OrderDate > OrderDate || orderToCompare.OrderId > OrderId) { return -1; } return 0; } }
__lb__lang-cs public static class EnumerableExtensions { public static string Join<T>(this IEnumerable<T> self, string separator) { return String.Join(separator, self.Select(e => e.ToString()).ToArray()); } } public class Person { public string FirstName { get; set; } public string LastName { get; set; } public override string ToString() { return string.Format("{0} {1}", FirstName, LastName); } } List<Person> people = new List<Person>(); string fullNames = people.Join(", "); string lastNames = people.Select(p => p.LastName).Join(", ");
__lb__lang-java String string = "004-034556"; String[] parts = string.split("-"); String part1 = parts[0]; String part2 = parts[1];
__lb__lang-cs class FootballTeam : List<FootballPlayer> { public string TeamName; public int RunningTotal }
__lb__lang-java wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http:
__lb__lang-html <div id="container"> <!-- Other elements here --> <div id="copyright"> Copyright Foo web designs </div> </div>
__lb__lang-css span { display: inline-block; width: 100px; background-color: palevioletred; }
__lb__lang-css .box { display: flex; flex-wrap: wrap; justify-content: center; align-items: center; }
__lb__lang-hs import qualified Data.Text as T main = print $ T.splitOn (T.pack " ") (T.pack "this is a test")
__lb__lang-c typedef void T(); T t; struct X { T t; }; typedef int T; T t;
__lb__lang-php $days = (strtotime($endDate) - strtotime($startDate)) / (60 * 60 * 24); print $days;
__lb__lang-cs string[] result; result = string.Split("My simple string", " "); string foo = "my - string - i - want - split"; result = foo.Split("-"); result = foo.Split("-", StringSplitOptions.RemoveEmptyEntries);
__lb__lang-php function Redirect($url, $permanent = false) { if (headers_sent() === false) { header( } exit(); } Redirect(
__lb__lang-cpp int n = calculate_five(); int** p = new int*[n]; for (int i = 0; i < n; ++i) { p[i] = new int[n - i]; } for (int i = 0; i < n; ++i) { delete[] p[i]; } delete[] p;
__lb__lang-c int foo( float *f, int *i ) { *i = 1; *f = 0.f; return *i; } int main() { int x = 0; std::cout << x << "\n"; x = foo(reinterpret_cast<float*>(&x), &x); std::cout << x << "\n"; }
__lb__lang-cpp std::cout << *(x+3) << ", " << *(x+7) << std::endl;
__lb__lang-php object(stdClass) [0]=> string(12) "qualitypoint" [1]=> string(12) "technologies" [2]=> string(5) "India" }
__lb__lang-php if (preg_match( $aJson = json_decode($string, true); if (!is_null($aJson)) { ... do stuff here ... } }
__lb__lang-php abstract class LongPoller { protected $sleepTime = 5; protected $timeoutTime = 30; function __construct() { } function setTimeout($timeout) { $this->timeoutTime = $timeout; } function setSleep($sleep) { $this->sleepTime = $sleepTime; } public function run() { $data = NULL; $timeout = 0; set_time_limit($this->timeoutTime + $this->sleepTime + 15); while($data == NULL && $timeout < $this->timeoutTime) { $data = $this->loadData(); if($data == NULL){ flush(); sleep($this->sleepTime); $timeout += $this->sleepTime; }else{ echo $data; flush(); } } } protected abstract function loadData(); }
__lb__lang-c unsigned char rev(char MSB) { unsigned char LSB=0; _FOR(i,0,8) { LSB= LSB << 1; if(MSB&1) LSB = LSB | 1; MSB= MSB >> 1; } return LSB; }
__lb__lang-php <script>var details = {"name":"supun","age":456,"weight":"55"};alert(details);console.log(details);</script>
__lb__lang-hs G : Set A : Set ------------------------------- K : (a : A) -> (g : G) -> A
__lb__lang-sh case "$var" in * *[[:space:]]*) have_whitespace "$var";; *[^-+.,A-Za-z0-9]*) have_nonalnum "$var";; *[-+.,]*) have_punctuation "$var";; *) default_case "$var";; esac
__lb__lang-css html, body { width: 100%; height: 100%; } .overlay { min-height: 100%; position: relative; } .container { width: 900px; position: relative; padding-bottom: 50px; } .height { width: 900px; height: 50px; } .footer { width: 900px; height: 50px; position: absolute; bottom: 0; }
__lb__lang-java Object[] arr = new Object[] { "ab", "cd" }; String[] arr2 = (String[]) arr;
__lb__lang-sh set SCRIPT=`readlink -f "$0"` set SCRIPTPATH=`dirname "$SCRIPT"` echo $SCRIPTPATH
__lb__lang-sh dir1=/tmp/path_to_dir1 dir2=/tmp/path_to_dir2 diff -rq $dir1 $dir2 | sed -e "s|Only in $dir2\(.*\): \(.*\)|cp -r $dir2\1/\2 $dir1\1|" | sed -e "s|Only in $dir1\(.*\): \(.*\)|cp -r $dir1\1/\2 $dir2\1|"
__lb__lang-cpp $ gcc -o eg1 -I. -L. -lmy_lib eg1.c /tmp/ccQk1tvs.o: In function `main eg1.c:(.text+0x5): undefined reference to `hw' collect2: error: ld returned 1 exit status
__lb__lang-java Algorithm ArrayList LinkedList seek front O(1) O(1) seek back O(1) O(1) seek to index O(1) O(N) insert at front O(N) O(1) insert at back O(1) O(1) insert after an item O(N) O(1)
__lb__lang-cs public static class TaskHelper { public static void MyRunTaskSynchronously(this Task task) { if (MyIfWpfDispatcherThread) { var result = Dispatcher.CurrentDispatcher.InvokeAsync(async () => { await task; }); result.Wait(); if (result.Status != DispatcherOperationStatus.Completed) { throw new Exception("Error E99213. Task did not run to completion."); } } else { task.Wait(); if (task.Status != TaskStatus.RanToCompletion) { throw new Exception("Error E33213. Task did not run to completion."); } } } public static T MyRunTaskSynchronously<T>(this Task<T> task) { if (MyIfWpfDispatcherThread) { T res = default(T); var result = Dispatcher.CurrentDispatcher.InvokeAsync(async () => { res = await task; }); result.Wait(); if (result.Status != DispatcherOperationStatus.Completed) { throw new Exception("Error E89213. Task did not run to completion."); } return res; } else { T res = default(T); var result = Task.Run(async () => res = await task); result.Wait(); if (result.Status != TaskStatus.RanToCompletion) { throw new Exception("Error E12823. Task did not run to completion."); } return res; } } public static bool MyIfWpfDispatcherThread { get { return Application.Current.Dispatcher.CheckAccess(); } } }
__lb__lang-php function Redirect($url, $code = 302) { if (strncmp( { if (headers_sent() !== true) { if (strlen(session_id()) > 0) { session_regenerate_id(true); session_write_close(); } if (strncmp( { header(sprintf( } header( } exit(); } }
__lb__lang-cs GetDictionaryFromType().Keys GetDictionaryFromType().Values
__lb__lang-sh function isInteger() { [[ ${1} == ?(-)+([0-9]) ]] } function isFloat() { [[ ${1} == ?(-)@(+([0-9]).*([0-9])|*([0-9]).+([0-9]))?(E?(-|+)+([0-9])) ]] }
__lb__lang-golang [/tmp/go-build162373819/command-line-arguments/_obj/exe/modbus 1 2 3 4 5] [1 2 3 4 5] 3
__lb__lang-cs MyString.Equals("Somestring")) MyString == "Somestring" String.Equals("Somestring", MyString);
__lb__lang-c char name[10][10] int i,j,n; printf("\nEnter size of array = "); scanf("%d",&n); for(i=0;i<n;i++) { for(j=0;j<1;j++) { printf("\nEnter name = "); scanf("%s",&name[i]); } } for(i=0;i<n;i++) { for(j=0;j<1;j++) { printf("%d\t|\t%s\t|\t%s",rollno[i][j],name[i],sex[i]); } printf("\n"); }
__lb__lang-cpp int main() { std::array<int,3> arr; std::cout<<arr.size()<<std::endl; auto it=arr.end(); std::cout<<arr.back()<<"\t"<<arr[arr.size()-1]<<"\t"<<*(--it); return 0; }
__lb__lang-css height: 250px; display:flex; flex-direction:column; background-color:yellow; } .top{ flex: 1; }
__lb__lang-perl my %params = map { $_ => 1 } @badparams; if(exists($params{$someparam})) { ... }
__lb__lang-php <?php $ids = array(1,2,3,7,8,9); $db = new PDO(...); foreach($ids as &$val) $val=$db->quote($val); $in = implode( $stmt = $db->prepare( FROM table WHERE id IN( ); $stmt->execute(); ?>
__lb__lang-php <?php /** * Class Enum * * @author Christopher Fox <christopher.fox@gmx.de> * * @version 1.0 * * This class provides the function of an enumeration. * The values of Enum elements are unique (even between different Enums) * as you would expect them to be. * * Constructing a new Enum: * ======================== * * In the following example we construct an enum called "UserState" * with the elements "inactive", "active", "banned" and "deleted". * * <code> * Enum::Create( * </code> * * Using Enums: * ============ * * The following example demonstrates how to compare two Enum elements * * <code> * var_dump(UserState::inactive == UserState::banned); * var_dump(UserState::active == UserState::active); * </code> * * Special Enum methods: * ===================== * * Get the number of elements in an Enum: * * <code> * echo UserState::CountEntries(); * </code> * * Get a list with all elements of the Enum: * * <code> * $allUserStates = UserState::GetEntries(); * </code> * * Get a name of an element: * * <code> * echo UserState::GetName(UserState::deleted); * </code> * * Get an integer ID for an element (e.g. to store as a value in a database table): * This is simply the index of the element (beginning with 1). * Note that this ID is only unique for this Enum but now between different Enums. * * <code> * echo UserState::GetDatabaseID(UserState::active); * </code> */ class Enum { /** * @var Enum $instance The only instance of Enum (Singleton) */ private static $instance; /** * @var array $enums An array of all enums with Enum names as keys * and arrays of element names as values */ private $enums; /** * Constructs (the only) Enum instance */ private function __construct() { $this->enums = array(); } /** * Constructs a new enum * * @param string $name The class name for the enum * @param mixed $_ A list of strings to use as names for enum entries */ public static function Create($name, $_) { if (self::$instance===null) { self::$instance = new Enum(); } $args = func_get_args(); array_shift($args); self::$instance->add($name, $args); } /** * Creates an enumeration if this hasn * * @param string $name The class name for the enum * @param array $fields The names of the enum elements */ private function add($name, $fields) { if (!array_key_exists($name, $this->enums)) { $this->enums[$name] = array(); $classDeclaration = "class " . $name . " {\n" . "private static \$name = . $this->getClassConstants($name, $fields) . $this->getFunctionGetEntries($name) . $this->getFunctionCountEntries($name) . $this->getFunctionGetDatabaseID() . $this->getFunctionGetName() . "}"; eval($classDeclaration); } } /** * Returns the code of the class constants * for an enumeration. These are the representations * of the elements. * * @param string $name The class name for the enum * @param array $fields The names of the enum elements * * @return string The code of the class constants */ private function getClassConstants($name, $fields) { $constants = foreach ($fields as $field) { $uniqueID = $name . ";" . $field; $constants .= "const " . $field . " = array_push($this->enums[$name], $uniqueID); } return $constants; } /** * Returns the code of the function "GetEntries()" * for an enumeration * * @param string $name The class name for the enum * * @return string The code of the function "GetEntries()" */ private function getFunctionGetEntries($name) { $entryList = foreach ($this->enums[$name] as $key => $entry) { if ($key > 0) $entryList .= $entryList .= " } return "public static function GetEntries() { \n" . " return array(" . $entryList . ");\n" . "}\n"; } /** * Returns the code of the function "CountEntries()" * for an enumeration * * @param string $name The class name for the enum * * @return string The code of the function "CountEntries()" */ private function getFunctionCountEntries($name) { return "public static function CountEntries() { \n" . " return " . count($this->enums[$name]) . ";\n" . "}\n"; } /** * Returns the code of the function "GetDatabaseID()" * for an enumeration * * @return string The code of the function "GetDatabaseID()" */ private function getFunctionGetDatabaseID() { return "public static function GetDatabaseID(\$entry) { \n" . "\$key = array_search(\$entry, self::GetEntries());\n" . " return \$key + 1;\n" . "}\n"; } /** * Returns the code of the function "GetName()" * for an enumeration * * @return string The code of the function "GetName()" */ private function getFunctionGetName() { return "public static function GetName(\$entry) { \n" . "return substr(\$entry, strlen(self::\$name) + 1 , strlen(\$entry));\n" . "}\n"; } } ?>
__lb__lang-cs public AbstractType New { get { return (AbstractType) Activator.CreateInstance(GetType()); } }
__lb__lang-html <body> <div class="trans"> </div> <div class="trans2"> <p> text text text </p> </div> </body>
__lb__lang-css .vcenter{ display: table; background: width: 150px; height: 150px; text-align: center; } .vcenter :first-child { display: table-cell; vertical-align: middle; }
__lb__lang-php $first = array_slice($array, 0, 1); $val= $first[0];
__lb__lang-cs public static T Runner<T>(Func<T> funcToRun) { return funcToRun(); }
__lb__lang-cs PS> [System.StringComparer]::Ordinal.Compare("_", "0") 47 PS> [System.StringComparer]::InvariantCulture.Compare("_", "0") -1
__lb__lang-cs public App() { AppDomain.CurrentDomain.AssemblyResolve +=new ResolveEventHandler(CurrentDomain_AssemblyResolve); } System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args) { string dllName = args.Name.Contains( dllName = dllName.Replace(".", "_"); if (dllName.EndsWith("_resources")) return null; System.Resources.ResourceManager rm = new System.Resources.ResourceManager(GetType().Namespace + ".Properties.Resources", System.Reflection.Assembly.GetExecutingAssembly()); byte[] bytes = (byte[])rm.GetObject(dllName); return System.Reflection.Assembly.Load(bytes); }
__lb__lang-c int main() { if (x < 2) { x = 3; } } float test() { if (x < 2) x = 3; }
__lb__lang-php <? header( echo After 5 seconds this will go away and a cat will appear... --endofsection flush(); sleep(5); echo $stream = fopen( fpassthru($stream); fclose($stream); echo ' --endofsection
__lb__lang-cs string s = "Able"; string s2 = s; s = "Baker"; Console.WriteLine(s2);
__lb__lang-java void MyParameterizedFunction(String param1, int param2, Boolean... params) { assert params.length <= 1; bool param3 = params.length > 0 ? params[0].booleanValue() : false; }
__lb__lang-php $d = DateTime::createFromFormat( echo $d->getTimestamp();
__lb__lang-php function read_file($filename = $buffer = array(); $source_file = fopen( $filename, "r" ) or die("Couldn while (!feof($source_file)) { $buffer[] = fread($source_file, 4096); } return $buffer; }
__lb__lang-hs infixr 9 . (.) :: (b -> c) -> (a -> b) -> (a -> c) (f . g) x = f (g x) infixr 0 $ ($) :: (a -> b) -> a -> b f $ x = f x
__lb__lang-java int one = 1; String color = "red"; StringBuilder sb = new StringBuilder(); sb.append("One=").append(one).append(", Color=").append(color).append( System.out.print(sb);
__lb__lang-cs <h2> <a href="">Jack</a> </h2> <ul> <li class="tel"> <a href="">81 75 53 60</a> </li> </ul> <h2> <a href="">Roy</a> </h2> <ul> <li class="tel"> <a href="">44 52 16 87</a> </li> </ul>
__lb__lang-java private static final Map<Integer, String> myMap2 = new HashMap<>(); static { p(1, "one"); p(2, "two"); p(3, "three"); } private static void p(Integer k, String v) { myMap2.put(k, v); }
__lb__lang-sh $ export B="Bob"; echo [1] 3306 $ B="Banana"; echo Subprocess 1 has B=Bob Subprocess 2 has B=Banana [1]+ Done echo
__lb__lang-cpp const char *text = "This text is pretty long, but will be\n" "concatenated into just a single string.\n" "The disadvantage is that you have to quote\n" "each part, and newlines must be literal as\n" "usual.";
__lb__lang-cs static void Main() { Action body = () => { ...your code... }; body.Catch<InvalidOperationException>() .Catch<BadCodeException>() .Catch<AnotherException>(ex => { ...handler... })(); }
__lb__lang-cpp typedef binder3<mem_fun3_t<int,T,int,int,int> ,T* ,int,int,int> F3; explicit Command(T* pObj,F3* p_method,long timeout,const char* key, long priority = PRIO_NORMAL ): m_objptr(pObj),m_timeout(timeout),m_key(key),m_value(priority),method1(0),method0(0), method(0) { method3 = p_method; }
__lb__lang-css width: 100%; text-align: center; } display: inline-block; }
__lb__lang-c void *aligned_alloc(size_t alignment, size_t size);
__lb__lang-cs Properties.Settings.Default.keyName = value; Properties.Settings.Default.Save();
__lb__lang-sh error() { printf } if [[ $EUID -eq 0 ]]; then error "This script should not be run using sudo or as the root user" exit 1 fi
__lb__lang-cpp bool almost_equal(double x, double y, double epsilon) { double diff = x - y; if (x != 0 && y != 0){ diff = diff/y; } if (diff < epsilon && -1.0*diff < epsilon){ return true; } return false; }
__lb__lang-cpp template <typename T1, typename T2> void outer(T1&& t1, T2&& t2) { inner(std::forward<T1>(t1), std::forward<T2>(t2)); }
__lb__lang-cpp unique_ptr<T> uptr1(new T); unique_ptr<T> uptr2(new T); uptr2 = std::move(uptr1);
__lb__lang-cs using System.Security.Cryptography; using System.Text; namespace UniqueKey { public class KeyGenerator { public static string GetUniqueKey(int size) { char[] chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890".ToCharArray(); byte[] data = new byte[size]; using (RNGCryptoServiceProvider crypto = new RNGCryptoServiceProvider()) { crypto.GetBytes(data); } StringBuilder result = new StringBuilder(size); foreach (byte b in data) { result.Append(chars[b % (chars.Length)]); } return result.ToString(); } } }
__lb__lang-cpp void foo(Bar *p) { if (++(p->*member) > 0) { ... } }
__lb__lang-sh select result in Yes No Cancel do echo $result done
__lb__lang-php object(stdClass)[1] public public public public public public public public public public public public public
__lb__lang-cpp static inline std::string &ltrim(std::string &s) { s.erase(s.begin(), std::find_if(s.begin(), s.end(), std::not1(std::ptr_fun<int, int>(std::isspace)))); return s; } static inline std::string &rtrim(std::string &s) { s.erase(std::find_if(s.rbegin(), s.rend(), std::not1(std::ptr_fun<int, int>(std::isspace))).base(), s.end()); return s; } static inline std::string &trim(std::string &s) { return ltrim(rtrim(s)); }
__lb__lang-cpp inline std::string trim(std::string& str) { str.erase(0, str.find_first_not_of( str.erase(str.find_last_not_of( return str; }
__lb__lang-java @Test public void testThrows() { RuntimeException e = expectException( RuntimeException.class, () -> { throw new RuntimeException( "fail!" ); } ); assert e.getMessage().equals( "fail!" ); }
__lb__lang-cs private int GetSync() { try { ManualResetEvent mre = new ManualResetEvent(false); int result = null; Parallel.Invoke(async () => { result = await SomeCalcAsync(5+5); mre.Set(); }); mre.WaitOne(); return result; } catch (Exception) { return null; } }
__lb__lang-hs x = (1 + (2 + 3)) + ((1 + 2) + 3) y = f x z = g (f x) y
__lb__lang-golang package main import ( "io/ioutil" ) func main() { b, err := ioutil.ReadFile("input.txt") if err != nil { panic(err) } err = ioutil.WriteFile("output.txt", b, 0644) if err != nil { panic(err) } }
__lb__lang-sh @for /f "usebackq" %%i in (`git symbolic-ref -q HEAD`) do @echo %%~ni
__lb__lang-cs [DllImport("msvcrt.dll", CallingConvention=CallingConvention.Cdecl)] static extern int memcmp(byte[] b1, byte[] b2, long count); static bool ByteArrayCompare(byte[] b1, byte[] b2) { return b1.Length == b2.Length && memcmp(b1, b2, b1.Length) == 0; }
__lb__lang-golang m1 := map[string]int{ "a":1, "b":2, } m2 := map[string]int{ "a":1, "b":2, } fmt.Println(reflect.DeepEqual(m1, m2))
__lb__lang-c int main(){if(x<2){x=3;}} float test() { if(x<2) x=3; }
__lb__lang-php $url = $data = array( $options = array( ) ); $context = stream_context_create($options); $result = file_get_contents($url, false, $context); if ($result === FALSE) { } var_dump($result);
__lb__lang-hs class IMonad m where ireturn :: a ~> m a ibind :: (a ~> m b) -> (m a ~> m b)
__lb__lang-php usort($jobs, array($this->job_model, "sortJobs")); usort($jobs, array($this, "sortJobs"));
__lb__lang-hs {- import Control.Monad (guard) data Pair a = P a a deriving (Eq, Show) instance Functor Pair where fmap f (P x y) = P (f x) (f y) instance Monad Pair where return x = P x x P a b >>= f = P x y where P x _ = f a P _ y = f b newtype Bad a = B (Maybe (Pair a)) deriving (Eq, Show) instance Functor Bad where fmap f (B x) = B $ fmap (fmap f) x -- The only definition that could possibly work. unit :: a -> Bad a unit x = B (Just (P x x)) -- Number of possible definitions of join for this type. If this equals zero, no monad for you! joins :: Integer joins = sum $ do -- Try all possible ways of handling cases 3 and 4 in the definition of join below. let ways = [ \_ _ -> B Nothing , \a b -> B (Just (P a a)) , \a b -> B (Just (P a b)) , \a b -> B (Just (P b a)) , \a b -> B (Just (P b b)) ] :: [forall a. a -> a -> Bad a] c3 :: forall a. a -> a -> Bad a <- ways c4 :: forall a. a -> a -> Bad a <- ways let join :: forall a. Bad (Bad a) -> Bad a join (B Nothing) = B Nothing -- no choice join (B (Just (P (B Nothing) (B Nothing)))) = B Nothing -- again, no choice join (B (Just (P (B (Just (P x1 x2))) (B Nothing)))) = c3 x1 x2 join (B (Just (P (B Nothing) (B (Just (P x3 x4)))))) = c4 x3 x4 join (B (Just (P (B (Just (P x1 x2))) (B (Just (P x3 x4)))))) = B (Just (P x1 x4)) -- derived from monad laws -- We guard $ all (\x -> join (unit x) == x) bad1 guard $ all (\x -> join (fmap unit x) == x) bad1 -- This is the one that matters guard $ all (\x -> join (join x) == join (fmap join x)) bad3 return 1 main = putStrLn $ show joins ++ " combinations work." -- Functions for making all the different forms of Bad values containing distinct Ints. bad1 :: [Bad Int] bad1 = map fst (bad1 bad3 :: [Bad (Bad (Bad Int))] bad3 = map fst (bad3 bad1 bad1 bad2 bad2 (x, n (y, n return (B (Just (P x y)), n bad3 bad3 (x, n (y, n return (B (Just (P x y)), n
__lb__lang-php $first_date = new DateTime("2012-11-30 17:03:30"); $second_date = new DateTime("2012-12-21 00:00:00");
__lb__lang-cs namespace Microsoft.Sample { using System; using Guid = System.Guid; public class Program { } }
__lb__lang-java main_recyclerview.addOnItemTouchListener(new RecyclerView.OnItemTouchListener() { @Override public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) { int position=rv.getChildAdapterPosition(rv.findChildViewUnder(e.getX(),e.getY())); switch (position) { case 0: { wifi(position); adapter2.notifyDataSetChanged(); } break; case 1: { sound(position); adapter2.notifyDataSetChanged(); } break; case 2: { bluetooth(position); adapter2.notifyDataSetChanged(); } break; } return true; } @Override public void onTouchEvent(RecyclerView rv, MotionEvent e) { } @Override public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) { } });
__lb__lang-hs class SumRes r where sumOf :: Integer -> r instance SumRes Integer where sumOf = id instance (Integral a, SumRes r) => SumRes (a -> r) where sumOf x = sumOf . (x +) . toInteger
__lb__lang-java public class MyViewHolder extends RecyclerView.ViewHolder { private Context mContext; public MyViewHolder(View itemView) { super(itemView); mContext = itemView.getContext(); itemView.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View view) { int itemPosition = getLayoutPosition(); Toast.makeText(mContext, "" + itemPosition, Toast.LENGTH_SHORT).show(); } }); }
__lb__lang-cpp +---+---+---+---+---+---+---+---+ the_actual_array: | | | | | | | | | int[8] +---+---+---+---+---+---+---+---+ ^ | | | | pointer_to_the_first_element int*
__lb__lang-c main.c:6:7: error: redefinition of enumerator enum {ENUM_DEFINED=32}; ^ main.c:5:7: note: previous definition is here enum {ENUM_DEFINED=16}; ^ main.c:9:9: warning: ^ main.c:8:9: note: previous definition is here ^
__lb__lang-cpp void increment(int& n) { n = n + 1; } int a; increment(a);
__lb__lang-css position: absolute; top: 0; right: 0; bottom: 0; left: 0; margin: auto; margin-top: 0px; width: 981px; height: 610px; background : url("img_dot_white.jpg") center; z-index: 0; visibility: hidden; } position: absolute; top: 0; right: 0; bottom: 0; left: 0; margin: 70px 140px 175px 140px; padding : 30px; width: 700px; height: 400px; background-color: orange; visibility: hidden; border: 1px solid black; z-index: 1; } </style>
__lb__lang-java Test1 Times (ms) Test2 Times (ms) ---------------- ---------------- 187 0 203 0 203 0 188 0 188 0 187 0 203 0 188 0 188 0 203 0
__lb__lang-cs <input type="file" id="UploadImg" /></br> <img id="imgPreview" height="200" width="200" />
__lb__lang-golang copy(dst, src []T) int copy(dst []byte, src string) int
__lb__lang-cs private static string WriteFileToDisk(byte[] data, string fileName, int version = 0) { try { var versionExtension = version > 0 ? $"_{version:000}" : string.Empty; var filePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, $"{fileName}{versionExtension}.pdf"); using (var writer = new FileStream(filePath, FileMode.Create)) { writer.Write(data, 0, data.Length); } return filePath; } catch (IOException) { return WriteFileToDisk(data, fileName, ++version); } }
__lb__lang-cpp class MyClass { public: static std::vector<int> v, v2; static struct _StaticConstructor { _StaticConstructor() { v.push_back(1); v.push_back(2); v2.push_back(3); v2.push_back(4); } } _staticConstructor; }; std::vector<int> MyClass::v; std::vector<int> MyClass::v2; MyClass::_StaticConstructor MyClass::_staticConstructor; int main() { assert(MyClass::v[0] == 1); assert(MyClass::v[1] == 2); assert(MyClass::v2[0] == 3); assert(MyClass::v2[1] == 4); }
__lb__lang-java public class Test { public static final Map numbers = Collections.unmodifiableMap(new HashMap(2, 1.0f){ { put(1, "one"); put(2, "two"); } }); }
__lb__lang-css .ratio { display: grid; } .ratio > * { grid-area: 1/1/1/1; }
__lb__lang-php $key = array_search($del_val, $array); if (false !== $key) { unset($array[$key]); }
__lb__lang-java public boolean equals(Object anObject) { if (this == anObject) { return true; } if (anObject instanceof String) { String anotherString = (String)anObject; int n = value.length; if (n == anotherString.value.length) { char v1[] = value; char v2[] = anotherString.value; int i = 0; while (n-- != 0) { if (v1[i] != v2[i]) return false; i++; } return true; } } return false; }
__lb__lang-java public String randomString(int length, String characterSet) { StringBuilder sb = new StringBuilder(); for (int i = 0; i < length; i++) { int randomInt = new SecureRandom().nextInt(characterSet.length()); sb.append(characterSet.substring(randomInt, randomInt + 1)); } return sb.toString(); } @Test public void buildFiveRandomStrings() { for (int q = 0; q < 5; q++) { System.out.println(randomString(10, "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789")); } }
__lb__lang-cs interface I1 { void implicitExample(); } interface I2 { void explicitExample(); } class C : I1, I2 { void implicitExample() { Console.WriteLine("I1.implicitExample()"); } void I2.explicitExample() { Console.WriteLine("I2.explicitExample()"); } }
__lb__lang-cpp 0x400af8: lea 0x1(%rdx),%eax popcnt (%rbx,%rax,8),%r9 lea 0x2(%rdx),%edi popcnt (%rbx,%rcx,8),%rax lea 0x3(%rdx),%esi add %r9,%rax popcnt (%rbx,%rdi,8),%rcx add $0x4,%edx add %rcx,%rax popcnt (%rbx,%rsi,8),%rcx add %rcx,%rax mov %edx,%ecx add %rax,%r14 cmp %rbp,%rcx jb 0x400af8
__lb__lang-sh srcdir=$1 outfile=$2 tar -Ocf - $srcdir | pv -i 1 -w 50 -berps `du -bs $srcdir | awk
__lb__lang-java public final static boolean isPerfectSquareDurron(long n) { if(n < 0) return false; if(n == 0) return true; long x = n; while((x & 0x3) == 0) x >>= 2; if((x & 0x7) == 1) { long sqrt; if(x < 410881L) { int i; float x2, y; x2 = x * 0.5F; y = x; i = Float.floatToRawIntBits(y); i = 0x5f3759df - ( i >> 1 ); y = Float.intBitsToFloat(i); y = y * ( 1.5F - ( x2 * y * y ) ); sqrt = (long)(1.0F/y); } else { sqrt = (long) Math.sqrt(x); } return sqrt*sqrt == x; } return false; }
__lb__lang-cs int total = sequence.Aggregate(0, (current, item) => current + item.Length);
__lb__lang-hs Prelude> :info map map :: (a -> b) -> [a] -> [b] -- Defined in ‘GHC.Base’
__lb__lang-css body { text-align: center; margin: 0; } h1 { color: font-family: arial; position: relative; font-family: display: inline-block; font-size: 2.5em; } h1::after { content: attr(data-title-text); color: position: absolute; left: 0; top: 0; clip: rect(0, 1000px, 30px, 0); }
__lb__lang-html <!-- Right approach: Use both file extensions and corresponding MIME-types. --> <!-- (IE 10+, Edge, Chrome, Firefox) --> <input type="file" accept=".xls,.xlsx, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel" />
__lb__lang-cs var serializer = new JavaScriptSerializer(); var value = serializer.DeserializeDynamic("{ var name = (string)value.Name; var age = (int)value.Age; var address = value.Address; var city = (string)address.City; var state = (string)address.State;
__lb__lang-cs public class FormattedDbEntityValidationException : Exception { public FormattedDbEntityValidationException(DbEntityValidationException innerException) : base(null, innerException) { } public override string Message { get { var innerException = InnerException as DbEntityValidationException; if (innerException != null) { StringBuilder sb = new StringBuilder(); sb.AppendLine(); sb.AppendLine(); foreach (var eve in innerException.EntityValidationErrors) { sb.AppendLine(string.Format("- Entity of type \"{0}\" in state \"{1}\" has the following validation errors:", eve.Entry.Entity.GetType().FullName, eve.Entry.State)); foreach (var ve in eve.ValidationErrors) { sb.AppendLine(string.Format("-- Property: \"{0}\", Value: \"{1}\", Error: \"{2}\"", ve.PropertyName, eve.Entry.CurrentValues.GetValue<object>(ve.PropertyName), ve.ErrorMessage)); } } sb.AppendLine(); return sb.ToString(); } return base.Message; } } }
__lb__lang-java String easy = RandomString.digits + "ACEFGHJKLMNPQRUVWXYabcdefhijkprstuvwx"; RandomString tickets = new RandomString(23, new SecureRandom(), easy);
__lb__lang-cs static void Main() { DirectoryCopy(".", @".\temp", true); } private static void DirectoryCopy(string sourceDirName, string destDirName, bool copySubDirs) { DirectoryInfo dir = new DirectoryInfo(sourceDirName); if (!dir.Exists) { throw new DirectoryNotFoundException( "Source directory does not exist or could not be found: " + sourceDirName); } DirectoryInfo[] dirs = dir.GetDirectories(); if (!Directory.Exists(destDirName)) { Directory.CreateDirectory(destDirName); } FileInfo[] files = dir.GetFiles(); foreach (FileInfo file in files) { string temppath = Path.Combine(destDirName, file.Name); file.CopyTo(temppath, false); } if (copySubDirs) { foreach (DirectoryInfo subdir in dirs) { string temppath = Path.Combine(destDirName, subdir.Name); DirectoryCopy(subdir.FullName, temppath, copySubDirs); } } }
__lb__lang-java List<String> aList = Arrays.asList("vanilla", "strawberry", "chocolate");
__lb__lang-c inline void Sort2(int *p0, int *p1) { const int temp = min(*p0, *p1); *p1 = max(*p0, *p1); *p0 = temp; } inline void Sort3(int *p0, int *p1, int *p2) { Sort2(p0, p1); Sort2(p1, p2); Sort2(p0, p1); } inline void Sort4(int *p0, int *p1, int *p2, int *p3) { Sort2(p0, p1); Sort2(p2, p3); Sort2(p0, p2); Sort2(p1, p3); Sort2(p1, p2); } inline void Sort6(int *p0, int *p1, int *p2, int *p3, int *p4, int *p5) { Sort3(p0, p1, p2); Sort3(p3, p4, p5); Sort2(p0, p3); Sort2(p2, p5); Sort4(p1, p2, p3, p4); }
__lb__lang-php $date = DateTime::createFromFormat( $new_date_format = $date->format(
__lb__lang-cpp struct Store{ std::array<Something, 1024> data; size_t get(size_t idx){ } void incr_ref(size_t idx){ } void decr_ref(size_t idx){ } }; template<Store* store_p> struct ItemRef{ size_t idx; auto get(){ return store_p->get(idx); }; ItemRef() { store_p->incr_ref(idx); }; ~ItemRef() { store_p->decr_ref(idx); }; }; Store store1_g; Store store2_g;
__lb__lang-java import java.io.File; import java.io.FileNotFoundException; import java.util.Scanner; public static void readText throws FileNotFoundException { Scanner scan = new Scanner(new File("samplefilename.txt")); while(scan.hasNextLine()){ String line = scan.nextLine(); } }
__lb__lang-sh MY_DIR=$( cd $(dirname $(readlink `[[ $OSTYPE == linux* ]] && echo "-f"` $0)) ; pwd -P) echo "$MY_DIR"
__lb__lang-sh $ tar -czvf ../allfiles-butsome.tar.gz * --exclude=./acme/foo $ tar -czvf ../allfiles-butsome.tar.gz * --exclude= $ tar --exclude=./acme/foo -czvf ../allfiles-butsome.tar.gz * $ tar --exclude= $ tar -czvf ../allfiles-butsome.tar.gz * --exclude=/full/path/acme/foo $ tar -czvf ../allfiles-butsome.tar.gz * --exclude= $ tar --exclude=/full/path/acme/foo -czvf ../allfiles-butsome.tar.gz * $ tar --exclude=
__lb__lang-perl my @arr = ( my @dix = grep { $arr[$_] eq my $o = 0; for (@dix) { splice(@arr, $_-$o, 1); $o++; } print join("\n", @arr);
__lb__lang-golang func f() error { handle err { fmt.Println(err); return err } check mayFail() check canFail() }
__lb__lang-cs delegate void UpdateLabelDelegate (string message); void UpdateLabel (string message) { if (InvokeRequired) { Invoke (new UpdateLabelDelegate (UpdateLabel), message); return; } MyLabelControl.Text = message; }
__lb__lang-java Set<String> mySet = new HashSet<String>(); mySet.add("alpha"); mySet.add("alpha"); mySet.add("beta"); mySet.add("gamma"); mySet.add("gamma"); mySet.add("delta"); for(String currentItem : mySet) { System.out.println(currentItem); }
__lb__lang-java Filter<Dto> query = CQ.<Dto>filter() .from(testList) .where() .exec(s -> s.getId() + 1).eq().value(2);
__lb__lang-perl LANGUAGE = (unset), LC_ALL = (unset), LC_PAPER = "ro_RO.UTF-8", LC_ADDRESS = "ro_RO.UTF-8", ....
__lb__lang-cpp $ g++ base_function_call_from_derived.cpp $ ./a.out Child::fun partial functionality write here Parent::fun functionality write here Parent::fun3 functionality write here Child::fun1 partial functionality write here Parent::fun1 functionality write here
__lb__lang-sh $ echo "someletters_12345_moreleters.ext" | grep -Eo "[[:digit:]]+" 12345
__lb__lang-java static String readFile(String path, Charset encoding) throws IOException { byte[] encoded = Files.readAllBytes(Paths.get(path)); return new String(encoded, encoding); }
__lb__lang-php <?php $newArray[] = {1,2,3,4,5}; print_r($newArray[5]); ?>
__lb__lang-perl Benchmark: running 1, 2, 3, 4, 5, 6 for at least 3 CPU seconds... 1: 3 wallclock secs ( 3.16 usr + 0.00 sys = 3.16 CPU) @ 12560.13/s (n=39690) 2: 3 wallclock secs ( 3.18 usr + 0.00 sys = 3.18 CPU) @ 7828.30/s (n=24894) 3: 3 wallclock secs ( 3.23 usr + 0.00 sys = 3.23 CPU) @ 6763.47/s (n=21846) 4: 4 wallclock secs ( 3.15 usr + 0.00 sys = 3.15 CPU) @ 9596.83/s (n=30230) 5: 4 wallclock secs ( 3.20 usr + 0.00 sys = 3.20 CPU) @ 6826.88/s (n=21846) 6: 3 wallclock secs ( 3.12 usr + 0.00 sys = 3.12 CPU) @ 5653.53/s (n=17639)
__lb__lang-php function save_image($inPath,$outPath) { $in= fopen($inPath, "rb"); $out= fopen($outPath, "wb"); while ($chunk = fread($in,8192)) { fwrite($out, $chunk, 8192); } fclose($in); fclose($out); } save_image(
__lb__lang-cpp std::string s1 = "123"; std::string s2 = "456"; std::string s3_copy = s1 + s2; const std::string& s3_reference = s1 + s2;
__lb__lang-java package fileoperations; import java.io.File; import java.io.IOException; public class SimpleFile { public static void main(String[] args) throws IOException { File file =new File("text.txt"); file.createNewFile(); System.out.println("File is created"); FileWriter writer = new FileWriter(file); writer.write("Enter the text that you want to write"); writer.flush(); writer.close(); System.out.println("Data is entered into file"); } }
__lb__lang-css h1::selection,h2::selection,h3::selection,p::selection{ background-color: transparent;} h1::moz-selection,h2::moz-selection,h3::moz-selection,p::moz-selection{ background-color: transparent;} h1::webkit-selection,h2::webkit-selection,h3::webkit-selection,p::webkit-selection{ background-color: transparent;}
__lb__lang-java NumberFormat formatter = new DecimalFormat("0000"); System.out.println("OUTPUT : "+formatter.format(811));
__lb__lang-cs Person1: Id=1, Name="Test1" Person2: Id=1, Name="Test1" Person3: Id=2, Name="Test2"
__lb__lang-php $(document).ready(function() { $( $( $( var postForm = { }; $.ajax({ type : url : data : postForm, dataType : success : function(data) { if (!data.success) { if (data.errors.name) { $( } } else { $( } } }); event.preventDefault(); }); });
__lb__lang-hs $ hoogle --help Hoogle v4.2.8, (C) Neil Mitchell 2004-2011 http: hoogle [COMMAND] ... [OPTIONS] Commands: [search] Perform a search data Generate Hoogle databases server Start a Hoogle server combine Combine multiple databases into one convert Convert an input file to a database test Run tests dump Dump sections of a database to stdout rank Generate ranking information log Analyse log files Common flags: -? --help Display help message -V --version Print version information -v --verbose Loud verbosity -q --quiet Quiet verbosity
__lb__lang-php function timeToSecond($time){ $time_parts=explode(":",$time); $seconds= ($time_parts[0]*86400) + ($time_parts[1]*3600) + ($time_parts[2]*60) + $time_parts[3] ; return $seconds; } function secondToTime($time){ $seconds = $time % 60; $seconds<10 ? "0".$seconds : $seconds; if($seconds<10) { $seconds="0".$seconds; } $time = ($time - $seconds) / 60; $minutes = $time % 60; if($minutes<10) { $minutes="0".$minutes; } $time = ($time - $minutes) / 60; $hours = $time % 24; if($hours<10) { $hours="0".$hours; } $days = ($time - $hours) / 24; if($days<10) { $days="0".$days; } $time_arr = array($days,$hours,$minutes,$seconds); return implode(":",$time_arr); }
__lb__lang-java Map<String, String> map = ... for (Map.Entry<String, String> entry : map.entrySet()) { System.out.println(entry.getKey() + "/" + entry.getValue()); }
__lb__lang-hs type CurrencyDict = Map CurrencyName Dollars currencyDict :: CurrencyDict
__lb__lang-php while (($key = array_search($del_val, $messages)) !== false) { unset($messages[$key]); }
__lb__lang-java static final Map<Integer, String> MY_MAP = ImmutableMap.of( 1, "one", 2, "two" );
__lb__lang-c String newString() { String self = (String)malloc(sizeof(struct String_Struct)); self->get = &getString; self->set = &setString; self->length = &lengthString; self->set(self, ""); return self; }
__lb__lang-java |---------------------|---------------------|--------------------|------------| | Operation | ArrayList | LinkedList | Winner | |---------------------|---------------------|--------------------|------------| | get(index) | O(1) | O(n) | ArrayList | | | | n/4 steps in avg | | |---------------------|---------------------|--------------------|------------| | add(E) | O(1) | O(1) | LinkedList | | |---------------------|--------------------| | | | O(n) in worst case | | | |---------------------|---------------------|--------------------|------------| | add(index, E) | O(n) | O(n) | LinkedList | | | n/2 steps | n/4 steps | | | |---------------------|--------------------| | | | | O(1) if index = 0 | | |---------------------|---------------------|--------------------|------------| | remove(index, E) | O(n) | O(n) | LinkedList | | |---------------------|--------------------| | | | n/2 steps | n/4 steps | | |---------------------|---------------------|--------------------|------------| | Iterator.remove() | O(n) | O(1) | LinkedList | | ListIterator.add() | | | | |---------------------|---------------------|--------------------|------------| |--------------------------------------|-----------------------------------| | ArrayList | LinkedList | |--------------------------------------|-----------------------------------| | Allows fast read access | Retriving element takes O(n) | |--------------------------------------|-----------------------------------| | Adding an element require shifitng | o(1) [but traversing takes time] | | all the later elements | | |--------------------------------------|-----------------------------------| | To add more elements than capacity | | new array need to be allocated | |--------------------------------------|
__lb__lang-java class MyConstructorDemo extends ConstructorDemo { MyConstructorDemo() { this("calling another constructor"); } MyConstructorDemo(String arg) { System.out.print("This is passed String by another constructor :"+arg); } }
__lb__lang-java NetworkImageView profilePicture = view.findViewById(R.id.profile_picture); profilePicture.setImageUrl("http:
__lb__lang-java String[] arr1 = new String[] { "Fifth", "Sixth" }; String[] arr2 = new String[] { "Seventh", "Eight" }; String[][] arrayOfArray = new String[][] { arr1, arr2 }; System.out.println(arrayOfArray); System.out.println(Arrays.toString(arrayOfArray)); System.out.println(Arrays.deepToString(arrayOfArray));
__lb__lang-cs public static void EmptyDirectory(string directory) { var stackA = new Stack<DirectoryInfo>(); stackA.Push(new DirectoryInfo(directory)); var stackB = new Stack<DirectoryInfo>(); while (stackA.Any()) { var dir = stackA.Pop(); foreach (var file in dir.GetFiles()) { file.IsReadOnly = false; file.Delete(); } foreach (var subDir in dir.GetDirectories()) { stackA.Push(subDir); stackB.Push(subDir); } } while (stackB.Any()) { stackB.Pop().Delete(); } }
__lb__lang-perl use strict; use warnings; local $var = 42; print "var: $var\n";
__lb__lang-cs if ("IV".IsValidRomanNumeral()) { } Console.WriteLine("MMMDCCCLXXXVIII".ParseRomanNumeral()); Console.WriteLine(3888.ToRomanNumeralString());
__lb__lang-php trait A { function trait_calc($v) { return $v*3; } } class MyClass { function calc($v) { return $v+2; } } class MyTraitChildClass extends MyClass{ use A { A::trait_calc as calc; } } class MySecondTraitChildClass extends MyClass{ use A { A::trait_calc as calc; } public function calc($v) { return $this->trait_calc($v)+.5; } } print (new MyTraitChildClass())->calc(2); echo "\n"; print (new MySecondTraitChildClass())->calc(2);
__lb__lang-perl my @array = qw(a b c); foo(@array); foo(@array[0..1]); foo($array[0], $array[1], $array[2]); sub foo ($;$$) { print "@_\n" } foo(@array); foo(@array[0..1]); foo($array[0], $array[1], $array[2]);
__lb__lang-php set_time_limit(0); $options = array( CURLOPT_FILE => CURLOPT_TIMEOUT => 28800, CURLOPT_URL => ); $ch = curl_init(); curl_setopt_array($ch, $options); curl_exec($ch); curl_close($ch);
__lb__lang-java String number = "10"; int result = Integer.parseInt(number); System.out.println(result);
__lb__lang-java someList.stream().forEach(listItem -> { System.out.println(listItem); });
__lb__lang-java interface A1{} interface A2{} interface A3{} interface A4{} interface B1 extends A1{} interface B2 extends A1,A2{} interface B3 extends A3,A4{} interface B4 extends A4{} interface C1 extends B2{} interface C2 extends B2,B3{} interface C3 extends B3{} interface D1 extends C1,C2{} interface D2 extends C2{} interface E1 extends D1{} interface E2 extends D1{} interface E3 extends D2{} interface E4 extends D2{}
__lb__lang-css position:absolute; left:0; right:0; width:300px; height:500px; margin:auto; }
__lb__lang-cs const int y = 42; static void Main() { short x = 42; Console.WriteLine(x.Equals(y)); }
__lb__lang-java static { TrustManager[] trustAllCertificates = new TrustManager[] { new X509TrustManager() { @Override public X509Certificate[] getAcceptedIssuers() { return null; } @Override public void checkClientTrusted(X509Certificate[] certs, String authType) { } @Override public void checkServerTrusted(X509Certificate[] certs, String authType) { } } }; HostnameVerifier trustAllHostnames = new HostnameVerifier() { @Override public boolean verify(String hostname, SSLSession session) { return true; } }; try { System.setProperty("jsse.enableSNIExtension", "false"); SSLContext sc = SSLContext.getInstance("SSL"); sc.init(null, trustAllCertificates, new SecureRandom()); HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory()); HttpsURLConnection.setDefaultHostnameVerifier(trustAllHostnames); } catch (GeneralSecurityException e) { throw new ExceptionInInitializerError(e); } }
__lb__lang-java void onAttach (Context context) { this.context = context; }
__lb__lang-java JsonObject object = Json.parse(input).asObject(); int orders = object.get("order").asInt(); JsonArray items = object.get("items").asArray();
__lb__lang-java List<Integer> list1, list2, list3; list1 = Stream.of(1, 2, 3).collect(Collectors.toList()); list2 = Stream.of(1, 2, 3).collect(Collectors.toCollection(ArrayList::new)); list3 = Stream.of(1, 2, 3).collect(Collectors.toCollection(LinkedList::new));
__lb__lang-html <label><input type="checkbox"><span>send newsletter</span></label><br> <label><input type="checkbox" checked disabled><span>I doubt it</span></label><br> <label><input type="checkbox" disabled><span>well I never</span></label><br> <label><input type="checkbox"><span>I agree with terms of use</span></label><br> <label><input type="checkbox"><span>check to confirm</span></label>
__lb__lang-hs swap :: (r -> Either e a) -> Either e (r -> a) swap = uncomp . join . Comp . return . liftM (Comp . liftM return)
__lb__lang-golang package main import ( "fmt" "reflect" ) type Foo struct { Number int Text string } func main() { foo := Foo{123, "Hello"} fmt.Println(int(reflect.ValueOf(foo).Field(0).Int())) reflect.ValueOf(&foo).Elem().Field(0).SetInt(321) fmt.Println(int(reflect.ValueOf(foo).Field(0).Int())) }
__lb__lang-sh source = /home/part1/part2 target = /home/part1/part3 relpath = ../part3 source = /home/part1/part2 target = /home/part4/part5 relpath = ../../part4/part5 source = /home/part1/part2 target = /work/part6/part7 relpath = ../../../work/part6/part7 source = /home/part1 target = /work/part1/part2/part3/part4 relpath = ../../work/part1/part2/part3/part4 source = /home target = /work/part2/part3 relpath = ../work/part2/part3 source = / target = /work/part2/part3/part4 relpath = ./work/part2/part3/part4 source = /home/part1/part2 target = /home/part1/part2/part3/part4 relpath = ./part3/part4 source = /home/part1/part2 target = /home/part1/part2/part3 relpath = ./part3 source = /home/part1/part2 target = /home/part1/part2 relpath = . source = /home/part1/part2 target = /home/part1 relpath = .. source = /home/part1/part2 target = /home relpath = ../.. source = /home/part1/part2 target = / relpath = ../../../.. source = /home/part1/part2 target = /work relpath = ../../../work source = /home/part1/part2 target = /work/part1 relpath = ../../../work/part1 source = /home/part1/part2 target = /work/part1/part2 relpath = ../../../work/part1/part2 source = /home/part1/part2 target = /work/part1/part2/part3 relpath = ../../../work/part1/part2/part3 source = /home/part1/part2 target = /work/part1/part2/part3/part4 relpath = ../../../work/part1/part2/part3/part4 source = home/part1/part2 target = home/part1/part3 relpath = ../part3 source = home/part1/part2 target = home/part4/part5 relpath = ../../part4/part5 source = home/part1/part2 target = work/part6/part7 relpath = ../../../work/part6/part7 source = home/part1 target = work/part1/part2/part3/part4 relpath = ../../work/part1/part2/part3/part4 source = home target = work/part2/part3 relpath = ../work/part2/part3 source = . target = work/part2/part3 relpath = ../work/part2/part3 source = home/part1/part2 target = home/part1/part2/part3/part4 relpath = ./part3/part4 source = home/part1/part2 target = home/part1/part2/part3 relpath = ./part3 source = home/part1/part2 target = home/part1/part2 relpath = . source = home/part1/part2 target = home/part1 relpath = .. source = home/part1/part2 target = home relpath = ../.. source = home/part1/part2 target = . relpath = ../../.. source = home/part1/part2 target = work relpath = ../../../work source = home/part1/part2 target = work/part1 relpath = ../../../work/part1 source = home/part1/part2 target = work/part1/part2 relpath = ../../../work/part1/part2 source = home/part1/part2 target = work/part1/part2/part3 relpath = ../../../work/part1/part2/part3 source = home/part1/part2 target = work/part1/part2/part3/part4 relpath = ../../../work/part1/part2/part3/part4
__lb__lang-java public class C { private int x; private int y; public static void main(String [] args) { System.out.println(ObjectSizeFetcher.getObjectSize(new C())); } }
__lb__lang-php <?php if (!function_exists( function is_str_contain($string, $keyword) { if (empty($string) || empty($keyword)) return false; $keyword_first_char = $keyword[0]; $keyword_length = strlen($keyword); $string_length = strlen($string); if ($string_length < $keyword_length) return false; if ($string_length == $keyword_length) { if ($string == $keyword) return true; else return false; } if ($keyword_length == 1) { for ($i = 0; $i < $string_length; $i++) { if ($keyword_first_char == $string[$i]) { return true; } } } if ($keyword_length > 1) { for ($i = 0; $i < $string_length; $i++) { if (($string_length + 1 - $i) >= $keyword_length) { if ($keyword_first_char == $string[$i]) { $match = 1; for ($j = 1; $j < $keyword_length; $j++) { if (($i + $j < $string_length) && $keyword[$j] == $string[$i + $j]) { $match++; } else { return false; } } if ($match == $keyword_length) { return true; } } } else { return false; } } } return false; } }
__lb__lang-golang numChans := 2 var chans = [] chan string{} for i:=0;i<numChans;i++{ tmp := make(chan string); chans = append(chans, tmp); go DoShit(tmp, i + 1) for ; true; { select { case msg1 := <-c1: fmt.Println("received ", msg1) go DoShit(c1, 1) case msg2 := <-c2: fmt.Println("received ", msg2) go DoShit(c2, 9) } }
__lb__lang-css display: flex; justify-content: center; align-items: center; height: 500px; width: 500px; background: yellow; } width: 100px; height: 100px; background: silver; }
__lb__lang-cs class Person { public override void Feed( Person p ) { } public override void Feed( Animal a ) { } }
__lb__lang-css li { display: flex; justify-content:center; align-content:center; flex-direction:column; }
__lb__lang-hs import qualified Data.Map.Strict as MS withMemoStMap :: (Integral n) => n -> n withMemoStMap n = evalState (fm recF n) MS.empty where recF i = do v <- MS.lookup i <$> get case v of Just v Nothing -> do v modify $ MS.insert i v' return v'
__lb__lang-cs public static class StreamHelpers { public static byte[] ReadFully(this Stream input) { var ms = new MemoryStream(); input.CopyTo(ms); return ms.ToArray(); } }
__lb__lang-php set_error_handler(function($errno, $errstr, $errfile, $errline, array $errcontext) { if (0 === error_reporting()) { return false; } throw new ErrorException($errstr, 0, $errno, $errfile, $errline); }); try { dns_get_record(); } catch (ErrorException $e) { }
__lb__lang-cs var numbers = new List<int> { 6, 2, 8, 3 }; int sum = numbers.Aggregate(func: (result, item) => result + item);
__lb__lang-java HttpURLConnection.setFollowRedirects(true); String url = "https: URL request_url = new URL(url); HttpURLConnection http_conn = (HttpURLConnection)request_url.openConnection(); http_conn.setConnectTimeout(100000); http_conn.setReadTimeout(100000); http_conn.setInstanceFollowRedirects(true); System.out.println(String.valueOf(http_conn.getResponseCode()));
__lb__lang-sh apache 24268 0.0 2.6 388152 27116 ? S Jun13 0:10 /usr/sbin/httpd apache 24272 0.0 2.6 387944 27104 ? S Jun13 0:09 /usr/sbin/httpd apache 24319 0.0 2.6 387884 27316 ? S Jun15 0:04 /usr/sbin/httpd
__lb__lang-php $file_name_dm = $_FILES["video"]["name"]; $ext_thumb = extension($file_name_dm); echo extension($file_name_dm); function extension($str){ $str=implode("",explode("\\",$str)); $str=explode(".",$str); $str=strtolower(end($str)); return $str; }
__lb__lang-java File f = new File(filePathString); if(f.exists() && f.isFile()) { }
__lb__lang-sh files=(xorg-x11-fonts*) if [ -e "${files[0]}" ]; then printf "BLAH" fi
__lb__lang-css .vertical-with-image(@startColor: background-color: mix(@startColor, @endColor, 60%); background-image: @image; background: @image, -moz-linear-gradient(top, @startColor, @endColor); background: @image, -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor)); background: @image, -webkit-linear-gradient(top, @startColor, @endColor); background: @image, -o-linear-gradient(top, @startColor, @endColor); background: @image, linear-gradient(to bottom, @startColor, @endColor); } }
__lb__lang-java String className = "com.example.helloworld"; String methodName = "print"; Class<?>[] argsTypes = {String.class, String.class}; Object[] methArgs = { "hello", "world" }; launchProcess(className, methodName, argsTypes, methArgs);
__lb__lang-sh Argentina is in America Vietnam is in Asia France is in Europe
__lb__lang-php foreach ($array as $key => $item) { echo "$item\n"; reset($array); }
__lb__lang-cpp struct Foo { int a; }; class Bar { int a; }; class Tester { Foo m_Foo = Foo(); Bar m_Bar = Bar(); public: Tester() {} }; int main() { auto myTester = Tester(); }
__lb__lang-cs int[][] nonMagicSquare = { new int[] { 3, 1, 7, 8 }, new int[] { 2, 4, 16, 5 }, new int[] { 11, 6, 12, 15 }, new int[] { 9, 13, 10, 14 } }; IEnumerable<int> rowSums = nonMagicSquare .Select(row => row.Sum()); IEnumerable<int> colSums = nonMagicSquare .Aggregate( (priorSums, currentRow) => priorSums.Select((priorSum, index) => priorSum + currentRow[index]).ToArray() );
__lb__lang-sh There are screens on: 5422.logCleanWorker (Detached) 5448.overNightLongTask(Detached) 5027.databaseOverNightLongTask (Detached) 3 Sockets in /var/run/screen/S-sb.
__lb__lang-java int index = 0; while(index < list.size()) { Object r = list.get(index); if( state ) { list.remove(index); index = 0; continue; } index += 1; }
__lb__lang-css .rounded_corners { -moz-border-radius: 8px; -webkit-border-radius: 8px; border-radius: 8px; } .rounded_corners; } .rounded_corners; }
__lb__lang-hs map f x = x >>= return . f map f x = ((:[]) <$> f) =<< x
__lb__lang-perl " To use gf with perl " set path+=$PWD/**, set path +=/usr/lib/perl5/*, set path+=/CompanyCode/*, " directory containing work code " autocmd BufRead *.p? set include=^use autocmd BufRead *.pl set includeexpr=substitute(v:fname,
__lb__lang-php function trim_array($Array) { foreach ($Array as $value) { if(trim($value) === $index = array_search($value, $Array); unset($Array[$index]); } } return $Array; }
__lb__lang-cs public static string GenerateRandomString(int length) { var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"; var result = new System.Text.StringBuilder(length); var bytes = CryptographicBuffer.GenerateRandom((uint)length * 4).ToArray(); for (int i = 0; i < bytes.Length; i += 4) { result.Append(BitConverter.ToUInt32(bytes, i) % chars.Length); } return result.ToString(); }
__lb__lang-php function get_daydiff($end_date,$today) { if($today== { $today=date( } $str = floor(strtotime($end_date)/(60*60*24)) - floor(strtotime($today)/(60*60*24)); return $str; } $d1 = "2018-12-31"; $d2 = "2018-06-06"; echo get_daydiff($d1, $d2);
__lb__lang-hs class Functor c => Comonad c where extract :: c x -> x duplicate :: c x -> c (c x)
__lb__lang-cs private void FunctionWrapper(string sourcePath, string targetPath) { try { FunctionThatCallsExcel(sourcePath, targetPath); } finally { GC.Collect(); GC.WaitForPendingFinalizers(); } }
__lb__lang-cs var carsByPersonId = persons.ToLookup(p => p.PersonId, p => p.car);
__lb__lang-php $foreName = getForeName(isset($userId) ? $userId : null); function getForeName($userId) { if ($userId === null) { } }
__lb__lang-html <input id="number" value="-3.1415" placeholder="Type a number" autofocus>
__lb__lang-cs Math.Round(exactResult * 1.00m, 2, MidpointRounding.AwayFromZero) 6.665m.ToString() -> "6.67" 6.6m.ToString() -> "6.60"
__lb__lang-css .grid-container { display: grid; grid-template-columns: repeat(2, 1fr); grid-row-gap: 10px; grid-column-gap: 10px; } .grid-item { background-color: box-shadow: 0 0 3px text-align: center; } .grid-item img { max-width: 100%; }
__lb__lang-cs foreach(KeyValuePair<string, string> entry in myDictionary) { }
__lb__lang-java Comparator<Student> c = (s1, s2) -> s1.firstName.compareTo(s2.firstName); studList.sort(c)
__lb__lang-java String concatenated_String="hi^Hello"; String split_string_array[]=concatenated_String.split("\\^");
__lb__lang-html <form action="uploadScript.php" method="post" enctype="multipart/form-data"> <div> <!-- filename to display to the user --> <p id="file-name" class="margin-10 bold-10"></p> <!-- Hide this from the users view with css display:none; --> <input class="display-none" id="file-type" type="file" size="4" name="file"/> <!-- Style this button with type image or css whatever you wish --> <input id="browse-click" type="button" class="button" value="Browse for files"/> <!-- submit button --> <input type="submit" class="button" value="Change"/> </div>
__lb__lang-cs str="aaabbbbjjja"; int count = 0; int size = str.Length; string[] strarray = new string[size]; for (int i = 0; i < str.Length; i++) { strarray[i] = str.Substring(i, 1); } Array.Sort(strarray); str = ""; for (int i = 0; i < strarray.Length - 1; i++) { if (strarray[i] == strarray[i + 1]) { count++; } else { count++; str = str + strarray[i] + count; count = 0; } } count++; str = str + strarray[strarray.Length - 1] + count;
__lb__lang-hs f :: Integer -> (Integer, Integer) f x = let x2 = x * x in (x2, x2+1) g :: Integer -> Integer g x = case f x of (y, z) -> y + z
__lb__lang-php $lifetime = strtotime( session_set_cookie_params($lifetime); session_start();
__lb__lang-java class ConstructorDemo { ConstructorDemo() { System.out.println("D.constructor "); } ConstructorDemo(int k) { this(); System.out.println("P.Constructor ="+k); } public static void main(String[] args) { new ConstructorDemo(); ConstructorDemo g=new ConstructorDemo(3);---(3) } }
__lb__lang-cs public AnyObject(AnyObject anyObject) { foreach (var property in typeof(AnyObject).GetProperties()) { property.SetValue(this, property.GetValue(anyObject)); } foreach (var field in typeof(AnyObject).GetFields()) { field.SetValue(this, field.GetValue(anyObject)); } }
__lb__lang-css input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button { -webkit-appearance: none;
__lb__lang-php include("GrabzItClient.class.php"); $grabzIt = new GrabzItClient("Sign in to view your Application Key", "Sign in to view your Application Secret");
__lb__lang-cs Exception ex; try { throw new ArgumentException(); goto noCatch; } catch (ArgumentOutOfRangeException e) { ex = e; } catch (IndexOutOfRangeException e) { ex = e; } Console.WriteLine("Handle the exception noCatch: Console.WriteLine("We
__lb__lang-c My number is 8 bytes wide and its value is 285212672l. A normal number is 0.
__lb__lang-cs using (DirectoryEntry entry = new DirectoryEntry()) { entry.Username = "here goes the username you want to validate"; entry.Password = "here goes the password"; DirectorySearcher searcher = new DirectorySearcher(entry); searcher.Filter = "(objectclass=user)"; try { searcher.FindOne(); } catch (COMException ex) { if (ex.ErrorCode == -2147023570) { } } }
__lb__lang-golang func empty(s string) bool { return len(strings.TrimSpace(s)) == 0 }
__lb__lang-java int[] intArray = new int[] {1, 2, 3, 4, 5}; String[] strArray = new String[] {"John", "Mary", "Bob"}; ArrayUtils.toString(intArray); ArrayUtils.toString(strArray);
__lb__lang-css table tr:nth-child(odd) td{ background: } table tr:nth-child(even) td{ background: }
__lb__lang-java FileWriter fw = null; BufferedWriter bw = null; PrintWriter out = null; try { fw = new FileWriter("myfile.txt", true); bw = new BufferedWriter(fw); out = new PrintWriter(bw); out.println("the text"); out.close(); } catch (IOException e) { } finally { try { if(out != null) out.close(); } catch (IOException e) { } try { if(bw != null) bw.close(); } catch (IOException e) { } try { if(fw != null) fw.close(); } catch (IOException e) { } }
__lb__lang-c typedef struct myStruct{ int one; int two; } myStruct;
__lb__lang-cs var assembly = Assembly.GetExecutingAssembly(); var resourceName = "MyCompany.MyProduct.MyFile.txt"; using (Stream stream = assembly.GetManifestResourceStream(resourceName)) using (StreamReader reader = new StreamReader(stream)) { string result = reader.ReadToEnd(); }
__lb__lang-html <style> .monitor { position:fixed; top:0;bottom:0;right:0;left:0; visibility:hidden; } .wrapper { width:200px; height:100px; position:absolute; left:50%;top:50%; visibility:hidden; } .content { position:absolute; width: 100%;height:100%; left:-50%;top:-50%; visibility:visible; } </style> <div class="monitor"> <div class="wrapper"> <div class="content"> ... so you hav div 200px*100px on center ... </div> </div> </div>
__lb__lang-cpp ` ` . `. ` ... +:: ..-.. --.:`:. `-` .....:`../--`.. `- ` ` ```` ` ` `` .` `` .` `. `` . -``- .. .`--`:` :::.-``-. : ``.-`- `-.-`:.-` :-`/.-..` ` `-..`...- : .` ` ` ` .` ````:`` - ` ``-.` ` `- .. `` . ` .`. ` ` `. ` . . ` . ` . . .` .` ` ` `` ` ` `:`.`:` ` -..-`.`- .-`-. /.-/.-`.-. -...-..`- :``` `-`-` :`..`-` ` :`.`:`- ` `` ` ```. `` ```` ` ` ` ` ` ` ` . : -...`.- .` .:/ ` - ` `` . -` `
__lb__lang-php if(session_id()== { echo"Session isn } else { echo"Session Started"; }
__lb__lang-c const uint32* uint32_frombytes(uint32* out, const uint8* in, size_t bytes);
__lb__lang-cs <select id="role" name="role"> <option value="0">None</option> <option value="2097155">Guest</option> <option value="2916367" selected="selected">Reader</option> <option value="4186095">Manager</option> </select>
__lb__lang-php ; Determines the size of the realpath cache to be used by PHP. This value should ; be increased on systems where PHP opens many files to reflect the quantity of ; the file operations performed. ; http: realpath_cache_size = 16k ; Duration of time, in seconds for which to cache realpath information for a given ; file or directory. For systems with rarely changing files, consider increasing this ; value. ; http: realpath_cache_ttl = 120
__lb__lang-java <dependency> <groupId>com.carrotsearch</groupId> <artifactId>java-sizeof</artifactId> <version>0.0.3</version> </dependency>
__lb__lang-php $alphabetArr = []; $alphabetArr["I"] = "we"; $alphabetArr["he"] = "they"; $alphabetArr["you"] = "you";
__lb__lang-java List<String> places = Collections.singletonList("Buenos Aires");
__lb__lang-cpp struct llist { llist * next; }; void walkllist(llist *plist) { llist *pnext; while(plist) { pnext=plist->next; walk(plist); plist=pnext; } } void walkllist(llist * SUPERFLUOUS_CONST plist) { llist * pnotconst=plist; llist *pnext; while(pnotconst) { pnext=pnotconst->next; walk(pnotconst); pnotconst=pnext; } }
__lb__lang-cs public static void Deconstruct<TKey, TVal>(this KeyValuePair<TKey, TVal> pair, out TKey, out TVal val) { key = pair.Key; val = pair.Value; }
__lb__lang-java @FunctionalInterface interface ArraySupplier<E> { E[] get(int length); } class GenericSet<E> { private final ArraySupplier<E> supplier; private E[] array; GenericSet(ArraySupplier<E> supplier) { this.supplier = supplier; this.array = supplier.get(10); } public static void main(String[] args) { GenericSet<String> ofString = new GenericSet<>(String[]::new); GenericSet<Double> ofDouble = new GenericSet<>(Double[]::new); } }
__lb__lang-php if (!defined( $version = explode( define( // // // if (PHP_VERSION_ID < 50207) { define( define( define( } } function phpVersionAtLeast($strVersion = { $version = explode( $questionVer = $version[0] * 10000 + $version[1] * 100 + $version[2]; if(PHP_VERSION_ID >= $questionVer) return true; else return false; } function openSession() { if(phpVersionAtLeast( { if(session_status()==PHP_SESSION_NONE) session_start(); } else { if(session_id() == session_start(); } }
__lb__lang-c int main () { size_t ii; int *ptr = NULL; unsigned long *null_value = (unsigned long *)&ptr; if (NULL == 0) { printf ("NULL == 0\n"); } printf ("NULL = 0x"); for (ii = 0; ii < sizeof (ptr); ii++) { printf ("%02X", null_value[ii]); } printf ("\n"); return 0; }
__lb__lang-cs public interface IDeepClonable<T> where T : class { T DeepClone(); } public class MyObj : IDeepClonable<MyObj> { public MyObj Clone() { var myObj = new MyObj(); myObj._field1 = _field1; myObj._field2 = _field2; myObj._field3 = _field3; if (_child != null) { myObj._child = _child.DeepClone(); } int len = _array.Length; myObj._array = new MyObj[len]; for (int i = 0; i < len; i++) { myObj._array[i] = _array[i]; } return myObj; } private bool _field1; public bool Field1 { get { return _field1; } set { _field1 = value; } } private int _field2; public int Property2 { get { return _field2; } set { _field2 = value; } } private string _field3; public string Property3 { get { return _field3; } set { _field3 = value; } } private MyObj _child; private MyObj Child { get { return _child; } set { _child = value; } } private MyObj[] _array = new MyObj[4]; }
__lb__lang-cpp int compare_loose(double a, double b) { return a <= b; }
__lb__lang-sh if [[ $(uname -s) == CYGWIN* ]];then echo Cygwin rulez else echo Unix is king fi
__lb__lang-java Arraylist arr = new Arraylist(); arr.addAll(Arrays.asList(asset));
__lb__lang-sh absolute="/foo/bar" current="/foo/baz/foo" relative="$(relpathurl "$absolute" "$current/")" echo "$relative"
__lb__lang-c CGPoint cgPoint = CGPointMake(10,30); NSLog(@"%@",[NSValue valueWithCGPoint:cgPoint]);
__lb__lang-c int main() { int days[] = {1,2,3,4,5}; int *ptr = days; printf("%u\n", sizeof(days)); printf("%u\n", sizeof(ptr)); return 0; }
__lb__lang-php $save_folder = "some/path/" . date( if (!file_exists($save_folder)) { mkdir($save_folder, 0777); }
__lb__lang-cpp using namespace std; vector<string> split(const string& s, const string& delim, const bool keep_empty = true) { vector<string> result; if (delim.empty()) { result.push_back(s); return result; } string::const_iterator substart = s.begin(), subend; while (true) { subend = search(substart, s.end(), delim.begin(), delim.end()); string temp(substart, subend); if (keep_empty || !temp.empty()) { result.push_back(temp); } if (subend == s.end()) { break; } substart = subend + delim.size(); } return result; } int main() { const vector<string> words = split("So close no matter how far", " "); copy(words.begin(), words.end(), ostream_iterator<string>(cout, "\n")); }
__lb__lang-sh sed -e s/STRING_TO_REPLACE/STRING_TO_REPLACE_IT/g index.html
__lb__lang-cs var names = new List<string> {"mercedes", "mazda", "bmw", "fiat", "ferrari"}; var startingWith_M = names.Where(x => x.StartsWith("m")); var startingWith_F = names.Where(x => x.StartsWith("f")); names[0] = "ford"; print( startingWith_M.ToList() ); print( startingWith_F.ToList() );
__lb__lang-cs try { if (!Directory.Exists(path)) { DirectoryInfo di = Directory.CreateDirectory(path); } } catch (IOException ioex) { Console.WriteLine(ioex.Message); }
__lb__lang-html <div id="container3"> <div id="container2"> <div id="container1"> <div id="col1">Column 1</div> <div id="col2">Column 2</div> <div id="col3">Column 3</div> </div> </div> </div>
__lb__lang-php <?php class PageShow { public $currentpage; public function __construct($pageobj) { $this->currentpage = $pageobj; } public function show() { echo $this->currentpage->name; $state = ($this->currentpage->status == 1) ? echo } }
__lb__lang-cs using Newtonsoft.Json; [TestMethod] public void ExportJson() { double[,] b = new double[,] { { 110, 120, 130, 140, 150 }, { 1110, 1120, 1130, 1140, 1150 }, { 1000, 1, 5 ,9, 1000}, {1110, 2, 6 ,10,1110}, {1220, 3, 7 ,11,1220}, {1330, 4, 8 ,12,1330} }; string jsonStr = JsonConvert.SerializeObject(b); Console.WriteLine(jsonStr); string path = "X:\\Programming\\workspaceEclipse\\PyTutorials\\src\\tensorflow_tutorials\\export.txt"; File.WriteAllText(path, jsonStr); }
__lb__lang-php <?php $today = strtotime("2011-02-03 00:00:00"); $myBirthDate = strtotime("1964-10-30 00:00:00"); printf("Days since my birthday: ", ($today - $myBirthDate)/60/60/24); ?>
__lb__lang-java public class Foo() { public interface Parameters { String getRequired(); default int getOptionalInt(){ return 23; } default String getOptionalString(){ return "Skidoo"; } } public Foo(Parameters parameters){ } public static void baz() { final Foo foo = new Foo(new Person() { @Override public String getRequired(){ return "blahblahblah"; } @Override public int getOptionalInt(){ return 43; } }); } }
__lb__lang-java CarService instance = new CarService(); String carsByFilter = CarServiceGetCarsByFilterBuilder.getCarsByFilter()// .invoke(instance);
__lb__lang-php $array = [1, 2, 3, 4, 5]; foreach ($array as &$value) { var_dump($value); reset($array); }
__lb__lang-hs import Control.Monad newtype Comp r e a = Comp { uncomp :: Either e (r -> a) }
__lb__lang-golang Results: map[toptracks:map[track:map[name:Get Lucky (feat. Pharrell Williams) listeners:1863 url:http:
__lb__lang-java Pattern pattern = Pattern.compile("[,;:]"); String[] results = pattern.split(input);
__lb__lang-java StringBuffer is synchronized StringBuffer is thread-safe StringBuffer is slow (try to write a sample program and execute it, it will take more time than StringBuilder)
__lb__lang-cs int integerValue = 19400320; string formatted = string.Format(CultureInfo.InvariantCulture, "{0:N0}", integerValue);
__lb__lang-java public static void main(String[] args) { Collection<Integer> l = new ArrayList<Integer>(); Collection<Integer> itemsToRemove = new ArrayList<Integer>(); for (int i=0; i < 10; ++i) { l.add(new Integer(4)); l.add(new Integer(5)); l.add(new Integer(6)); } for (Integer i : l) { if (i.intValue() == 5) itemsToRemove.add(i); } l.removeAll(itemsToRemove); System.out.println(l); }
__lb__lang-php function UTCToTimestamp($utc_datetime_str) { preg_match_all( $datetime_str = $matches_arr[1][0]." ".$matches_arr[2][0]; return strtotime($datetime_str); } $my_utc_datetime_str = $my_timestamp_str = UTCToTimestamp($my_utc_datetime_str);
__lb__lang-sh echo "bla@some.com;john@home.com" | sed -e bla@some.com john@home.com
__lb__lang-cs foreach (var i in IteratorBlock()) Console.WriteLine(i);
__lb__lang-java class DummyBean { private String dummy; public DummyBean(DummyBean another) { this.dummy = another.dummy; } }
__lb__lang-sh the_world_is_flat=true if ${the_world_is_flat:-false} ; then echo "Be careful not to fall off!" fi
__lb__lang-hs consolestate FinalConsole = print(input(print(myconsole, "Hello, what
__lb__lang-cs import java.util.Date; public class RelativeDateFormat { private static final long ONE_MINUTE = 60000L; private static final long ONE_HOUR = 3600000L; private static final long ONE_DAY = 86400000L; private static final long ONE_WEEK = 604800000L; public static String format(Date date) { long delta = new Date().getTime() - date.getTime(); if (delta < 1L * ONE_MINUTE) { return toSeconds(delta) == 1 ? "one second ago" : toSeconds(delta) + " seconds ago"; } if (delta < 2L * ONE_MINUTE) { return "one minute ago"; } if (delta < 45L * ONE_MINUTE) { return toMinutes(delta) + " minutes ago"; } if (delta < 90L * ONE_MINUTE) { return "one hour ago"; } if (delta < 24L * ONE_HOUR) { return toHours(delta) + " hours ago"; } if (delta < 48L * ONE_HOUR) { return "yesterday"; } if (delta < 30L * ONE_DAY) { return toDays(delta) + " days ago"; } if (delta < 12L * 4L * ONE_WEEK) { long months = toMonths(delta); return months <= 1 ? "one month ago" : months + " months ago"; } else { long years = toYears(delta); return years <= 1 ? "one year ago" : years + " years ago"; } } private static long toSeconds(long date) { return date / 1000L; } private static long toMinutes(long date) { return toSeconds(date) / 60L; } private static long toHours(long date) { return toMinutes(date) / 60L; } private static long toDays(long date) { return toHours(date) / 24L; } private static long toMonths(long date) { return toDays(date) / 30L; } private static long toYears(long date) { return toMonths(date) / 365L; } }
__lb__lang-java public class ExtendsAndImplementsDemo{ public static void main(String args[]){ Dog dog = new Dog("Tiger",16); Cat cat = new Cat("July",20); System.out.println("Dog:"+dog); System.out.println("Cat:"+cat); dog.remember(); dog.protectOwner(); Learn dl = dog; dl.learn(); cat.remember(); cat.protectOwner(); Climb c = cat; c.climb(); Man man = new Man("Ravindra",40); System.out.println(man); Climb cm = man; cm.climb(); Think t = man; t.think(); Learn l = man; l.learn(); Apply a = man; a.apply(); } } abstract class Animal{ String name; int lifeExpentency; public Animal(String name,int lifeExpentency ){ this.name = name; this.lifeExpentency=lifeExpentency; } public void remember(){ System.out.println("Define your own remember"); } public void protectOwner(){ System.out.println("Define your own protectOwner"); } public String toString(){ return this.getClass().getSimpleName()+":"+name+":"+lifeExpentency; } } class Dog extends Animal implements Learn{ public Dog(String name,int age){ super(name,age); } public void remember(){ System.out.println(this.getClass().getSimpleName()+" can remember for 5 minutes"); } public void protectOwner(){ System.out.println(this.getClass().getSimpleName()+ " will protect owner"); } public void learn(){ System.out.println(this.getClass().getSimpleName()+ " can learn:"); } } class Cat extends Animal implements Climb { public Cat(String name,int age){ super(name,age); } public void remember(){ System.out.println(this.getClass().getSimpleName() + " can remember for 16 hours"); } public void protectOwner(){ System.out.println(this.getClass().getSimpleName()+ " won } public void climb(){ System.out.println(this.getClass().getSimpleName()+ " can climb"); } } interface Climb{ public void climb(); } interface Think { public void think(); } interface Learn { public void learn(); } interface Apply{ public void apply(); } class Man implements Think,Learn,Apply,Climb{ String name; int age; public Man(String name,int age){ this.name = name; this.age = age; } public void think(){ System.out.println("I can think:"+this.getClass().getSimpleName()); } public void learn(){ System.out.println("I can learn:"+this.getClass().getSimpleName()); } public void apply(){ System.out.println("I can apply:"+this.getClass().getSimpleName()); } public void climb(){ System.out.println("I can climb:"+this.getClass().getSimpleName()); } public String toString(){ return "Man :"+name+":Age:"+age; } }
__lb__lang-java import com.google.common.collect.ImmutableList; .... List<String> places = ImmutableList.of("Buenos Aires", "Córdoba", "La Plata");
__lb__lang-cpp bool caseInsensitiveStringCompare(const string& str1, const string& str2) { if (str1.size() != str2.size()) { return false; } for (string::const_iterator c1 = str1.begin(), c2 = str2.begin(); c1 != str1.end(); ++c1, ++c2) { if (tolower(*c1) != tolower(*c2)) { return false; } } return true; }
__lb__lang-cpp Comparison Subtraction Carry Bit Zero Bit ---------- ----------- --------- -------- A < B --> A - B < 0 0 0 A = B --> A - B = 0 1 1 A > B --> A - B > 0 1 0
__lb__lang-php <?php require_once echo convert_title_to_utf8(file_get_contents($argv[1])), PHP_EOL; function convert_title_to_utf8($contents) { $dom = str_get_html($contents); $title = $dom->find( if (empty($title)) { return null; } $title = $title->plaintext; $metas = $dom->find( $charset = foreach ($metas as $meta) { if (!empty($meta->charset)) { $charset = $meta->charset; } else if (preg_match( $charset = $match[1]; } } if (!in_array(strtolower($charset), array_map( $charset = } return mb_convert_encoding($title, }
__lb__lang-css input[type="checkbox"] { position: absolute; opacity: 0; z-index: -1; }
__lb__lang-golang import ( "database/sql" "fmt" _ "github.com/mattn/go-sqlite3" "log" "os" )
__lb__lang-cpp struct Sprite { int x; }; int main () { int num = 50; Sprite **spritearray; spritearray = new Sprite *[num]; for (int n = 0; n < num; n++) { spritearray[n] = new Sprite; spritearray->x = n * 3; } for (int n = 0; n < num; n++) { if (spritearray[n]->x < 0) { delete spritearray[n]; spritearray[n] = NULL; } } for (int n = 0; n < num; n++) { if (spritearray[n] != NULL){ delete spritearray[n]; spritearray[n] = NULL; } } delete []spritearray; spritearray = NULL; return 0; }
__lb__lang-java String validCharacters = $( String randomString(int length) { return $(validCharacters).shuffle().slice(length).toString(); } @Test public void buildFiveRandomStrings() { for (int i : $(5)) { System.out.println(randomString(12)); } }
__lb__lang-css form input:not([type="radio"], [type="checkbox"]) { }
__lb__lang-java public void methodA(A arg1) { } public void methodA( B arg2,) { } public void methodA(C arg3) { } public void methodA(A arg1, B arg2) { } public void methodA(A arg1, C arg3) { } public void methodA( B arg2, C arg3) { } public void methodA(A arg1, B arg2, C arg3) { }
__lb__lang-golang [Unit] Description=My Go App [Service] Type=simple WorkingDirectory=/my/go/app/directory ExecStart=/usr/lib/go run main.go [Install] WantedBy=multi-user.target
__lb__lang-cs var myQuery2 = (from x in _myObject select x).MyDistinct2(d => d.Name, y => y.Name.Contains("1") || y.Name.Contains("2") );
__lb__lang-java try { int zero = 1 - 1; int a = 1/zero; } catch (Exception e) { e.printStackTrace(); }
__lb__lang-java List<String> names = .... Iterator<String> it = names.iterator(); while (it.hasNext()) { String name = it.next(); it.remove(); }
__lb__lang-golang quit := make(chan bool) go func() { for { select { case <- quit: return default: } } }() quit <- true
__lb__lang-css .pretty { position: relative; margin: 1em; } .pretty input { position: absolute; left: 0; top: 0; min-width: 1em; width: 100%; height: 100%; z-index: 2; opacity: 0; margin: 0; padding: 0; cursor: pointer; } .pretty-inner { box-sizing: border-box; position: relative; } .pretty-inner label { position: initial; display: inline-block; font-weight: 400; margin: 0; text-indent: 1.5em; min-width: calc(1em + 2px); } .pretty-inner label:after, .pretty-inner label:before { content: width: calc(1em + 2px); height: calc(1em + 2px); display: block; box-sizing: border-box; border-radius: 0; border: 1px solid transparent; z-index: 0; position: absolute; left: 0; top: 0; background-color: transparent; } .pretty-inner label:before { border-color: } .pretty input:checked~.pretty-inner label:after { background-color: width: calc(1em - 6px); height: calc(1em - 6px); top: 4px; left: 4px; } .pretty input:checked~.pretty-inner.checkmark:after { content: color: position: absolute; font-size: 0.65em; left: 6px; top: 3px; } body { font-size: 20px; font-family: sans-serif; }
__lb__lang-java @Layout(R.layout.item_view_1) public class View1{ @View(R.id.txt) public TextView txt; @Resolve public void onResolved() { txt.setText(String.valueOf(System.currentTimeMillis() / 1000)); } @Click(R.id.btn) public void onClick(){ txt.setText(String.valueOf(System.currentTimeMillis() / 1000)); } }
__lb__lang-hs run :: State st t -> st -> (t, st) run = stateProc eval :: State st t -> st -> t eval = fst . run exec :: State st t -> st -> st exec = snd . run
__lb__lang-cs namespace Outer { using Outer.Inner; class Bar { public Foo foo; } }
__lb__lang-java items.forEach(item->System.out.println(item)); items.forEach(System.out::println);
__lb__lang-cs List<string> ListCopy= new List<string>(OldList); List<T> ListCopy=OldList.ToList();
__lb__lang-java Assert.notNull(validationEventHandler,"ValidationHandler not Injected");
__lb__lang-hs myFoldl stepL zeroL xs = (foldr stepR id xs) zeroL where stepR lastL accR accInitL = accR (stepL accInitL lastL)
__lb__lang-cs List<Person> pList = new List<Person>(); var result = pList.Where(p => p.Name != null).GroupBy(p => p.Id).Select(grp => grp.FirstOrDefault());
__lb__lang-java static String convertStreamToString(java.io.InputStream is) { java.util.Scanner s = new java.util.Scanner(is).useDelimiter("\\A"); return s.hasNext() ? s.next() : ""; }
__lb__lang-sh cd /home/ubuntu touch blah TEST=/home/ubuntu/. echo TEST=$TEST TMP=$(readlink -e "$TEST") echo TMP=$TMP REL=${TMP echo REL=$REL
__lb__lang-perl sub new { my $class = shift; my $self = { }; bless $self, $class; }
__lb__lang-perl my $output_file; if((scalar (@ARGV) == 2) && ($ARGV[0] eq "-i")) { $output_file= chomp($ARGV[1]) ; }
__lb__lang-cs StatusEnum MyStatus = EnumUtil.ParseEnum("Active", StatusEnum.None);
__lb__lang-perl use Perl6::Junction qw/ any /; if (any(@grant) eq ... }
__lb__lang-php $data = file_get_contents( "file.txt" ); if( $data === false ) { die( "Failure." ); } do_something_important( $data );
__lb__lang-html <select> <option>Option 1</option> <option>Option 2</option> </select> <select style="font-size: 2rem;"> <option>Option 1</option> <option>Option 2</option> </select>
__lb__lang-php <?php use MyCLabs\Enum\Enum; /** * Action enum */ class Action extends Enum { const VIEW = const EDIT = }
__lb__lang-hs data Foo = Foo Int !Int first (Foo x _) = x second (Foo _ y) = y
__lb__lang-java android { ... defaultConfig { ... jackOptions { enabled true } } compileOptions { sourceCompatibility JavaVersion.VERSION_1_8 targetCompatibility JavaVersion.VERSION_1_8 } }
__lb__lang-golang func WriteLines(saBuff[]string, sFilename string) (bool) {
__lb__lang-php $json_data = "John": { "status":"Wait" }, "Jennifer": { "status":"Active" }, "James": { "status":"Active", "age":56, "count":10, "progress":0.0029857, "bad":0 } } $decode_data = json_decode($json_data); foreach($decode_data as $key=>$value){ print_r($value); }
__lb__lang-golang package main import ( "strings" "fmt" ) func main() { var str strings.Builder for i := 0; i < 1000; i++ { str.WriteString("a") } fmt.Println(str.String()) }
__lb__lang-java package com.commandline.folder; import java.io.File; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import java.util.stream.Stream; public class FolderReadingDemo { public static void main(String[] args) { String str = args[0]; final File folder = new File(str); listFilesForFolder(str); } public static void listFilesForFolder(String str) { try (Stream<Path> paths = Files.walk(Paths.get(str))) { paths.filter(Files::isRegularFile).forEach(System.out::println); } catch (Exception e) { e.printStackTrace(); } } public static void listFilesForFolder(final File folder) { for (final File fileEntry : folder.listFiles()) { if (fileEntry.isDirectory()) { listFilesForFolder(fileEntry); } else { System.out.println(fileEntry.getName()); } } } }
__lb__lang-hs foldl = foldl = foldl = foldl = foldl = foldl = foldl = 21 -- 21 is a data constructor, stop.
__lb__lang-cs List<Entities.InformationRequestOrderLink> links = adjustmentContext.InformationRequestOrderLinks .Where(item => item.OrderNumber == irOrderLinkVO.OrderNumber && item.InformationRequestId == irOrderLinkVO.InformationRequestId).ToList(); int id = 0; if (links.Any()) { id = links.Max(x => x.Id); } if (id == 0) { }
__lb__lang-hs drawClass :: Sample -> RVar Class drawClass = ... drawClasses :: Array U DIM1 Sample -> RVar (Array U DIM1 Class) drawClasses samples = A.mapM drawClass samples
__lb__lang-golang sudo GOOS=windows GOARCH=386 CGO_ENABLED=0 ./make.bash --no-clean
__lb__lang-perl sub trim { (my $s = $_[0]) =~ s/^\s+|\s+$ return $s; }
__lb__lang-java import java.io.*; import java.util.Scanner; import java.io.FileNotFoundException; public class readByLine { public readByLine() throws FileNotFoundException { Scanner linReader = new Scanner(new File("dataFile.txt")); while (linReader.hasNext()) { String line = linReader.nextLine(); System.out.println(line); } linReader.close(); } public static void main(String args[]) throws FileNotFoundException { new readByLine(); } }
__lb__lang-php usort($inventory, function ($item1, $item2) { return $item1[ });
__lb__lang-sh You are login as: root Date is: Thu Oct 17 02:56:36 EDT 2013
__lb__lang-cpp int count = 0; int main(void) { int count = 0; ::count = 1; count = 2; return 0; }
__lb__lang-sh $ cat files.txt 1 2.3 3.4 ew 1 $ cat files.txt | awk 7.7
__lb__lang-php ... if ($myEntity->getMyColumn() === null) { $myEntity->setMyColumn( } ...
__lb__lang-c int main(){ int a[4]={0,1,5,3}; int a0 = a[0]; int a1 = *(a+1); int a2 = *(2+a); int a3 = 3[a]; return a2; }
__lb__lang-sh dir=/tmp/getlist.test/ mkdir -p "$dir" cd "$dir" touch getlist0() { while IFS= read -d $ printf done < <(find . -iname } getlist1() { while read -d $ printf done < <(find . -iname } getlist2() { find . -iname printf done } getlist3() { find . -iname printf done } getlist4() { for file in "$(find . -iname printf done } getlist5() { IFS=$ for file in $(find . -iname printf done } for n in {0..5} ; do printf eval getlist$n done rm -rf "$dir"
__lb__lang-perl while( <> ){ print "top of loop\n"; chomp; next if /next/i; last if /last/i; print "bottom of loop\n"; }continue{ print "continue\n"; }
__lb__lang-perl my $sth = $dbh->prepare("INSERT INTO table (flag,value) VALUES (?,?)") $sth->execute("i_haz_cheeseburger", !! $cheeseburger_string)
__lb__lang-php /*! \param[in] $InputArray (array) Input array. \return (bool) \b true iff the input is an array whose keys are all integers. */ function IsArrayAllKeyInt($InputArray) { if(!is_array($InputArray)) { return false; } if(count($InputArray) <= 0) { return true; } return array_unique(array_map("is_int", array_keys($InputArray))) === array(true); }
__lb__lang-php Array ( [0] => blue [1] => green [2] => red [3] => yellow [4] => green [5] => orange [6] => yellow [7] => indigo [8] => red ) Array ( [0] => blue [1] => green [4] => green [5] => orange [7] => indigo )
__lb__lang-cs public void SomeMethod<TBuilder>(GraphicsDeviceManager manager) where TBuilder: IDrawableConstructor<Triangle>, new() { Triangle triangle = new TBuilder().Construct(manager); }
__lb__lang-cpp person(const person& that) : name(that.name), age(that.age) { } person& operator=(const person& that) { name = that.name; age = that.age; return *this; } ~person() { }
__lb__lang-java List<Integer> intList = Arrays.asList(new Integer[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100});
__lb__lang-golang package main import "fmt" type Info struct { value string } func main() { table := make(map[string]*Info) for i := 0; i < 10; i++ { str := fmt.Sprintf("%v", i) table[str] = &Info{str} } for key, value := range table { fmt.Printf("deleting %v=>%v\n", key, value.value) delete(table, key) } }
__lb__lang-css textarea { border:1px solid width:100%; margin:5px 0; padding:3px; }
__lb__lang-cs SetControlPropertyThreadSafe(myLabel, "Text", status);
__lb__lang-php if(strlen($text) > 10) $text = substr($text,0,10) . "...";
__lb__lang-cpp std::string str; try { int i = boost::lexical_cast<int>( str.c_str()); float f = boost::lexical_cast<int>( str.c_str()); double d = boost::lexical_cast<int>( str.c_str()); } catch( boost::bad_lexical_cast const& ) { }
__lb__lang-sh read -p "<Your Friendly Message here> : y/n/cancel" CONDITION; if [ "$CONDITION" == "y" ]; then fi
__lb__lang-cs List<int> xList = new List<int>() { 1, 2, 3, 4, 5 }; List<int> deck = new List<int>(); foreach (int xInt in xList) deck.Insert(random.Next(0, deck.Count + 1), xInt);
__lb__lang-cs dynamic stuff = JObject.Parse("{ string name = stuff.Name; string address = stuff.Address.City;
__lb__lang-cs Public Overridable Function Foo() As Integer Implements IFoo.Foo
__lb__lang-css @font-face{ font-family: src: url( src: url( url( url( url( } body { font-face: } .inline-container { font-face: } .inline-container > * { display: inline-block; font-face: }
__lb__lang-php $post_url= function get_headers_curl($url) { $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_HEADER, true); curl_setopt($ch, CURLOPT_NOBODY, true); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_TIMEOUT, 15); $r = curl_exec($ch); return $r; } $the_header = get_headers_curl($post_url); if (preg_match("/Location:/i", $the_header)) { $arr = explode( $location = $arr[1]; $location=explode(chr(10), $location); $location = $location[0]; $the_header = get_headers_curl(trim($location)); } if (preg_match("/charset=/i", $the_header)) { $arr = explode( $charset = $arr[1]; $charset=explode(chr(10), $charset); $charset = $charset[0]; } if($charset && $charset!=
__lb__lang-php <?php $pastDate = "Tuesday 11th October, 2016"; $pastDate = str_replace(",","",$pastDate); $date = new DateTime($pastDate); $new_date_format = $date->format( echo $new_date_format.
__lb__lang-java public static String getString( InputStream is) throws IOException { int ch; StringBuilder sb = new StringBuilder(); while((ch = is.read()) != -1) sb.append((char)ch); return sb.toString(); }
__lb__lang-php chdir(dirname(__FILE__)); for ($i = 0; $i < 2; $i += 1){ exec("php test_1.php $i > test.txt &");
__lb__lang-php /** * ErrorHandler that can be used to catch internal PHP errors * and convert to an ErrorException instance. */ abstract class ErrorHandler { /** * Active stack * * @var array */ protected static $stack = array(); /** * Check if this error handler is active * * @return bool */ public static function started() { return (bool) static::getNestedLevel(); } /** * Get the current nested level * * @return int */ public static function getNestedLevel() { return count(static::$stack); } /** * Starting the error handler * * @param int $errorLevel */ public static function start($errorLevel = \E_WARNING) { if (!static::$stack) { set_error_handler(array(get_called_class(), } static::$stack[] = null; } /** * Stopping the error handler * * @param bool $throw Throw the ErrorException if any * @return null|ErrorException * @throws ErrorException If an error has been catched and $throw is true */ public static function stop($throw = false) { $errorException = null; if (static::$stack) { $errorException = array_pop(static::$stack); if (!static::$stack) { restore_error_handler(); } if ($errorException && $throw) { throw $errorException; } } return $errorException; } /** * Stop all active handler * * @return void */ public static function clean() { if (static::$stack) { restore_error_handler(); } static::$stack = array(); } /** * Add an error to the stack * * @param int $errno * @param string $errstr * @param string $errfile * @param int $errline * @return void */ public static function addError($errno, $errstr = { $stack = & static::$stack[count(static::$stack) - 1]; $stack = new ErrorException($errstr, 0, $errno, $errfile, $errline, $stack); } }
__lb__lang-php chown -R www-data:www-data /var/www/html/wp-content
__lb__lang-java import java.util.Collections; import java.util.HashMap; import java.util.Map; /** * A tool for easy creation of a map. Code example:<br/> * {@code MapBuilder.of("name", "Forrest").and("surname", "Gump").build()} * @param <K> key type (inferred by constructor) * @param <V> value type (inferred by constructor) * @author Vlasec (for http: */ public class MapBuilder <K, V> { private Map<K, V> map = new HashMap<>(); /** Constructor that also enters the first entry. */ private MapBuilder(K key, V value) { and(key, value); } /** Factory method that creates the builder and enters the first entry. */ public static <A, B> MapBuilder<A, B> mapOf(A key, B value) { return new MapBuilder<>(key, value); } /** Puts the key-value pair to the map and returns itself for method chaining */ public MapBuilder<K, V> and(K key, V value) { map.put(key, value); return this; } /** * If no reference to builder is kept and both the key and value types are immutable, * the resulting map is immutable. * @return contents of MapBuilder as an unmodifiable map. */ public Map<K, V> build() { return Collections.unmodifiableMap(map); } }
__lb__lang-cs class Program { static void Main(string[] args) { dynamic d = new ExpandoObject(); d.MyEvent = null; d.MyEvent += new EventHandler(OnMyEvent); d.MyEvent += new EventHandler(OnMyEvent2); EventHandler e = d.MyEvent; if (e != null) { e(d, new EventArgs()); } } static void OnMyEvent(object sender, EventArgs e) { Console.WriteLine("OnMyEvent fired by: {0}", sender); } static void OnMyEvent2(object sender, EventArgs e) { Console.WriteLine("OnMyEvent2 fired by: {0}", sender); } }
__lb__lang-c struct { int16 size; int16 array[array_size]; int16 property1[(array_size/16)+1] int16 property2[(array_size/16)+1] } array2 = {array_size};
__lb__lang-cs static class Foo() { static Foo() { Bar = "fubar"; } public static string Bar { get; set; } }
__lb__lang-cs public static class ObjectExtenders { static readonly ConditionalWeakTable<object, List<stringObject>> Flags = new ConditionalWeakTable<object, List<stringObject>>(); public static string GetFlags(this object objectItem, string key) { return Flags.GetOrCreateValue(objectItem).Single(x => x.Key == key).Value; } public static void SetFlags(this object objectItem, string key, string value) { if (Flags.GetOrCreateValue(objectItem).Any(x => x.Key == key)) { Flags.GetOrCreateValue(objectItem).Single(x => x.Key == key).Value = value; } else { Flags.GetOrCreateValue(objectItem).Add(new stringObject() { Key = key, Value = value }); } } class stringObject { public string Key; public string Value; } }
__lb__lang-sh IN="bla@some.com;john@home.com" OIFS=$IFS IFS= mails2=$IN for x in $mails2 do echo "> [$x]" done IFS=$OIFS
__lb__lang-sh if [[ ! -e /path/to/newdir ]]; then mkdir /path/to/newdir fi
__lb__lang-java package org.boon.utils; import java.io.IOException; import java.io.InputStream; import java.net.HttpURLConnection; import java.net.URL; import java.net.URLConnection; import java.util.Map; import static org.boon.utils.IO.read; public class HTTP {
__lb__lang-cs if(formsAuth != null) FormsAuth = formsAuth; else FormsAuth = new FormsAuthenticationWrapper();
__lb__lang-php display_syntax(){ echo "" echo " The Syntax is like this:" echo " ========================" echo " "$(basename $0)" -f <facade_name> -n echo "" echo " Example:" echo " ========" echo " "$(basename $0) -f test -n " echo "" } if [ $ then echo "" display_syntax exit else while [[ $ do key="$1" case $key in -n|--namespace_prefix) namespace_prefix_in="$2" echo "" shift ;; -f|--facade) facade_name_in="$2" shift ;; *) ;; esac shift done fi echo Facade Name = ${facade_name_in} echo Namespace Prefix = $(echo ${namespace_prefix_in} | sed -e echo "" } function display_start_banner(){ echo echo echo } function init_and_export_vars(){ echo echo "INIT and EXPORT VARS" echo "====================" # # namespace_prefix=$(echo ${namespace_prefix_in} | sed -e namespace_prefix_lowerfirstchar=$(echo ${namespace_prefix_in} | sed -e facade_name_upcase=$(echo ${facade_name_in} | sed -e facade_name_lowercase=$(echo ${facade_name_in} | awk source_template= namespace {namespace_prefix}\Facades; class {facade_name_upcase} { // } ' serviceProvider_template= namespace {namespace_prefix}\Providers; use Illuminate\Support\ServiceProvider; use App; class {facade_name_upcase}ServiceProvider extends ServiceProvider { public function boot() { // } public function register() { App::bind("{facade_name_lowercase}", function() { return new \{namespace_prefix}\Facades\{facade_name_upcase}; }); } } ' facade_template= namespace {namespace_prefix}\Facades; use Illuminate\Support\Facades\Facade; class {facade_name_upcase}Facade extends Facade { protected static function getFacadeAccessor() { return "{facade_name_lowercase}"; } } ' } function checkDirectoryExists(){ if [ ! -d ${namespace_prefix_lowerfirstchar} ] then echo "" echo "Can echo "" echo "*** NOTE:" echo " Make sure the namspace directory exists and" echo " you use quotes around the namespace_prefix." echo "" display_syntax exit fi } function makeDirectories(){ echo "Make Directories" echo "================" mkdir -p ${namespace_prefix_lowerfirstchar}/Facades mkdir -p ${namespace_prefix_lowerfirstchar}/Providers mkdir -p ${namespace_prefix_lowerfirstchar}/Facades } function createSourceTemplate(){ source_template=$(echo "${source_template}" | sed -e echo "Create Source Template:" echo "=======================" echo "${source_template}" echo "" echo "${source_template}" > ./${namespace_prefix_lowerfirstchar}/Facades/${facade_name_upcase}.php } function createServiceProviderTemplate(){ serviceProvider_template=$(echo "${serviceProvider_template}" | sed -e echo "Create ServiceProvider Template:" echo "================================" echo "${serviceProvider_template}" echo "" echo "${serviceProvider_template}" > ./${namespace_prefix_lowerfirstchar}/Providers/${facade_name_upcase}ServiceProvider.php } function createFacadeTemplate(){ facade_template=$(echo "${facade_template}" | sed -e echo "Create Facade Template:" echo "=======================" echo "${facade_template}" echo "" echo "${facade_template}" > ./${namespace_prefix_lowerfirstchar}/Facades/${facade_name_upcase}Facade.php } function serviceProviderPrompt(){ echo "Providers: ${namespace_prefix_in}\Providers\\${facade_name_upcase}ServiceProvider," } function aliasPrompt(){ echo "Alias: } # # display_start_banner init_and_export_vars makeDirectories checkDirectoryExists echo "" createSourceTemplate createServiceProviderTemplate createFacadeTemplate echo "" echo "===========================" echo " Finished TEST" echo "===========================" echo "" echo "Add these lines to config/app.php:" echo "----------------------------------" serviceProviderPrompt aliasPrompt echo ""
__lb__lang-php function curPageURL() { if(isset($_SERVER["HTTPS"]) && !empty($_SERVER["HTTPS"]) && ($_SERVER["HTTPS"] != $url = } else { $url = } if(( $_SERVER["SERVER_PORT"] != 80 )) { $url .= $_SERVER["SERVER_PORT"]; } $url .= $_SERVER["REQUEST_URI"]; return $url; } echo curPageURL();
__lb__lang-java Stream<String> stringStream = Stream.of("a", "b", "c"); String[] stringArray = stringStream.toArray(size -> new String[size]); Arrays.stream(stringArray).forEach(System.out::println);
__lb__lang-java Set<T> mySet = new HashSet<T>(Arrays.asList(someArray));
__lb__lang-java SEVERE: Servlet.service() for servlet UploadServlet threw exception javax.servlet.ServletException: Servlet execution threw an exception at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:313) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298) at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852) at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588) at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489) at java.lang.Thread.run(Thread.java:637)
__lb__lang-golang func TestReverse(t *testing.T) { assert.Equal(t, Reverse(""), "") assert.Equal(t, Reverse("X"), "X") assert.Equal(t, Reverse("b\u0301"), "b\u0301") assert.Equal(t, Reverse("😎⚽"), "⚽😎") assert.Equal(t, Reverse("Les Mise\u0301rables"), "selbare\u0301siM seL") assert.Equal(t, Reverse("ab\u0301cde"), "edcb\u0301a") assert.Equal(t, Reverse("This `\xc5` is an invalid UTF8 character"), "retcarahc 8FTU dilavni na si `�` sihT") assert.Equal(t, Reverse("The quick bròwn 狐 jumped over the lazy 犬"), "犬 yzal eht revo depmuj 狐 nwòrb kciuq ehT") }
__lb__lang-cpp int** a = new int* [x]; for(int i = 0; i < x; i++) a[i] = new int[y];
__lb__lang-hs yOnUp :: Diff2 b => [D b X (Mu b y) y] -> Mu b y -> [D b X (Mu b (ZF (Mu b) y)) (ZF (Mu b) y)] yOnUp [] t = [] yOnUp (dX : dXs) (t :: Mu b y) = contextualize dXs (cxZ $ around VX (dX :<- XX t)) : yOnUp dXs (In (up VX (dX :<- XX t)))
__lb__lang-java Map<String, Object> info = Map.ofEntries( Map.entry("age", 27), Map.entry("major", "cs") );
__lb__lang-php function unicodeStrDigits($str) { $arr = array(); $sub = for ($i = 0; $i < strlen($str); $i++) { if (is_numeric($str[$i])) { $sub .= $str[$i]; continue; } else { if ($sub) { array_push($arr, $sub); $sub = } } } if ($sub) { array_push($arr, $sub); } return $arr; }
__lb__lang-golang cannot use []int literal (type []int) as type int in append
__lb__lang-html <label> <input type= <span></span> Checkbox label text </label>
__lb__lang-cs public interface IQueueItemFactory<T> where T : IQueueItem { T FromMessage(CloudQueueMessage objMessage); }
__lb__lang-c Class ViewClass; void View_drawRect(id self, SEL _cmd, CGRect rect) { id red = objc_msgSend(objc_getClass("NSColor"), sel_getUid("redColor")); NSRect rect1 = NSMakeRect ( 21,21,210,210 ); objc_msgSend(red, sel_getUid("set")); NSRectFill ( rect1 ); } __attribute__((constructor)) static void initView() { ViewClass = objc_allocateClassPair((Class) objc_getClass("NSView"), "View", 0); class_addMethod(ViewClass, sel_getUid("drawRect:"), (IMP) View_drawRect, "v@:"); objc_registerClassPair(ViewClass); }
__lb__lang-php function throwErrorException($errstr = null,$code = null, $errno = null, $errfile = null, $errline = null) { throw new ErrorException($errstr, 0, $errno, $errfile, $errline); } function warning_handler($errno, $errstr, $errfile, $errline, array $errcontext) { return false && throwErrorException($errstr, 0, $errno, $errfile, $errline); } ... set_error_handler( ... try { mkdir($path, 0777, true); } catch (Exception $e) { echo $e->getMessage(); }
__lb__lang-cs bool b1 = Microsoft.VisualBasic.Information.IsNumeric("1"); bool b2 = Microsoft.VisualBasic.Information.IsNumeric("1aa");
__lb__lang-cpp output("int a[] = {"); for (int i = 0; i < items.length; i++) { output("%s, ", items[i]); } output("};");
__lb__lang-sh function ask_user() { echo -e " | 1.) Yes | | 2.) No | | 3.) Quit | read -e -p "Select 1: " choice if [ "$choice" == "1" ]; then do_something elif [ "$choice" == "2" ]; then do_something_else elif [ "$choice" == "3" ]; then clear && exit 0 else echo "Please select 1, 2, or 3." && sleep 3 clear && ask_user fi } ask_user
__lb__lang-java public class Employee { private String name; private String grade; public Employee(String name, String grade) { this.name = name; this.grade = grade; } public String getName() { return name; } public void setName(String name) { this.name = name; } public String getGrade() { return grade; } public void setGrade(String grade) { this.grade = grade; } }
__lb__lang-css div.stretchy{ transition: 1s linear; } div.stretchy.hidden{ height: 0; } div.stretchy.visible{ height: auto; min-height:40px; max-height:400px; }
__lb__lang-golang /usr/local/Cellar/go/1.0.2/src/pkg/code.google.com/p/
__lb__lang-php $obj_a = new stdClass(); $obj_a->name = "John"; print_r($obj_a);
__lb__lang-cs public static string RandomString(int length) { const string chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"; var random = new Random(); return new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray()); }
__lb__lang-java <dependency> <groupId>com.jayway.jsonpath</groupId> <artifactId>json-path</artifactId> <version>2.2.0</version> </dependency>
__lb__lang-java public class SuperClass { public int getNb() { return 1; } public int getNb2() { return 2; } } public class SubClass extends SuperClass { @Override public int getNb2() { return 3; } }
__lb__lang-perl echo "ghai ghai" | sed "s/[^\sg] gg echo "ghai ghai" | sed "s/[^ g] g g
__lb__lang-cs System.IO.Path.Combine(rootUrl, subPath).Replace(@"\", "/")
__lb__lang-perl sub is_number{ my $n = shift; my $ret = 1; $SIG{"__WARN__"} = sub {$ret = 0}; eval { my $x = $n + 1 }; return $ret }
__lb__lang-java get O(1) add O(n) contains O(n) next O(1) remove O(n) iterator.remove O(n)
__lb__lang-hs {- {- type ShowBox = forall b. (forall a. Show a => a -> b) -> b mkShowBox :: Show a => a -> ShowBox mkShowBox x = \k -> k x -- | This is the key function for using a -- a function @k@ that will be applied to the contents of the -- ShowBox. But you don -- ShowBox does. However, it -- implements @Show@, so you know that whatever type it picks, you -- can use the runShowBox :: forall b. (forall a. Show a => a -> b) -> ShowBox -> b -- Expanded type: -- -- runShowBox -- :: forall b. (forall a. Show a => a -> b) -- -> (forall b. (forall a. Show a => a -> b) -> b) -- -> b -- runShowBox k box = box k example :: [ShowBox] -- example :: [ShowBox] expands to this: -- -- example :: [forall b. (forall a. Show a => a -> b) -> b] -- -- Without the annotation the compiler infers the following, which -- breaks in the definition of -- -- example :: forall b. [(forall a. Show a => a -> b) -> b] -- example = [mkShowBox 5, mkShowBox "foo"] result :: [String] result = map (runShowBox show) example
__lb__lang-cs do r1 = randomPositionInList() r2 = randomPositionInList() swap elements at index r1 and index r2 for a certain number of times
__lb__lang-cs private static int YearDiff( DateTime date1, DateTime date2 ) { return YearDiff( date1, date2, DateTimeFormatInfo.CurrentInfo.Calendar ); } private static int YearDiff( DateTime date1, DateTime date2, Calendar calendar ) { if ( date1.Equals( date2 ) ) { return 0; } int year1 = calendar.GetYear( date1 ); int month1 = calendar.GetMonth( date1 ); int year2 = calendar.GetYear( date2 ); int month2 = calendar.GetMonth( date2 ); int compareDay = date2.Day; int compareDaysPerMonth = calendar.GetDaysInMonth( year1, month1 ); if ( compareDay > compareDaysPerMonth ) { compareDay = compareDaysPerMonth; } DateTime compareDate = new DateTime( year1, month2, compareDay, date2.Hour, date2.Minute, date2.Second, date2.Millisecond ); if ( date2 > date1 ) { if ( compareDate < date1 ) { compareDate = compareDate.AddYears( 1 ); } } else { if ( compareDate > date1 ) { compareDate = compareDate.AddYears( -1 ); } } return year2 - calendar.GetYear( compareDate ); }
__lb__lang-cs IComparer<Order> comparer = new MyOrderingClass(); orderList.Sort(comparer);
__lb__lang-java int responseCode = httpURLConnection.getResponseCode(); if (responseCode == HttpURLConnection.HTTP_OK) {
__lb__lang-hs factorial(0, 1). factorial(X, Y) :- X1 is X - 1, factorial(X1, Z), Y is Z * X.
__lb__lang-cs public static void Main(string[] args) { AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve); .
__lb__lang-java URLConnection connection = new URL(url).openConnection(); List<String> cookies = connection.getHeaderFields().get("Set-Cookie"); connection = new URL(url).openConnection(); for (String cookie : cookies) { connection.addRequestProperty("Cookie", cookie.split(";", 2)[0]); }
__lb__lang-golang func Filter(s []int, fn func(int) bool) []int { var p []int for _, v := range s { if fn(v) { p = append(p, v) } } return p }
__lb__lang-java java -version java version "1.8.0_31" Java(TM) SE Runtime Environment (build 1.8.0_31-b13)
__lb__lang-perl my %bad_param_lookup; @bad_param_lookup{ @bad_params } = ( 1 ) x @bad_params;
__lb__lang-php function get_youtube_thumb($link,$type){ $video_id = explode("?v=", $link); if (empty($video_id[1])){ $video_id = explode("/v/", $link); $video_id = explode("&", $video_id[1]); $video_id = $video_id[0]; } $thumb_link = ""; if($type == $thumb_link = }elseif($type == "id"){ $thumb_link = $video_id; } return $thumb_link;}
__lb__lang-php function generateRandomString($length = 10) { return substr(str_shuffle(str_repeat($x= } echo generateRandomString();
__lb__lang-golang package main import ( "bytes" "fmt" "net/http" "net/url" "strconv" ) func main() { apiUrl := "https: resource := "/user/" data := url.Values{} data.Set("name", "foo") data.Add("surname", "bar") u, _ := url.ParseRequestURI(apiUrl) u.Path = resource u.RawQuery = data.Encode() urlStr := fmt.Sprintf("%v", u) client := &http.Client{} r, _ := http.NewRequest("POST", urlStr, nil) r.Header.Add("Authorization", "auth_token=\"XXXXXXX\"") r.Header.Add("Content-Type", "application/x-www-form-urlencoded") r.Header.Add("Content-Length", strconv.Itoa(len(data.Encode()))) resp, _ := client.Do(r) fmt.Println(resp.Status) }
__lb__lang-sh ans= while true; do read -p "So is MikeQ the greatest or what (y/n/q) ?" -n1 ans case ${ans,,} in y|n|q) break;; *) echo "Answer y for yes / n for no or q for quit.";; esac done echo -e "\nAnswer = $ans" if [[ "${ans,,}" == "q" ]] ; then echo "OK Quitting, we will assume that he is" exit 0 fi if [[ "${ans,,}" == "y" ]] ; then echo "MikeQ is the greatest!!" else echo "No? MikeQ is not the greatest?" fi
__lb__lang-php $lastElement = count($array) > 0 ? array_values(array_slice($array, -1))[0] : null;
__lb__lang-golang var imgdata = []byte{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
__lb__lang-sh mapfile -s $((42-1)) -n $((666-42+1)) ary < file printf
__lb__lang-perl $ term-daemonize.sh pidfilefortesting 0.5 Checking pid in file pidfilefortesting. azzzcd I am 79281 and my child has exited; restart in 0.5s azzzcd I am 79281 and my child has exited; restart in 0.5s azzzcd I am 79281 and my child has exited; restart in 0.5s ^C $ term-daemonize.sh pidfilefortesting 0.5 azzzcd azzzcd azzzcd ^C
__lb__lang-java Random r = new java.util.Random (); String s = Long.toString (r.nextLong () & Long.MAX_VALUE, 36);
__lb__lang-cs public static string ByteArrayToString(byte[] ba) { return string.Concat( ba.SelectMany( b => new int[] { b >> 4, b & 0xF }).Select( b => (char)(55 + b + (((b-10)>>31)&-7))) ); }
__lb__lang-css .click { cursor: pointer; } .color:focus-within .change { color: red; } .color:focus-within p { outline: 0; }
__lb__lang-cs public void TransformPoint(ref double x, ref double y);
__lb__lang-java Future<?> f = new FutureTask<Object>(runnable, null)
__lb__lang-java public void printReflectionClassNames(){ StringBuffer buffer = new StringBuffer(); Class clazz= buffer.getClass(); System.out.println("Reflection on String Buffer Class"); System.out.println("Name: "+clazz.getName()); System.out.println("Simple Name: "+clazz.getSimpleName()); System.out.println("Canonical Name: "+clazz.getCanonicalName()); System.out.println("Type Name: "+clazz.getTypeName()); } outputs: Reflection on String Buffer Class Name: java.lang.StringBuffer Simple Name: StringBuffer Canonical Name: java.lang.StringBuffer Type Name: java.lang.StringBuffer
__lb__lang-css .centered { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); -webkit-transform: translate(-50%, -50%); -moz-transform: translate(-50%, -50%); -o-transform: translate(-50%, -50%); -ms-transform: translate(-50%, -50%); font-size: 20px; background-color: cyan; border: darkgreen 5px solid; padding: 5px; z-index: 100; } table { position: absolute; top: 0; left: 0; } td { position: relative; top: 0; left: 0; }
__lb__lang-cs public class LowercaseJsonSerializer { private static readonly JsonSerializerSettings Settings = new JsonSerializerSettings { ContractResolver = new LowercaseContractResolver() }; public static void Serialize(TextWriter file, object o) { JsonSerializer serializer = new JsonSerializer() { ContractResolver = new LowercaseContractResolver(), Formatting = Formatting.Indented, NullValueHandling = NullValueHandling.Ignore }; serializer.Converters.Add(new Newtonsoft.Json.Converters.StringEnumConverter()); serializer.Serialize(file, o); } public class LowercaseContractResolver : DefaultContractResolver { protected override string ResolvePropertyName(string propertyName) { return Char.ToLowerInvariant(propertyName[0]) + propertyName.Substring(1); } } }
__lb__lang-hs foldl (+) 0 [1, 2, 3, 4, 5, 6] = foldl (+) (0 + 1) [2, 3, 4, 5, 6] = foldl (+) ((0 + 1) + 2) [3, 4, 5, 6] = foldl (+) (((0 + 1) + 2) + 3) [4, 5, 6] = foldl (+) ((((0 + 1) + 2) + 3) + 4) [5, 6] = foldl (+) (((((0 + 1) + 2) + 3) + 4) + 5) [6] = foldl (+) ((((((0 + 1) + 2) + 3) + 4) + 5) + 6) [] = (((((0 + 1) + 2) + 3) + 4) + 5) + 6 = ((((1 + 2) + 3) + 4) + 5) + 6 = (((3 + 3) + 4) + 5) + 6 = ((6 + 4) + 5) + 6 = (10 + 5) + 6 = 15 + 6 = 21
__lb__lang-java package de.scrum_master.aspect; import de.scrum_master.app.ChuckNorrisException; public aspect ChuckNorrisAspect { before(ChuckNorrisException chuck) : handler(*) && args(chuck) { System.out.println("Somebody is trying to catch Chuck Norris - LOL!"); throw chuck; } }
__lb__lang-java public class Whatever<Thing>{ private class Holder<OtherThing>{ OtherThing thing; } public Holder<Thing>[] arrayOfHolders = new Holder<Thing>[10] }
__lb__lang-html <table> <tr> <td bgcolor="chucknorris" cellpadding="10" width="150" align="center">chucknorris</td> <td bgcolor="c00c00000000" cellpadding="10" width="150" align="center">c00c00000000</td> <td bgcolor="c00000" cellpadding="10" width="150" align="center">c00000</td> </tr> </table>
__lb__lang-php mixed json_decode ( string $json [, bool $assoc = FALSE ] )
__lb__lang-sh SOURCE="${BASH_SOURCE[0]}" while [ -h "$SOURCE" ]; do DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )" SOURCE="$(readlink "$SOURCE")" [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" done
__lb__lang-golang func Reverse(str string) string { if str != "" { return Reverse(str[1:]) + str[:1] } return "" }
__lb__lang-php PHPAPI char *php_raw_url_encode(char const *s, int len, int *new_length) { register int x, y; unsigned char *str; str = (unsigned char *) safe_emalloc(3, len, 1); for (x = 0, y = 0; len--; x++, y++) { str[y] = (unsigned char) s[x]; if ((str[y] < (str[y] < (str[y] > (str[y] > str[y++] = str[y++] = hexchars[(unsigned char) s[x] >> 4]; str[y] = hexchars[(unsigned char) s[x] & 15]; if (!isalnum(str[y]) && strchr("_-.~", str[y]) != NULL) { str[y++] = str[y++] = hexchars[os_toascii[(unsigned char) s[x]] >> 4]; str[y] = hexchars[os_toascii[(unsigned char) s[x]] & 15]; } } str[y] = if (new_length) { *new_length = y; } return ((char *) str); }
__lb__lang-java File f = new File(new URI("file: if(f.exists() && !f.isDirectory()) { }
__lb__lang-php $array = array_filter($array, function($i) use ($value){return $i != $value;});
__lb__lang-sh scriptname &>/dev/null scriptname >/dev/null 2>&1 scriptname >/dev/null 2>/dev/null
__lb__lang-java class Holder<T> { T v; T get() { return v; } void set(T n) { v=n; } } class A { public static void main(String[]args) { Holder<? extends Number> he = new Holder(); Holder<? super Number> hs = new Holder(); Integer i; Number n; Object o; i = hs.get(); n = hs.get(); o = hs.get(); hs.set(i); hs.set(n); hs.set(o); i = he.get(); n = he.get(); o = he.get(); he.set(i); he.set(n); he.set(o); } }
__lb__lang-golang func foo([]interface{}) { } func main() { var a []string = []string{"hello", "world"} foo(a) }
__lb__lang-cs BenchmarkDotNet=v0.10.5, OS=Windows 10.0.14393 Processor=Intel Core i5-2500K CPU 3.30GHz (Sandy Bridge), ProcessorCount=4 Frequency=3233539 Hz, Resolution=309.2587 ns, Timer=TSC [Host] : Clr 4.0.30319.42000, 64bit RyuJIT-v4.6.1637.0 Clr : Clr 4.0.30319.42000, 64bit RyuJIT-v4.6.1637.0 Core : .NET Core 4.6.25009.03, 64bit RyuJIT Method | Job | Runtime | Mean | Error | StdDev | Min | Max | Median | Rank | Gen 0 | Allocated | ---------------------- |----- |-------- |---------:|----------:|----------:|---------:|---------:|---------:|-----:|-------:|----------:| StringJoin | Clr | Clr | 28.24 us | 0.4381 us | 0.3659 us | 27.68 us | 29.10 us | 28.21 us | 8 | 4.9969 | 16.3 kB | SeparatorSubstitution | Clr | Clr | 17.90 us | 0.2900 us | 0.2712 us | 17.55 us | 18.37 us | 17.80 us | 6 | 4.9296 | 16.27 kB | SeparatorStepBack | Clr | Clr | 16.81 us | 0.1289 us | 0.1206 us | 16.64 us | 17.05 us | 16.81 us | 2 | 4.9459 | 16.27 kB | Enumerable | Clr | Clr | 17.27 us | 0.0736 us | 0.0615 us | 17.17 us | 17.36 us | 17.29 us | 4 | 4.9377 | 16.27 kB | StringJoin | Core | Core | 27.51 us | 0.5340 us | 0.4995 us | 26.80 us | 28.25 us | 27.51 us | 7 | 5.0296 | 16.26 kB | SeparatorSubstitution | Core | Core | 17.37 us | 0.1664 us | 0.1557 us | 17.15 us | 17.68 us | 17.39 us | 5 | 4.9622 | 16.22 kB | SeparatorStepBack | Core | Core | 15.65 us | 0.1545 us | 0.1290 us | 15.45 us | 15.82 us | 15.66 us | 1 | 4.9622 | 16.22 kB | Enumerable | Core | Core | 17.00 us | 0.0905 us | 0.0654 us | 16.93 us | 17.12 us | 16.98 us | 3 | 4.9622 | 16.22 kB |
__lb__lang-html <div class="wrapper"> <div style="background: <div class="second" style="background: </div>
__lb__lang-php class CustomSort{ public $field = public function cmp($a, $b) { /** * field for order is in a class variable $field * using getter function with naming convention getVariable() we set first letter to uppercase * we use variable variable names - $a->{ */ return strcmp($a->{ } public function sortObjectArrayByField($array, $field) { $this->field = $field; usort($array, array("Your\Namespace\CustomSort", "cmp"));; return $array; } }
__lb__lang-cs var result = from myRow in myDataTable.Rows.OfType<CustomSet.CustomTableRow>() where myRow.RowNo == 1 select myRow;
__lb__lang-golang Say hi --- FAIL: TestPrintSomethingAgain (0.00 seconds) foo_test.go:35: Say hi FAIL FAIL command-line-arguments 0.003s gom: exit status 1
__lb__lang-sh function realpath { local r=$1; local t=$(readlink $r) while [ $t ]; do r=$(cd $(dirname $r) && cd $(dirname $t) && pwd -P)/$(basename $t) t=$(readlink $r) done echo $r } SCRIPT_PARENT_DIR=$(dirname $(realpath "$0"))/..
__lb__lang-php function convert_array_to_object($array){ $obj= new stdClass(); foreach ($array as $k=> $v) { if (is_array($v)){ $v = convert_array_to_object($v); } $obj->{strtolower($k)} = $v; } return $obj; }
__lb__lang-java Map map = new HashMap(); Iterator entries = map.entrySet().iterator(); while (entries.hasNext()) { Map.Entry entry = (Map.Entry) entries.next(); Integer key = (Integer)entry.getKey(); Integer value = (Integer)entry.getValue(); System.out.println("Key = " + key + ", Value = " + value); }
__lb__lang-cs public static void CopyEntireDirectory(string path, string newPath) { Parallel.ForEach(Directory.GetFileSystemEntries(path, "*", SearchOption.AllDirectories) ,(fileName) => { string output = Regex.Replace(fileName, "^" + Regex.Escape(path), newPath); if (File.Exists(fileName)) { Directory.CreateDirectory(Path.GetDirectoryName(output)); File.Copy(fileName, output, true); } else Directory.CreateDirectory(output); }); }
__lb__lang-cpp template <typename T> struct Point { T x, y; }; Point p{1, 2};
__lb__lang-cpp namespace pretty { template< __VA_ARGS__ >\ struct defaulted< TYPE > {\ static decor< TYPE > decoration(){\ return { PREFIX, DELIM, POSTFIX };\ } }; } namespace pretty { template< __VA_ARGS__ >\ struct defaulted< TYPE, wchar_t, std::char_traits<wchar_t> > {\ static decor< TYPE, wchar_t, std::char_traits<wchar_t> > decoration(){\ return { PREFIX, DELIM, POSTFIX };\ } }; } namespace pretty { namespace detail { using std::begin; using std::end; template <int I> using _ol = std::integral_constant<int, I>*; template<class T> class is_range { template <class U, _ol<0> = nullptr> static std::false_type b(...); template <class U, _ol<1> = nullptr> static auto b(U &v) -> decltype(begin(v), std::true_type()); template <class U, _ol<0> = nullptr> static std::false_type e(...); template <class U, _ol<1> = nullptr> static auto e(U &v) -> decltype(end(v), std::true_type()); using b_return = decltype(b<T>(std::declval<T&>())); using e_return = decltype(e<T>(std::declval<T&>())); public: static const bool value = b_return::value && e_return::value; }; } template<class T, class CharT = char, class TraitT = std::char_traits<CharT>> struct decor { static const int xindex; std::basic_string<CharT, TraitT> prefix, delimiter, postfix; decor(std::basic_string<CharT, TraitT> const & pre = "", std::basic_string<CharT, TraitT> const & delim = "", std::basic_string<CharT, TraitT> const & post = "") : prefix(pre), delimiter(delim), postfix(post) {} }; template<class T, class charT, class traits> int const decor<T, charT, traits>::xindex = std::ios_base::xalloc(); namespace detail { template<class T, class CharT, class TraitT> void manage_decor(std::ios_base::event evt, std::ios_base &s, int const idx) { using deco_type = decor<T, CharT, TraitT>; if (evt == std::ios_base::erase_event) { void const * const p = s.pword(idx); if (p) { delete static_cast<deco_type const * const>(p); s.pword(idx) = nullptr; } } else if (evt == std::ios_base::copyfmt_event) { void const * const p = s.pword(idx); if (p) { auto np = new deco_type{ *static_cast<deco_type const * const>(p) }; s.pword(idx) = static_cast<void*>(np); } } } template<class T> struct clearer {}; template<class T, class CharT, class TraitT> std::basic_ostream<CharT, TraitT>& operator<< ( std::basic_ostream<CharT, TraitT> &s, clearer<T> const &) { using deco_type = decor<T, CharT, TraitT>; void const * const p = s.pword(deco_type::xindex); if (p) { delete static_cast<deco_type const *>(p); s.pword(deco_type::xindex) = nullptr; } return s; } template <class CharT> struct default_data { static const CharT * decor[3]; }; template <> const char * default_data<char>::decor[3] = { "", ", ", "" }; template <> const wchar_t * default_data<wchar_t>::decor[3] = { L"", L", ", L"" }; } template<class T> detail::clearer<T> clear() { return{}; } template<class T, class CharT, class TraitT> void clear(std::basic_ostream<CharT, TraitT> &s) { s << detail::clearer<T>{}; } template<class T, class CharT, class TraitT> std::basic_ostream<CharT, TraitT>& operator<<( std::basic_ostream<CharT, TraitT> &s, decor<T, CharT, TraitT> && h) { using deco_type = decor<T, CharT, TraitT>; void const * const p = s.pword(deco_type::xindex); if (p) delete static_cast<deco_type const *>(p); s.pword(deco_type::xindex) = static_cast<void *>(new deco_type{ std::move(h) }); if (s.iword(deco_type::xindex) == 0) { s.register_callback(detail::manage_decor<T, CharT, TraitT>, deco_type::xindex); s.iword(deco_type::xindex) = 1; } return s; } template<class T, class CharT = char, class TraitT = std::char_traits<CharT>> struct defaulted { static inline decor<T, CharT, TraitT> decoration() { return{ detail::default_data<CharT>::decor[0], detail::default_data<CharT>::decor[1], detail::default_data<CharT>::decor[2] }; } }; template<class T, class CharT = char, class TraitT = std::char_traits<CharT>> decor<T, CharT, TraitT> decoration( std::basic_string<CharT, TraitT> const & prefix, std::basic_string<CharT, TraitT> const & delimiter, std::basic_string<CharT, TraitT> const & postfix) { return{ prefix, delimiter, postfix }; } template<class T, class CharT = char, class TraitT = std::char_traits < CharT >> decor<T, CharT, TraitT> decoration( std::basic_string<CharT, TraitT> const & delimiter) { using str_type = std::basic_string<CharT, TraitT>; return{ defaulted<T, CharT, TraitT>::decoration().prefix, delimiter, defaulted<T, CharT, TraitT>::decoration().postfix }; } template<class T, class CharT = char, class TraitT = std::char_traits < CharT >> decor<T, CharT, TraitT> decoration(CharT const * const prefix, CharT const * const delimiter, CharT const * const postfix) { using str_type = std::basic_string<CharT, TraitT>; return{ str_type{ prefix }, str_type{ delimiter }, str_type{ postfix } }; } template<class T, class CharT = char, class TraitT = std::char_traits < CharT >> decor<T, CharT, TraitT> decoration(CharT const * const delimiter) { using str_type = std::basic_string<CharT, TraitT>; return{ defaulted<T, CharT, TraitT>::decoration().prefix, str_type{ delimiter }, defaulted<T, CharT, TraitT>::decoration().postfix }; } template<typename T, std::size_t N, std::size_t L> struct tuple { template<class CharT, class TraitT> static void print(std::basic_ostream<CharT, TraitT>& s, T const & value, std::basic_string<CharT, TraitT> const &delimiter) { s << std::get<N>(value) << delimiter; tuple<T, N + 1, L>::print(s, value, delimiter); } }; template<typename T, std::size_t N> struct tuple<T, N, N> { template<class CharT, class TraitT> static void print(std::basic_ostream<CharT, TraitT>& s, T const & value, std::basic_string<CharT, TraitT> const &) { s << std::get<N>(value); } }; } template<class CharT, class TraitT> std::basic_ostream<CharT, TraitT> & operator<< ( std::basic_ostream<CharT, TraitT> &s, std::tuple<> const & v) { using deco_type = pretty::decor<std::tuple<void*>, CharT, TraitT>; using defaulted_type = pretty::defaulted<std::tuple<void*>, CharT, TraitT>; void const * const p = s.pword(deco_type::xindex); auto const d = static_cast<deco_type const * const>(p); s << (d ? d->prefix : defaulted_type::decoration().prefix); s << (d ? d->postfix : defaulted_type::decoration().postfix); return s; } template<class CharT, class TraitT, class ... T> std::basic_ostream<CharT, TraitT> & operator<< ( std::basic_ostream<CharT, TraitT> &s, std::tuple<T...> const & v) { using deco_type = pretty::decor<std::tuple<void*>, CharT, TraitT>; using defaulted_type = pretty::defaulted<std::tuple<void*>, CharT, TraitT>; using pretty_tuple = pretty::tuple<std::tuple<T...>, 0U, sizeof...(T)-1U>; void const * const p = s.pword(deco_type::xindex); auto const d = static_cast<deco_type const * const>(p); s << (d ? d->prefix : defaulted_type::decoration().prefix); pretty_tuple::print(s, v, d ? d->delimiter : defaulted_type::decoration().delimiter); s << (d ? d->postfix : defaulted_type::decoration().postfix); return s; } template<class T, class U, class CharT, class TraitT> std::basic_ostream<CharT, TraitT> & operator<< ( std::basic_ostream<CharT, TraitT> &s, std::pair<T, U> const & v) { using deco_type = pretty::decor<std::pair<T, U>, CharT, TraitT>; using defaulted_type = pretty::defaulted<std::pair<T, U>, CharT, TraitT>; void const * const p = s.pword(deco_type::xindex); auto const d = static_cast<deco_type const * const>(p); s << (d ? d->prefix : defaulted_type::decoration().prefix); s << v.first; s << (d ? d->delimiter : defaulted_type::decoration().delimiter); s << v.second; s << (d ? d->postfix : defaulted_type::decoration().postfix); return s; } template<class T, class CharT = char, class TraitT = std::char_traits < CharT >> typename std::enable_if < pretty::detail::is_range<T>::value, std::basic_ostream < CharT, TraitT >> ::type & operator<< ( std::basic_ostream<CharT, TraitT> &s, T const & v) { bool first(true); using deco_type = pretty::decor<T, CharT, TraitT>; using default_type = pretty::defaulted<T, CharT, TraitT>; void const * const p = s.pword(deco_type::xindex); auto d = static_cast<pretty::decor<T, CharT, TraitT> const * const>(p); s << (d ? d->prefix : default_type::decoration().prefix); for (auto const & e : v) { if (!first) s << (d ? d->delimiter : default_type::decoration().delimiter); s << e; first = false; } s << (d ? d->postfix : default_type::decoration().postfix); return s; }
__lb__lang-golang func FilePathWalkDir(root string) ([]string, error) { var files []string err := filepath.Walk(root, func(path string, info os.FileInfo, err error) error { if !info.IsDir() { files = append(files, path) } return nil }) return files, err }
__lb__lang-java Iterable<String> strings = new ArrayList<>(); Collection<String> strings = new ArrayList<>(); List<String> strings = new ArrayList<>(); ArrayList<String> strings = new ArrayList<>(); var strings = new ArrayList<String>();
__lb__lang-css input[type="checkbox"]:not(:disabled) + span:hover:before { text-shadow: 0 1px 2px }
__lb__lang-php <form id="pagePhpVars" method="post"> <input type="hidden" name="phpString1" id="phpString1" value=" </form>
__lb__lang-java drawAll(circleList); public void drawAll(List<Shape> shapes) { shapes.add(new Rectangle()); }
__lb__lang-java public class DebuggableThread extends Thread { private static String getStackTrace(String name) { Throwable t= new Throwable("DebuggableThread-"+name); ByteArrayOutputStream os = new ByteArrayOutputStream(); PrintStream ps = new PrintStream(os); t.printStackTrace(ps); return os.toString(); } public DebuggableThread(String name) { super(getStackTrace(name)); } public static void main(String[] args) throws Exception { System.out.println(new Thread()); System.out.println(new DebuggableThread("MainTest")); } }
__lb__lang-cs for (int i = 0; i < itemsToBeLast.Count; i++) { var matchingItem = itemsToBeLast.FirstOrDefault(item => item.Detach); if (matchingItem != null) { itemsToBeLast.Remove(matchingItem); continue; } allItems.Add(itemsToBeLast[i]); }
__lb__lang-cs Dictionary<int, string> dict = new Dictionary<int, string>(); foreach (var (key, value) in dict) { Console.WriteLine($"{key} : {value}"); }
__lb__lang-css div { width: 250px; min-height: 50px; line-height: 50px; text-align: center; border: 1px solid margin-bottom:5px; } span { display: inline-block; vertical-align: middle; line-height: normal; }
__lb__lang-java public static byte[] readFileToByteArray(File file) throws IOException
__lb__lang-cs var fruits = new Dictionary<string, int>(); ... foreach (var (fruit, number) in fruits) { Console.WriteLine(fruit + ": " + number); }
__lb__lang-java DecimalFormat df = new DecimalFormat(" df.format(0.912385);
__lb__lang-hs Prelude> :{ Prelude| let addTwo :: Int -> Int -> Int Prelude| addTwo x y = x + y Prelude| :} Prelude> addTwo 4 7 11
__lb__lang-java int s = type.size(); for (int i = 0; i < s; i++) { for (int j = 0; j < t.size(); j++) { if (condition) { s = 0; break; } } }
__lb__lang-php <?php function shutdown() { if (($error = error_get_last())) { ob_clean(); header("Location: http: } } register_shutdown_function( $x = null; $x->method() ?>
__lb__lang-java valueComparator = Ordering.natural().onResultOf(Functions.forMap(map))
__lb__lang-java public useEnums(SomeEnum a) { if(a.equals(SomeEnum.SOME_ENUM_VALUE)) { ... } ... }
__lb__lang-java public interface Action { void doSomething(); } public interface Parser { Action findAction(String userInput); }
__lb__lang-java path = "C:\\Users\\Paulo Brito\\Desktop\\" + name + ".txt"; File file1 = new File(path); try { if (!file1.exists()) { file1.createNewFile(); } File[] files = file1.listFiles(); FileWriter fw = new FileWriter(file1, true); BufferedWriter bw = new BufferedWriter(fw); for (int i = 0; i < message.size(); i++) { bw.write(message.get(i)); bw.newLine(); } bw.close(); fw.close(); FileReader fr = new FileReader(file1); BufferedReader br = new BufferedReader(fr); fw = new FileWriter(file1, true); bw = new BufferedWriter(fw); while (br.ready()) { String line = br.readLine(); System.out.println(line); bw.write(line); bw.newLine(); } br.close(); fr.close(); } catch (IOException ex) { ex.printStackTrace(); JOptionPane.showMessageDialog(null, "Error in" + ex);
__lb__lang-c char *strdup (const char *s) { char *d = malloc (strlen (s) + 1); if (d == NULL) return NULL; strcpy (d,s); return d; }
__lb__lang-cs private void button1_Click(object sender, EventArgs e) { try { MailMessage mail = new MailMessage(); SmtpClient SmtpServer = new SmtpClient("smtp.gmail.com"); mail.From = new MailAddress("your_email_address@gmail.com"); mail.To.Add("to_address"); mail.Subject = "Test Mail"; mail.Body = "This is for testing SMTP mail from GMAIL"; SmtpServer.Port = 587; SmtpServer.Credentials = new System.Net.NetworkCredential("username", "password"); SmtpServer.EnableSsl = true; SmtpServer.Send(mail); MessageBox.Show("mail Send"); } catch (Exception ex) { MessageBox.Show(ex.ToString()); } }
__lb__lang-cpp friend ostream& operator<<(ostream& output, const Point& p);
__lb__lang-perl sudo mkservice -d /var/lib/svscan/some-service-name -l -u user -L loguser "command line here"
__lb__lang-java import java.io.BufferedReader; import java.io.InputStreamReader; import java.io.IOException; public class InputReader{ public static void main(String[] args)throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String s=""; while((s=br.readLine())!=null){ System.out.println(s); } } }
__lb__lang-cs internal static Type GetElementType(this Type type) { if (type.GenericTypeArguments.Any()) return type.GenericTypeArguments.First(); return type.GetRuntimeProperty("Item").PropertyType); }
__lb__lang-hs -- file: ch14/State.hs newtype State s a = State runState :: s -> (a, s) }
__lb__lang-php $i = 0; $len = count($array); foreach ($array as $item) { if ($i == 0) { } else if ($i == $len - 1) { } $i++; }
__lb__lang-sh . shell_connector.sh tty /dev/pts/20 ps --tty pts/20 fw PID TTY STAT TIME COMMAND 29019 pts/20 Ss 0:00 bash 30745 pts/20 R+ 0:00 \_ ps --tty pts/20 fw newConnector /usr/bin/bc "-l" ps --tty pts/20 fw PID TTY STAT TIME COMMAND 29019 pts/20 Ss 0:00 bash 30944 pts/20 S 0:00 \_ /usr/bin/bc -l 30952 pts/20 R+ 0:00 \_ ps --tty pts/20 fw declare -p PI bash: declare: PI: not found myBc declare -p PI declare -- PI="3.14159265358979323844"
__lb__lang-cs BinaryFormatter bf = new BinaryFormatter(); byte[] bytes; MemoryStream ms = new MemoryStream(); string orig = "喂 Hello 谢谢 Thank You"; bf.Serialize(ms, orig); ms.Seek(0, 0); bytes = ms.ToArray(); MessageBox.Show("Original bytes Length: " + bytes.Length.ToString()); MessageBox.Show("Original string Length: " + orig.Length.ToString()); for (int i = 0; i < bytes.Length; ++i) bytes[i] ^= 168; for (int i = 0; i < bytes.Length; ++i) bytes[i] ^= 168; BinaryFormatter bfx = new BinaryFormatter(); MemoryStream msx = new MemoryStream(); msx.Write(bytes, 0, bytes.Length); msx.Seek(0, 0); string sx = (string)bfx.Deserialize(msx); MessageBox.Show("Still intact :" + sx); MessageBox.Show("Deserialize string Length(still intact): " + sx.Length.ToString()); BinaryFormatter bfy = new BinaryFormatter(); MemoryStream msy = new MemoryStream(); bfy.Serialize(msy, sx); msy.Seek(0, 0); byte[] bytesy = msy.ToArray(); MessageBox.Show("Deserialize bytes Length(still intact): " + bytesy.Length.ToString());
__lb__lang-css [tooltip]:before { position : absolute; content : attr(tooltip); opacity : 0; }
__lb__lang-cpp template<typename T> T& deref(T* p) { if (p == NULL) throw std::invalid_argument(std::string("NULL reference")); return *p; } MyClass * p = GetInstance(); Foo(deref(p));
__lb__lang-golang const myString = "hello" const pi = 3.14 const life int = 42
__lb__lang-php $string = $find = $replace = $result = preg_replace("/$find/",$replace,$string,1); echo $result;
__lb__lang-php function type($mixed, $parseNumeric = false) { if ($parseNumeric && is_numeric($mixed)) { $mixed += 0; } $t = gettype($mixed); switch($t) { case case case default: return $t; } }
__lb__lang-cs string example = "asdf1234!@ string alphanumeric = example.ToAlphaNumericOnly(); string alpha = example.ToAlphaOnly(); string numeric = example.ToNumericOnly();
__lb__lang-cs Excel.Application app = new Excel.ApplicationClass(); Job job = new Job(); uint pid = 0; Win32.GetWindowThreadProcessId(new IntPtr(app.Hwnd), out pid); job.AddProcess(Process.GetProcessById((int)pid).Handle);
__lb__lang-php /** * Last date of a month of a year * * @param[in] $date - Integer. Default = Current Month * * @return Last date of the month and year in yyyy-mm-dd format */ function last_day_of_the_month($date = { $month = date( $year = date( $result = strtotime("{$year}-{$month}-01"); $result = strtotime( return date( } $a_date = "2009-11-23"; echo last_day_of_the_month($a_date);
__lb__lang-c int main() { int array[10],i; for (i = 0; i <=10 ; i++) { array[i]=0; printf("test \n"); } printf("%d \n", sizeof(array)/sizeof(int)); return 0; }
__lb__lang-cs string[] lines = theText.Split( new[] { "\r\n", "\r", "\n" }, StringSplitOptions.None );
__lb__lang-cpp +---+---+---+---+---+---+---+---+ x: | | | | | | | | | int[8] +---+---+---+---+---+---+---+---+ ^ ^ ^ | | | | | | | | | x+0 | x+3 | x+7 | int*
__lb__lang-hs Prelude> import Data.List Prelude Data.List> intercalate " " ["is","there","such","a","function","?"] "is there such a function ?"
__lb__lang-cs var result = AsyncContext.RunTask(MyAsyncMethod).Result;
__lb__lang-java List<A> elements = new ArrayList<A>(); elements.add(new B()); elements.add(new B());
__lb__lang-golang package main import ( "fmt" "log" "os/exec" ) func main() { out, err := exec.Command("uuidgen").Output() if err != nil { log.Fatal(err) } fmt.Printf("%s", out) }
__lb__lang-cs var dt = DateTime.Now; var unixTime = ((DateTimeOffset)dt).ToUnixTimeSeconds();
__lb__lang-java import java.lang.reflect.Array; public class GenSet<E> { private E[] a; public GenSet(Class<E[]> clazz, int length) { a = clazz.cast(Array.newInstance(clazz.getComponentType(), length)); } public static void main(String[] args) { GenSet<String> foo = new GenSet<String>(String[].class, 1); String[] bar = foo.a; foo.a[0] = "xyzzy"; String baz = foo.a[0]; } }
__lb__lang-cs for(i = 0; i < 10; i++) { if(i == 2) goto CONTINUE; printf("%d", i); CONTINUE:; }
__lb__lang-perl " to use CTRL+N with modules for autocomplete " set iskeyword+=: set complete+=k~/.vim_extras/installed_modules.dat
__lb__lang-cpp int main() { char filename[] = "coordinates.txt"; std::vector<CoordinatePair> v; std::ifstream ifs(filename); if (ifs) { std::copy(std::istream_iterator<CoordinatePair>(ifs), std::istream_iterator<CoordinatePair>(), std::back_inserter(v)); } else { std::cerr << "Couldn } }
__lb__lang-html <div class="Contact"> <section class="left"> <div class=""> <h1>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</h1> </div> </section> <section class="right"> <img /> </section> </div>
__lb__lang-cpp static Mystruct m; for(...) { new (&m) Mystruct(); }
__lb__lang-css display: table; } display: table-cell; vertical-align: middle; float: none; } body { padding: 20px; } a { height: 40px; border: 1px solid } a > div { width: 100%; text-align: center; }
__lb__lang-java Method method = targetClass.getDeclaredMethod(methodName, argClasses); method.setAccessible(true); return method.invoke(targetObject, argObjects);
__lb__lang-cs char[] arr = str.Where(c => !char.IsControl(c)).ToArray(); str = new string(arr);
__lb__lang-golang func (r *record) String() string { s := "(\"" + r.name + "\" [" for i := 0; i < len(r.subs); i++ { s += r.subs[i].String() } s += "] " + strconv.FormatInt(r.size,10) + ")\n" return s }
__lb__lang-golang mux.Handle("/watcher/{action}/{device}",Adapt(api.SerialHandler(mux), api.EnableCORS(), api.ExpectGET(), ))
__lb__lang-sh workhard & [1] 27408 workharder & [2] 27409 wait %1 %2
__lb__lang-perl " Create a command :Tidy to invoke perltidy. " By default it operates on the whole file, but you can give it a " range or visual range as well if you know what you command -range=% -nargs=* Tidy <line1>,<line2>! \perltidy -your -preferred -default -options <args>
__lb__lang-java long i = 0; for (Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator(); entries.hasNext(); ) { Map.Entry<Integer, Integer> entry = entries.next(); i += entry.getKey() + entry.getValue(); }
__lb__lang-java import java.io.StringWriter; import java.io.PrintWriter; StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); e.printStackTrace(pw); String sStackTrace = sw.toString(); System.out.println(sStackTrace);
__lb__lang-golang t := template.Must(template.New("email").Parse(emailTmpl)) buf := &bytes.Buffer{} if err := t.Execute(buf, data); err != nil { panic(err) } s := buf.String()
__lb__lang-perl our %bad_params = map { $_ => 1 } qw(badparam1 badparam2 badparam3) if ($bad_params{$new_param}) { print "That is a bad parameter\n"; }
__lb__lang-cs Uri result = null; if (Uri.TryCreate(new Uri("http: { Console.WriteLine(result); }
__lb__lang-cpp for(unsigned int x=0; x<width; ++x) { for(unsigned int y=0; y<height; ++y) { ... image[y][x] ... } }
__lb__lang-html <div class="container"> <div class="clearfix"></div> <div class="sidebar">width: 200px</div> <div class="content"> <div class="item">25%</div> <div class="item">25%</div> <div class="item">25%</div> <div class="item">25%</div> </div> </div>
__lb__lang-java ArrayList<Element> list = (ArrayList<Element>)Arrays.stream(array).collect(Collectors.toList());
__lb__lang-cpp class Logical { mutable int var; public: Logical(): var(0) {} void set(int x) const { var = x; } }; class Bitwise { int var; public: Bitwise(): var(0) {} void set(int x) const { const_cast<Bitwise*>(this)->var = x; } }; const Logical logical; const Bitwise bitwise; int main(void) { logical.set(5); bitwise.set(5); }
__lb__lang-cs public static class TaskHelper { public static void RunTaskSynchronously(this Task t) { var task = Task.Run(async () => await t); task.Wait(); } public static T RunTaskSynchronously<T>(this Task<T> t) { T res = default(T); var task = Task.Run(async () => res = await t); task.Wait(); return res; } }
__lb__lang-c int main(){if(x<2){x=3;}} float test() { if(x<2) x=3; }
__lb__lang-css body { background-image: url(bg.jpg); background-size: cover; }
__lb__lang-css body { background-color: black; } .textToHalfStyle { display: block; margin: 200px 0 0 0; text-align: center; } .halfStyle { font-family: position: relative; display: inline-block; width: 1; font-size: 70px; color: black; overflow: hidden; white-space: pre; text-shadow: 1px 2px 0 white; } .halfStyle:before { display: block; z-index: 1; position: absolute; top: 0; width: 50%; content: attr(data-content); overflow: hidden; color: white; }
__lb__lang-php <form action="example.php" method="post"> <select name="choice"> <option value="choice1">choice 1</option> <option value="choice2">choice 2</option> <option value="choice3">choice 3</option> <option value="choice4">choice 4</option> </select> <p> <input type="text" name="name" /> <input type="submit" value="Submit" /> </p> </form>
__lb__lang-java public class Cons { public Cons() { this(madeUpArg1Value,madeUpArg2Value,madeUpArg3Value); } public Cons(int arg1, int arg2) { this(arg1,arg2, madeUpArg3Value); } public Cons(int arg1, int arg2, int arg3) { this.arg1 = arg1; this.arg2 = arg2; this.arg3 = arg3; } }
__lb__lang-java public String[] concatString(String[] a, String[] b){ Stream<String> streamA = Arrays.stream(a); Stream<String> streamB = Arrays.stream(b); return Stream.concat(streamA, streamB).toArray(String[]::new); }
__lb__lang-cs public static void Throws<T>(Action task, string expectedMessage, ExceptionMessageCompareOptions options) where T : Exception { try { task(); } catch (Exception ex) { AssertExceptionType<T>(ex); AssertExceptionMessage(ex, expectedMessage, options); return; } if (typeof(T).Equals(new Exception().GetType())) { Assert.Fail("Expected exception but no exception was thrown."); } else { Assert.Fail(string.Format("Expected exception of type {0} but no exception was thrown.", typeof(T))); } }
__lb__lang-cs public class MyException : Exception { public MyException() { } public MyException(string msg) : base(msg) { } public MyException(string msg, Exception inner) : base(msg, inner) { } }
__lb__lang-sh vari equals.............................: AB Up to 10 positions I must fill with.....: 8 equal signs AB========
__lb__lang-php function checkAssoc($array){ return ctype_digit( implode( }
__lb__lang-hs ?- length(Xs,3), Xs = [X|Ys], maplist(dif(X), Ys), maplist(=(_),Xs). false.
__lb__lang-golang func main() { numChans := 2 var chans = []chan string{} for i := 0; i < numChans; i++ { tmp := make(chan string) chans = append(chans, tmp) } for true { for i, c := range chans { select { case x = <-c: fmt.Printf("received %d \n", i) go DoShit(x, i) default: continue } } } }
__lb__lang-sh host:/tmp$ asd=someletters_12345_moreleters.ext host:/tmp$ echo `expr $asd : 12345 host:/tmp$
__lb__lang-cpp c:\dev>clang++ helloworld.png helloworld.png: file not recognized: File format not recognized collect2: ld returned 1 exit status clang++: error: linker (via gcc) command failed with exit code 1 (use -v to see invocation)
__lb__lang-cpp std::string function(const std::string& aString){ auto vString(aString); vString.clear(); return vString; }
__lb__lang-php class ParentClass { function test() { self::which(); $this->which(); } function which() { echo } } class ChildClass extends ParentClass { function which() { echo } } $obj = new ChildClass(); $obj->test();
__lb__lang-java List<Integer> list = new ArrayList<>(Arrays.asList(3, 4));
__lb__lang-c using namespace std; __attribute__ ((aligned(32))) static unsigned char k1[32*3]={ 0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f, 0x00,0x08,0x04,0x0c,0x02,0x0a,0x06,0x0e,0x01,0x09,0x05,0x0d,0x03,0x0b,0x07,0x0f,0x00,0x08,0x04,0x0c,0x02,0x0a,0x06,0x0e,0x01,0x09,0x05,0x0d,0x03,0x0b,0x07,0x0f, 0x00,0x80,0x40,0xc0,0x20,0xa0,0x60,0xe0,0x10,0x90,0x50,0xd0,0x30,0xb0,0x70,0xf0,0x00,0x80,0x40,0xc0,0x20,0xa0,0x60,0xe0,0x10,0x90,0x50,0xd0,0x30,0xb0,0x70,0xf0 }; __attribute__ ((aligned(32))) static unsigned char data[NUM_DATA_BYTES+32]={}; extern "C" { void bitflipbyte(unsigned char[],unsigned int,unsigned char[]); } int main() { for(unsigned int i = 0; i < NUM_DATA_BYTES; i++) { data[i] = rand(); } printf ("\r\nData in(start):\r\n"); for (unsigned int j = 0; j < 4; j++) { for (unsigned int i = 0; i < DISPLAY_WIDTH; i++) { printf ("0x%02x,",data[i+(j*DISPLAY_WIDTH)]); } printf ("\r\n"); } printf ("\r\nNumber of 32-byte chunks to convert: %d\r\n",(unsigned int)ceil(NUM_DATA_BYTES/32.0)); double start_time = omp_get_wtime(); bitflipbyte(data,(unsigned int)ceil(NUM_DATA_BYTES/32.0),k1); double end_time = omp_get_wtime(); printf ("\r\nData out:\r\n"); for (unsigned int j = 0; j < 4; j++) { for (unsigned int i = 0; i < DISPLAY_WIDTH; i++) { printf ("0x%02x,",data[i+(j*DISPLAY_WIDTH)]); } printf ("\r\n"); } printf("\r\n\r\nTime to bitflip %d bytes: %f seconds\r\n\r\n",NUM_DATA_BYTES, end_time-start_time); return 0; }
__lb__lang-php $arr = array(); if(!empty($arr)){ echo "not empty"; } else { echo "empty"; }
__lb__lang-perl foreach my $file (<$ARGV[0]/*.xml>){ my $fh; open($fh, "< $file"); my $contents = do { local $/; <$fh> }; close($fh); }
__lb__lang-c int a = 1; short j; float f = 1.f; printf("%i\n", j = *(reinterpret_cast<short*>(&a))); printf("%i\n", j = *(reinterpret_cast<int*>(&f)));
__lb__lang-java ... this.muchSmallerString = veryLongString.substring(0, 1).intern(); ...
__lb__lang-sh ls -1d */ | rev | cut -c2- | rev | xargs ls -ld --color=always
__lb__lang-php $array1 = [ foreach ($array1 as $v) { if( strpos($v, $array2[] = $v; } } print_r($array2);
__lb__lang-cpp struct A { A(int) { } A(int, int) { } operator bool() const { return true; } }; struct B { explicit B(int) { } explicit B(int, int) { } explicit operator bool() const { return true; } }; int main() { A a1 = 1; A a2(2); A a3 {4, 5}; A a4 = {4, 5}; A a5 = (A)1; if (a1) cout << "true" << endl; bool na1 = a1; bool na2 = static_cast<bool>(a1); B b2(2); B b3 {4, 5}; B b5 = (B)1; if (b5) cout << "true" << endl; bool nb2 = static_cast<bool>(b2); }
__lb__lang-cpp int test(); int main() { try { return test(); } catch (std::future_error const & e) { std::cout << "Future error: " << e.what() << " / " << e.code() << std::endl; } catch (std::exception const & e) { std::cout << "Standard exception: " << e.what() << std::endl; } catch (...) { std::cout << "Unknown exception." << std::endl; } }
__lb__lang-perl sub use_any_dir_handle { my( $dh ) = @_; rewinddir $dh; ...do some filtering... return \@files; }
__lb__lang-php function is_assoc($array){ $keys = array_keys($array); return $keys !== array_keys($keys); }
__lb__lang-php chown wp-user:wp-user -R * chown www-data:www-data -R wp-content/uploads/ find . -type d -exec chmod 755 {} \; find . -type f -exec chmod 644 {} \;
__lb__lang-cs private static bool Handle(Exception e) { Console.WriteLine("Handle the exception here :-)"); return true; } public static void Main() { try { throw new OutOfMemoryException(); } catch (ArgumentException e) { if (!Handle(e)) { throw; } } catch (IndexOutOfRangeException e) { if (!Handle(e)) { throw; } } Console.WriteLine("We
__lb__lang-java Map<String,Integer> tempMap=new HashMap<String,Integer>(inputUnsortedMap); LinkedHashMap<String,Integer> sortedOutputMap=new LinkedHashMap<String,Integer>(); for(int i=0;i<inputUnsortedMap.size();i++){ Map.Entry<String,Integer> maxEntry=null; Integer maxValue=-1; for(Map.Entry<String,Integer> entry:tempMap.entrySet()){ if(entry.getValue()>maxValue){ maxValue=entry.getValue(); maxEntry=entry; } } tempMap.remove(maxEntry.getKey()); sortedOutputMap.put(maxEntry.getKey(),maxEntry.getValue()); }
__lb__lang-java <plugin> <artifactId>maven-compiler-plugin</artifactId> <version>2.3.2</version> <configuration> <source>1.8</source> <target>1.8</target> <encoding>UTF-8</encoding> </configuration> </plugin>
__lb__lang-sh untar_progress () { TARBALL=$1 BLOCKING_FACTOR=$(gzip --list ${TARBALL} | perl -MPOSIX -ane tar --blocking-factor=${BLOCKING_FACTOR} --checkpoint=1 \ --checkpoint-action= }
__lb__lang-cs class Program { static void Main() { var applicationId = new Guid("b54f7b0d-87f9-4df9-9686-4d8fd76066dc"); if (SingleInstanceManager.VerifySingleInstance(applicationId)) { SingleInstanceManager.OtherInstanceStarted += OnOtherInstanceStarted; } } static void OnOtherInstanceStarted(object sender, StartupEventArgs e) { } }
__lb__lang-hs {- import qualified Data.Text as T main = print $ T.splitOn " " "this is a test"
__lb__lang-java public static void appendToFile(String targetFile, String s) throws IOException { appendToFile(new File(targetFile), s); } public static void appendToFile(File targetFile, String s) throws IOException { PrintWriter out = null; try { out = new PrintWriter(new BufferedWriter(new FileWriter(targetFile, true))); out.println(s); } finally { if (out != null) { out.close(); } } }
__lb__lang-php String myText = (string)myVar; $myText = (string) $myVar;
__lb__lang-golang func min(a, b int) int { if a <= b { return a } return b } ... value := min(a, b)
__lb__lang-cpp using namespace std; class Rectangle { int width, height; public: Rectangle() {} Rectangle (int x, int y) : width(x), height(y) {} int area() {return width * height;} friend Rectangle duplicate (const Rectangle&); }; Rectangle duplicate (const Rectangle& param) { Rectangle res; res.width = param.width*2; res.height = param.height*2; return res; } int main () { Rectangle foo; Rectangle bar (2,3); foo = duplicate (bar); cout << foo.area() << return 0; }
__lb__lang-java InputStream stream = new ByteArrayInputStream(exampleString.getBytes(StandardCharsets.UTF_8));
__lb__lang-php set_error_handler("warning_handler", E_WARNING); dns_get_record(...) restore_error_handler(); function warning_handler($errno, $errstr) { }
__lb__lang-php $set = array("apple", "banana", "coconut"); foreach ( $set AS &$item ) { $item = strrev($item); } print_r($set);
__lb__lang-php array ( 0 => 1 => 2 => 3 => 4 => 5 => 6 => 7 => 8 => 9 => 10 => 11 => 12 => ) <html> <head> <title>Example Domain</title>...
__lb__lang-java Math.rint(3.0); Math.rint(3.1); Math.rint(3.5); Math.rint(3.9); Math.rint(4.5); Math.rint(5.5); Math.rint(-3.0); Math.rint(-3.1); Math.rint(-3.5); Math.rint(-3.9); Math.rint(-4.5); Math.rint(-5.5);
__lb__lang-php class Bcrypt{ private $rounds; public function __construct($rounds = 12) { if (CRYPT_BLOWFISH != 1) { throw new Exception("bcrypt not supported in this installation. See http: } $this->rounds = $rounds; } public function hash($input){ $hash = crypt($input, $this->getSalt()); if (strlen($hash) > 13) return $hash; return false; } public function verify($input, $existingHash){ $hash = crypt($input, $existingHash); return $hash === $existingHash; } private function getSalt(){ $salt = sprintf( $bytes = $this->getRandomBytes(16); $salt .= $this->encodeBytes($bytes); return $salt; } private $randomState; private function getRandomBytes($count){ $bytes = if (function_exists( (strtoupper(substr(PHP_OS, 0, 3)) !== $bytes = openssl_random_pseudo_bytes($count); } if ($bytes === ($hRand = @fopen( $bytes = fread($hRand, $count); fclose($hRand); } if (strlen($bytes) < $count) { $bytes = if ($this->randomState === null) { $this->randomState = microtime(); if (function_exists( $this->randomState .= getmypid(); } } for ($i = 0; $i < $count; $i += 16) { $this->randomState = md5(microtime() . $this->randomState); if (PHP_VERSION >= $bytes .= md5($this->randomState, true); } else { $bytes .= pack( } } $bytes = substr($bytes, 0, $count); } return $bytes; } private function encodeBytes($input){ $itoa64 = $output = $i = 0; do { $c1 = ord($input[$i++]); $output .= $itoa64[$c1 >> 2]; $c1 = ($c1 & 0x03) << 4; if ($i >= 16) { $output .= $itoa64[$c1]; break; } $c2 = ord($input[$i++]); $c1 |= $c2 >> 4; $output .= $itoa64[$c1]; $c1 = ($c2 & 0x0f) << 2; $c2 = ord($input[$i++]); $c1 |= $c2 >> 6; $output .= $itoa64[$c1]; $output .= $itoa64[$c2 & 0x3f]; } while (true); return $output; } }
__lb__lang-cs String.Format( "{0: String.Format( "{0: String.Format( "{0: String.Format( "{0: String.Format( "{0: String.Format( "{0:
__lb__lang-cs double nbr = 6; double dd = doit.square(ref nbr); double Half_nbr ; doit.math_routines(nbr, out Half_nbr);
__lb__lang-cs DbCommand command = connection.CreateCommand("SELECT {0}", "Hello World");
__lb__lang-java public void dragFinished(StructuredViewer structuredViewer, Class<T> inputElementClazz) { IStructuredSelection selection = (IStructuredSelection) structuredViewer.getSelection(); T firstElement = inputElementClazz.cast(selection.getFirstElement()); Collection<?> unknownTypeCollection = (Collection<?>) structuredViewer.getInput(); unknownTypeCollection.remove(firstElement); Collection<T> knownTypeCollection = new ArrayList<T>(); for (Object object : unknownTypeCollection) { T aT = inputElementClazz.cast(object); knownTypeCollection.add(aT); System.out.println(aT.getClass()); } structuredViewer.refresh(); }
__lb__lang-sh is_empty() { local var_name="$1" local var_value="${!var_name}" if [[ -v "$var_name" ]]; then if [[ -n "$var_value" ]]; then echo "set and non-empty" else echo "set and empty" fi else echo "unset" fi } str="foo" empty="" is_empty str is_empty empty is_empty none
__lb__lang-java ... byte[] bytes = new byte[(int) file.length()]; DataInputStream dis = new DataInputStream(new FileInputStream(file)); dis.readFully(bytes); ...
__lb__lang-html <script src="https: <div id="clone_wrapper"> <div> Div </div> </div> <button id="clone_button">Clone me!</button>
__lb__lang-hs {- class Foo a where whichOne :: a -> String instance Foo (f Int) where -- this is the line which changed whichOne _ = "f Int" instance Foo [a] where whichOne _ = "[a]" -- | -- >>> main -- Error: Overlapping instances for Foo [Int] main :: IO () main = putStrLn $ whichOne (undefined :: [Int])
__lb__lang-c let imageObject: UIImage = (UIImage(named: "ImageName")) ?? (initialOfUsername.capitalizedString).imageFromString
__lb__lang-php function is_json($input) { $input = trim($input); if (substr($input,0,1)!= return false; return is_array(@json_decode($input, true)); }
__lb__lang-css .tri-1,.tri-2 { display:inline-block; width:100px; height:100px; background:linear-gradient(to bottom left, transparent 49.8%,red 50%); border:1px solid; animation:change 2s linear infinite alternate; } .tri-2 { background:linear-gradient(to top right, transparent 49.8%,red 50%); border:none; } @keyframes change { from { width:100px; height:100px; } to { height:50px; width:180px; } }
__lb__lang-java /** * Used to determine whether the user making this call is subject to * teleportations. * @return whether the user making this call is a goat */ public boolean isUserAGoat() { return false; }
__lb__lang-php class Foo { public function bar() { return Foo::baz(); } public function baz() { return isset($this); } }
__lb__lang-sh unset DEP_ROOT REL_DIR DEP_ROOT= datestamp=$(date +%Y%m%d%H%M%S) REL_DIR="${DEP_ROOT}/${datestamp}" ssh localhost /bin/bash <<EOF if [ ! -d "$DEP_ROOT" ] && [ ! -e "$DEP_ROOT" ]; then echo "creating the root directory" 1>&2 mkdir "$DEP_ROOT" fi mkdir "$REL_DIR" exit EOF scp -r ./dir1 user@server:"$REL_DIR" scp -r ./dir2 user@server:"$REL_DIR" REL_DIR="$( ssh localhost /bin/bash <<\EOF DEP_ROOT= datestamp=$(date +%Y%m%d%H%M%S) REL_DIR="${DEP_ROOT}/${datestamp}" if [ ! -d "$DEP_ROOT" ] && [ ! -e "$DEP_ROOT" ]; then echo "creating the root directory" 1>&2 mkdir "$DEP_ROOT" fi mkdir "$REL_DIR" echo "$REL_DIR" exit EOF )" scp -r ./dir1 user@server:"$REL_DIR" scp -r ./dir2 user@server:"$REL_DIR" heredoc="$(cat << stty -echo -onlcr DEP_ROOT= datestamp="$(date +%Y%m%d%H%M%S)" REL_DIR="${DEP_ROOT}/${datestamp}" if [ ! -d "$DEP_ROOT" ] && [ ! -e "$DEP_ROOT" ]; then echo "creating the root directory" 1>&2 mkdir "$DEP_ROOT" fi mkdir "$REL_DIR" echo "$REL_DIR" stty echo onlcr exit EOF )" REL_DIR="$(ssh -t localhost "$heredoc")" scp -r ./dir1 user@server:"$REL_DIR" scp -r ./dir2 user@server:"$REL_DIR"
__lb__lang-css position: relative; } font-size: 3em; color: margin:0; padding:0; } font-size: 1.5em; color: margin:0; padding:0; } background: filter: alpha(opacity=30); filter: progid: DXImageTransform.Microsoft.Alpha(opacity=30); -moz-opacity: 0.30; opacity: 0.3; zoom: 1; } visibility: hidden; } position: absolute; left: 0; top: 0; }
__lb__lang-cs public extension IntMonoid of int : IMonoid<int> { public static int Zero => 0; }
__lb__lang-php What kind of bar is a cheers bar? What kind of bar is a wonka bar? willy wonka three cheers
__lb__lang-cpp CREATE_MEMBER_CLASS_CHECK(x); bool has_class_x = has_member_class_x<class_to_check_for_x>::value;
__lb__lang-sh git fetch -v --dry-run 2>&1 | grep -qE "\[up\s+to\s+date\]\s+$( git branch 2>/dev/null | sed -n sed -r )\s+" || { echo >&2 "Current branch need a exit 1 }
__lb__lang-php class FruitsEnum { static $APPLE = null; static $ORANGE = null; private $value = null; public static $map; public function __construct($value) { $this->value = $value; } public static function init () { self::$APPLE = new FruitsEnum("Apple"); self::$ORANGE = new FruitsEnum("Orange"); self::$map = array ( "Apple" => self::$APPLE, "Orange" => self::$ORANGE ); } public static function get($element) { if($element == null) return null; return self::$map[$element]; } public function getValue() { return $this->value; } public function equals(FruitsEnum $element) { return $element->getValue() == $this->getValue(); } public function __toString () { return $this->value; } } FruitsEnum::init(); var_dump(FruitsEnum::$APPLE->equals(FruitsEnum::$APPLE)); var_dump(FruitsEnum::$APPLE->equals(FruitsEnum::$ORANGE)); var_dump(FruitsEnum::$APPLE instanceof FruitsEnum); var_dump(FruitsEnum::get("Apple")->equals(FruitsEnum::$APPLE)); var_dump(FruitsEnum::get("Apple")->equals(FruitsEnum::get("Orange")));
__lb__lang-php phpinfo posix_mkfifo posix_getlogin posix_ttyname getenv get_current_user proc_get_status get_cfg_var disk_free_space disk_total_space diskfreespace getcwd getlastmo getmygid getmyinode getmypid getmyuid
__lb__lang-cs for (int i = 0; i < 10; i++) { if(i == 0) { continue; } DoSomeThingWith(i); }
__lb__lang-java import java.util.Timer; import java.util.TimerTask; class Test { public static void main( String [] args ) { int delay = 5000; Timer timer = new Timer(); timer.schedule( new TimerTask(){ public void run() { System.out.println("Wait, what..:"); } }, delay); System.out.println("Would it run?"); } }
__lb__lang-cpp X& X::operator=(X source) { swap(source); return *this; }
__lb__lang-cs string splitOnNewLine(string input) { return input.split(environment.newline); }
__lb__lang-java boolean atLeastTwo(boolean t, boolean f, boolean True) { boolean False = True; if ((t || f) && (True || False)) return "answer" != "42"; if (t && f) return !"France".contains("Paris"); if (False == True) return true == false; return Math.random() > 0.5; }
__lb__lang-cs using System.Linq.Enumerable; ... List<KeyValuePair<string, string>> myList = aDictionary.ToList(); myList.Sort( delegate(KeyValuePair<string, string> pair1, KeyValuePair<string, string> pair2) { return pair1.Value.CompareTo(pair2.Value); } );
__lb__lang-php class Album implements AlbumInterface { } class Track implements TrackInterface { } /** @Entity whatever */ class AlbumTrackReference implements AlbumInterface, TrackInterface { public function getTrackTitle() { return $this->track->getTrackTitle(); } public function getTrackDuration() { return $this->track->getTrackDuration(); } public function getAlbumTitle() { return $this->album->getAlbumTitle(); } public function getTrackList() { return $this->album->getTrackList(); } }
__lb__lang-cpp int H = read_int(); int W = read_int(); int connect_four[6][7]; int connect_four[H][7]; int connect_four[6][W]; int connect_four[H][W];
__lb__lang-hs [p | a <- [1 .. 10], b <- [1 .. 10], let p = a * b, even p]
__lb__lang-sh SUB_SCRIPT=$(mktemp) echo " echo chmod +x $SUB_SCRIPT if [[ $1 == "--source" ]]; then for X in $(seq 100); do MODE=$(source $SUB_SCRIPT "source on") done else for X in $(seq 100); do MODE=$($SUB_SCRIPT "source off") done fi echo $MODE rm $SUB_SCRIPT
__lb__lang-cpp class C{ public: explicit inline operator bool(void) const{ return true; } }; int main(void){ C c; bool b = static_cast<bool>(c); return 0; }
__lb__lang-php function swapKeys( &$arr, $origKey, $newKey, &$pendingKeys ) { if( !isset( $arr[$newKey] ) ) { $arr[$newKey] = $arr[$origKey]; unset( $arr[$origKey] ); if( isset( $pendingKeys[$origKey] ) ) { swapKeys( $arr, $pendingKeys[$origKey], $origKey, $pendingKeys ); unset( $pendingKeys[$origKey] ); } } elseif( $newKey != $origKey ) { $pendingKeys[$newKey] = $origKey; } }
__lb__lang-c size_t foo; ... printf("foo = %lu\n", (unsigned long) foo);
__lb__lang-cs var ordersOrderedByDate = GetOrderList(orders, x => x.OrderDate);
__lb__lang-cs public static class EntityFrameworkUtil { public static IEnumerable<T> QueryInChunksOf<T>(this IQueryable<T> queryable, int chunkSize) { return queryable.QueryChunksOfSize(chunkSize).SelectMany(chunk => chunk); } public static IEnumerable<T[]> QueryChunksOfSize<T>(this IQueryable<T> queryable, int chunkSize) { int chunkNumber = 0; while (true) { var query = (chunkNumber == 0) ? queryable : queryable.Skip(chunkNumber * chunkSize); var chunk = query.Take(chunkSize).ToArray(); if (chunk.Length == 0) yield break; yield return chunk; chunkNumber++; } } }
__lb__lang-c double sin (double x){ int i = 1; double cur = x; double acc = 1; double fact= 1; double pow = x; while (fabs(acc) > .00000001 && i < 100){ fact *= ((2*i)*(2*i+1)); pow *= -1 * x*x; acc = pow / fact; cur += acc; i++; } return cur; }
__lb__lang-java public static <T> ArrayList<T> createArrayList(T ... elements) { ArrayList<T> list = new ArrayList<T>(); for (T element : elements) { list.add(element); } return list; }
__lb__lang-perl if ( -e $ENV{"HOME"} . "/foo.txt" ) { print "yes ,it exists!" ; }
__lb__lang-sh $ bash -c success 0 $ bash -c success 0 $ bash -c 1
__lb__lang-cpp int main () { std::locale::global(std::locale("en_US.utf8")); std::wcout.imbue(std::locale()); std::wcout << "In US English UTF-8 locale:\n"; auto& f = std::use_facet<std::ctype<wchar_t>>(std::locale()); std::wstring str = L"HELLo, wORLD!"; std::wcout << "Lowercase form of the string f.tolower(&str[0], &str[0] + str.size()); std::wcout << " }
__lb__lang-sh Tue Jun 7 16:59:57 CDT 2016 rm -rf /Library/LaunchAgents/offendingfile Tue Jun 7 16:59:57 CDT 2016 rm -rf /Library/LaunchAgents/secondoffendingfile
__lb__lang-golang your_mother := "was a hamster" your_father := "smells of elderberries" _, _ = your_mother, your_father
__lb__lang-cs public static bool equals(sbyte[] a1, sbyte[] a2) { if (a1 == a2) { return true; } if ((a1 != null) && (a2 != null)) { if (a1.Length != a2.Length) { return false; } for (int i = 0; i < a1.Length; i++) { if (a1[i] != a2[i]) { return false; } } return true; } return false; }
__lb__lang-cs private string createTableQuery = ""; void createTable(string tableName) { createTableQuery = @"CREATE TABLE IF NOT EXISTS ["+ tableName + @"] ( [ID] INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, [Key] NVARCHAR(2048) NULL, [Value] VARCHAR(2048) NULL )"; }
__lb__lang-cs byte[] bytes = "rubbish_\u9999_string".AsSpan().AsBytes().ToArray();
__lb__lang-golang package main import ( "fmt" ) func callOut() int { fmt.Println("Outside is beinge executed") return 1 } var test = callOut() func init() { fmt.Println("Init3 is being executed") } func init() { fmt.Println("Init is being executed") } func init() { fmt.Println("Init2 is being executed") } func main() { fmt.Println("Do your thing !") }
__lb__lang-java public class SortUtil { public static <T> List<T> sort(List<T> list, String sortByProperty) { Collections.sort(list, new BeanComparator(sortByProperty)); return list; } } List<T> sortedList = SortUtil<T>.sort(unsortedList, "startDate");
__lb__lang-cpp 0x400a68: popcnt (%rbx,%rdx,1),%rax popcnt 0x8(%rbx,%rdx,1),%rcx add %rax,%rcx popcnt 0x10(%rbx,%rdx,1),%rax add %rax,%rcx popcnt 0x18(%rbx,%rdx,1),%rsi add $0x20,%rdx add %rsi,%rcx add %rcx,%rbp cmp $0x100000,%rdx jne 0x400a68
__lb__lang-java at android.view.View$PerformClick.run(View.java:20262)
__lb__lang-php $years = $zDate[0][0] - $yDate[0][0]; if ($months == 0 and $zDate[0][1] > $ydate[0][1]) { $years = $years -1; } echo "\nCurrent years => ".$years; $months = $zDate[0][1] - $yDate[0][1]; echo "\nCurrent months => ".$months; switch ($yDate[0][1]){ case 01: $monthDays = case 02: $monthDays = case 03: $monthDays = case 04: $monthDays = case 05: $monthDays = case 06: $monthDays = case 07: $monthDays = case 08: $monthDays = case 09: $monthDays = case 10: $monthDays = case 11: $monthDays = case 12: $monthDays = }; echo "\nDays in start month ".$yDate[0][1]." => ".$monthDays; $days = $zDate[0][2] - $yDate[0][2] +$monthDays; echo "\nCurrent days => ".$days."\n"; if($days < $monthDays && $months == 0) { $months = 11; } else { $months = 0; $years = $years+1; $days = $days-$monthDays; }; if ($days == $monthDays ) { $days = 0; }; echo "\nTherefore, the number of years/ months/ days/ \nbetween start and todays date::\n\n"; printf("%d years, %d months, %d days\n", $years, $months, $days);
__lb__lang-perl my @badparams = (1,2,5,7, my $badparams = join( foreach my $par (4,5,6,7, { if ($badparams =~ /\b$par\b/) { print "$par is present\n"; } else { print "$par is not present\n"; } }
__lb__lang-php function sortByOrder($a, $b) { return $a[ } usort($myArray,
__lb__lang-golang s := []interface{}{"First", "Second", "Third"} fmt.Println(s...)
__lb__lang-cs public class g1 { private string name; public string Name { get => name; set => name = "Hip Hop"; } }
__lb__lang-perl my $oldstring = "replace donotreplace replace donotreplace replace donotreplace"; my $newstring = $oldstring; $newstring =~ s/replace/newword/g; print $newstring; %: newword donotreplace newword donotreplace newword donotreplace
__lb__lang-sh curl \ --data-urlencode "paramName=value" \ --data-urlencode "secondParam=value" \ http:
__lb__lang-php $duration = -493; $wasNegative = FALSE; if( $duration < 0 ) { $wasNegative = TRUE; $duration = abs( $duration ); } $converted = [ ]; $result = ltrim( sprintf( if( $result == if( $wasNegative ) { $result = "-{$result}"; }
__lb__lang-cs /* * Added to satisfy initialization of entry elements -- * this is where the extra time is spent resizing the Entry array * **/ for (int i = 0 ; i < prime ; i++) { destinationArray[i] = new Entry( ); } /* *********************************************** */
__lb__lang-cpp typedef ptrdiff_t Size; template< class Type, Size n > Size n_items( Type (&)[n] ) { return n; }
__lb__lang-java import java.security.MessageDigest; import java.security.NoSuchAlgorithmException; import javax.xml.bind.DatatypeConverter; public class MD5HashGenerator { public static void main(String args[]) throws NoSuchAlgorithmException { String stringToHash = "MyJavaCode"; MessageDigest messageDigest = MessageDigest.getInstance("MD5"); messageDigest.update(stringToHash.getBytes()); byte[] digiest = messageDigest.digest(); String hashedOutput = DatatypeConverter.printHexBinary(digiest); System.out.println(hashedOutput); } }
__lb__lang-php $a = array( 1 ); $key = array_search( 10, $a ); if( $key !== false ) { unset( $a[ $key ] ); } print_r( $a ); /* Output: Array ( [0] => salam [2] => 1 ) */
__lb__lang-java private static final Set<String> VALUES = new HashSet<String>(Arrays.asList( new String[] {"AB","BC","CD","AE"} ));
__lb__lang-golang type Response2 struct { Page int `json:"page"` Fruits []string `json:"fruits"` } res2D := &Response2{ Page: 1, Fruits: []string{"apple", "peach", "pear"}} res2B, _ := json.Marshal(res2D) fmt.Println(string(res2B))
__lb__lang-sh /usr/bin/find "$PWD" -maxdepth 1 -mindepth 1 -name "$1"
__lb__lang-sh unipromtp "Select an option: (a)-Do one (x)->Do two (f)->Do three : " "a x f" selection echo "$selection"
__lb__lang-hs fstLens :: Lens (a, b) a fstLens = Lens fst $ \x (a, b) -> (x, b) sndLens :: Lens (a, b) b sndLens = Lens snd $ \x (a, b) -> (a, x)
__lb__lang-hs while :: (Monad m) => m Bool -> m () -> m () while cond action = do c <- cond if c then action >> while cond action else return ()
__lb__lang-cs public class Foo { public object this[string propertyName] { get { return this.GetType().GetProperty(propertyName).GetValue(this, null); } set { this.GetType().GetProperty(propertyName).SetValue(this, value, null); } } public string Bar { get; set; } }
__lb__lang-php SELECT * FROM TABLE WHERE column1=value1 and column2=value2 and column3=value3
__lb__lang-golang package main import "fmt" type Mutatable struct { a int b int } func (m Mutatable) StayTheSame() { m.a = 5 m.b = 7 } func (m *Mutatable) Mutate() { m.a = 5 m.b = 7 } func main() { m := &Mutatable{0, 0} fmt.Println(m) m.StayTheSame() fmt.Println(m) m.Mutate() fmt.Println(m)
__lb__lang-perl $ locale locale: Cannot set LC_ALL to default locale: No such file or directory LANG=en_US.UTF-8 LANGUAGE= LC_CTYPE=en_US.UTF-8 LC_NUMERIC=ru_RU.UTF-8 LC_TIME=ru_RU.UTF-8 LC_COLLATE="en_US.UTF-8" LC_MONETARY=ru_RU.UTF-8 LC_MESSAGES="en_US.UTF-8" LC_PAPER=ru_RU.UTF-8 LC_NAME=ru_RU.UTF-8 LC_ADDRESS=ru_RU.UTF-8 LC_TELEPHONE=ru_RU.UTF-8 LC_MEASUREMENT=ru_RU.UTF-8 LC_IDENTIFICATION=ru_RU.UTF-8 LC_ALL= $ sudo su Generating locales... en_US.UTF-8... up-to-date Generation complete. Generating locales... en_AG.UTF-8... done en_AU.UTF-8... done en_BW.UTF-8... done en_CA.UTF-8... done en_DK.UTF-8... done en_GB.UTF-8... done en_HK.UTF-8... done en_IE.UTF-8... done en_IN.UTF-8... done en_NG.UTF-8... done en_NZ.UTF-8... done en_PH.UTF-8... done en_SG.UTF-8... done en_US.UTF-8... up-to-date en_ZA.UTF-8... done en_ZM.UTF-8... done en_ZW.UTF-8... done Generation complete. $ locale LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8 LC_CTYPE="en_US.UTF-8" LC_NUMERIC="en_US.UTF-8" LC_TIME="en_US.UTF-8" LC_COLLATE="en_US.UTF-8" LC_MONETARY="en_US.UTF-8" LC_MESSAGES="en_US.UTF-8" LC_PAPER="en_US.UTF-8" LC_NAME="en_US.UTF-8" LC_ADDRESS="en_US.UTF-8" LC_TELEPHONE="en_US.UTF-8" LC_MEASUREMENT="en_US.UTF-8" LC_IDENTIFICATION="en_US.UTF-8" LC_ALL=en_US.UTF-8
__lb__lang-java try { BufferedReader br = new BufferedReader(new FileReader(inputFile)); ... ... } catch (Exception e) { e.printStacktrace(); }
__lb__lang-perl use Data::Dump qw(dump); my @a = (1, [2, 3], {4 => 5}); dump(@a);
__lb__lang-sh if [ "$answer" != "${answer echo Yes else echo No fi
__lb__lang-java public class Pair<FIRST, SECOND> implements Comparable<Pair<FIRST, SECOND>> { public final FIRST first; public final SECOND second; private Pair(FIRST first, SECOND second) { this.first = first; this.second = second; } public static <FIRST, SECOND> Pair<FIRST, SECOND> of(FIRST first, SECOND second) { return new Pair<FIRST, SECOND>(first, second); } @Override public int compareTo(Pair<FIRST, SECOND> o) { int cmp = compare(first, o.first); return cmp == 0 ? compare(second, o.second) : cmp; } private static int compare(Object o1, Object o2) { return o1 == null ? o2 == null ? 0 : -1 : o2 == null ? +1 : ((Comparable) o1).compareTo(o2); } @Override public int hashCode() { return 31 * hashcode(first) + hashcode(second); } private static int hashcode(Object o) { return o == null ? 0 : o.hashCode(); } @Override public boolean equals(Object obj) { if (!(obj instanceof Pair)) return false; if (this == obj) return true; return equal(first, ((Pair) obj).first) && equal(second, ((Pair) obj).second); } private boolean equal(Object o1, Object o2) { return o1 == null ? o2 == null : (o1 == o2 || o1.equals(o2)); } @Override public String toString() { return "(" + first + ", " + second + } }
__lb__lang-sh SIZE="10" CHECK="`du -hs /media/662499e1-b699-19ad-57b3-acb127aa5a2b/Aufnahmen`" CHECK=${CHECK%G*} echo "Current Foldersize: $CHECK GB" if (( $(echo "$CHECK > $SIZE" |bc -l) )); then echo "Folder is bigger than $SIZE GB" else echo "Folder is smaller than $SIZE GB" fi
__lb__lang-php class Example { private $options; public function __construct(Array $setup) { $this->options = (object) $setup; echo $this->options->{ echo $this->options->surname; } } $ob1 = new Example(["name" => "John", "surname" => "Doe"]);
__lb__lang-cs if (MyModal.ImageFile != null) { MyModal.ImageURL = string.Format("{0}.{1}", Guid.NewGuid().ToString(), MyModal.ImageFile.FileName.Split( if (MyModal.ImageFile != null) { var path = Path.Combine(Server.MapPath("~/Content/uploads/"), MyModal.ImageURL); MyModal.ImageFile.SaveAs(path); } }
__lb__lang-java public interface KeyFinder<K, E> { K getKey(E e); }
__lb__lang-css .centered { width: 150px; height: 150px; display: flex; align-items: center; justify-content: center; text-align: center; background: red; }
__lb__lang-php class PersonArray implements \ArrayAccess, \IteratorAggregate { public function __construct(Person $person) { $this->person = $person; } }
__lb__lang-java public class WaterContainer { private int size; private int brand; ...etc public static int convertToGallon(int liters)... public static int convertToLiters(int gallon)... }
__lb__lang-sh cd /source_directory tar cvf test.tar --exclude=dir_to_exclude * mv test.tar /destination cd /destination tar xvf test.tar
__lb__lang-java class DemoTask extends AsyncTask<Void, Void, Void> { protected Void doInBackground(Void... arg0) { } protected void onPostExecute(Void result) { } }
__lb__lang-java ... 405 ms A 785527736 327 ms B 785527736 404 ms A 785527736 329 ms B 785527736 404 ms A 785527736 328 ms B 785527736 404 ms A 785527736 328 ms B 785527736 410 ms 333 ms
__lb__lang-sh function get_keypress { local REPLY IFS= >/dev/tty printf [[ $ZSH_VERSION ]] && read -rk1 [[ $BASH_VERSION ]] && </dev/tty read -rn1 printf } function get_yes_keypress { local prompt="${1:-Are you sure [y/n]? }" local enter_return=$2 local REPLY while REPLY=$(get_keypress "$prompt"); do [[ $REPLY ]] && printf case "$REPLY" in Y|y) return 0;; N|n) return 1;; esac done } function confirm { local prompt="${*:-Are you sure} [y/N]? " get_yes_keypress "$prompt" 1 } function confirm_yes { local prompt="${*:-Are you sure} [Y/n]? " get_yes_keypress "$prompt" 0 }
__lb__lang-java String[] f(String[] first, String[] second) { List<String> both = new ArrayList<String>(first.length + second.length); Collections.addAll(both, first); Collections.addAll(both, second); return both.toArray(new String[both.size()]); }
__lb__lang-sh do_xxxx=y [[ -t 0 ]] && { read -t 5 -n 1 -p $ Do xxxx? (Y/n)\e[0m do_xxxx=n ; } if [[ $do_xxxx =~ ^(y|Y|)$ ]] then xxxx fi
__lb__lang-java ╔═════════════╦═══════╦═════════╦══════════╦═══════╗ ║ Modifier ║ Class ║ Package ║ Subclass ║ World ║ ╠═════════════╬═══════╬═════════╬══════════╬═══════╣ ║ public ║ Y ║ Y ║ Y ║ Y ║ ║ protected ║ Y ║ Y ║ Y ║ N ║ ║ no modifier ║ Y ║ Y ║ N ║ N ║ ║ private ║ Y ║ N ║ N ║ N ║ ╚═════════════╩═══════╩═════════╩══════════╩═══════╝
__lb__lang-sh if [ -f /etc/bash_completion ]; then . /etc/bash_completion fi
__lb__lang-cs using System.IO; namespace delete_the_folder { public partial class Form1 : Form { public Form1() { InitializeComponent(); } private void Deletebt_Click(object sender, EventArgs e) { if (Pathfolder.Text=="") { MessageBox.Show("ples write the path of the folder"); Pathfolder.Select(); } FileAttributes attr = File.GetAttributes(@Pathfolder.Text); if (attr.HasFlag(FileAttributes.Directory)) MessageBox.Show("Its a directory"); else MessageBox.Show("Its a file"); string path = Pathfolder.Text; FileInfo myfileinf = new FileInfo(path); myfileinf.Delete(); } } }
__lb__lang-cpp .L9: movq (%rbx,%rdx,8), %r9 movq 8(%rbx,%rdx,8), %r10 movq 16(%rbx,%rdx,8), %r11 movq 24(%rbx,%rdx,8), %rbp addq $4, %rdx popcnt %r9, %rax add %rax, %rcx popcnt %r10, %rax add %rax, %rsi popcnt %r11, %rax add %rax, %r8 popcnt %rbp, %rax add %rax, %rdi cmpq $131072, %rdx jne .L9
__lb__lang-perl $string = "-9 55 48 -2 23 -76 4 14 -44"; while ($string =~ /-\d+/g) { $count++ } print "There are $count negative numbers in the string";
__lb__lang-hs 5 `mod` 3 == 2 5 `rem` 3 == 2 5 `mod` (-3) == -1 5 `rem` (-3) == 2 (-5) `mod` 3 == 1 (-5) `rem` 3 == -2 (-5) `mod` (-3) == -2 (-5) `rem` (-3) == -2
__lb__lang-java public static byte[] getBytesFromFile(File file) throws IOException { long length = file.length(); if (length > Integer.MAX_VALUE) { throw new IOException("File is too large!"); } byte[] bytes = new byte[(int)length]; int offset = 0; int numRead = 0; InputStream is = new FileInputStream(file); try { while (offset < bytes.length && (numRead=is.read(bytes, offset, bytes.length-offset)) >= 0) { offset += numRead; } } finally { is.close(); } if (offset < bytes.length) { throw new IOException("Could not completely read file "+file.getName()); } return bytes; }
__lb__lang-cs bool contains = Regex.IsMatch("StRiNG to search", Regex.Escape("string"), RegexOptions.IgnoreCase);
__lb__lang-java Iterator<Entry<String, Integer>> me = m.entrySet().iterator(); while(me.hasNext()){ Entry<String, Integer> pair = me.next(); System.out.println(pair.getKey() + ":" + pair.getValue()); } for(Entry<String, Integer> me : m.entrySet()){ System.out.println(me.getKey() + " : " + me.getValue()); } for(String s : m.keySet()){ System.out.println(s + " : " + m.get(s)); } Iterator<String> me = m.keySet().iterator(); while(me.hasNext()){ String key = me.next(); System.out.println(key + " : " + m.get(key)); }
__lb__lang-golang tr := http.DefaultTransport.(*http.Transport) tr.TLSClientConfig.InsecureSkipVerify = true
__lb__lang-java int main() { std::mt19937 rng(631647094); std::uniform_int_distribution<char> dist( char alpha; while ((alpha = dist(rng)) != { std::cout << alpha; } }
__lb__lang-perl while (<>) { } continue { print or die "-p destination: $!\n"; }
__lb__lang-hs safeTail :: [x] -> Maybe [x] safeTail = para (\ _ xs _ -> Just xs) Nothing
__lb__lang-cs var txt = "ABCDEFG"; if (Information.IsNumeric(txt)) Console.WriteLine ("Numeric"); IsNumeric("12.3"); IsNumeric("1"); IsNumeric("abc");
__lb__lang-cs string query = @"SELECT foo, bar FROM table WHERE name =
__lb__lang-css .outer { position: absolute; display: table; width: 100%; height: 100%; text-align: center; } .middle { display: table-cell; vertical-align: middle; } .inner { text-align: center; display: inline-block; width: auto; }
__lb__lang-cs public class GridViewExportUtil { public static void Export(string fileName, GridView gv) { HttpContext.Current.Response.Clear(); HttpContext.Current.Response.AddHeader( "content-disposition", string.Format("attachment; filename={0}", fileName)); HttpContext.Current.Response.ContentType = "application/ms-excel"; using (StringWriter sw = new StringWriter()) { using (HtmlTextWriter htw = new HtmlTextWriter(sw)) { Table table = new Table(); if (gv.HeaderRow != null) { GridViewExportUtil.PrepareControlForExport(gv.HeaderRow); table.Rows.Add(gv.HeaderRow); } foreach (GridViewRow row in gv.Rows) { GridViewExportUtil.PrepareControlForExport(row); table.Rows.Add(row); } if (gv.FooterRow != null) { GridViewExportUtil.PrepareControlForExport(gv.FooterRow); table.Rows.Add(gv.FooterRow); } table.RenderControl(htw); HttpContext.Current.Response.Write(sw.ToString()); HttpContext.Current.Response.End(); } } } private static void PrepareControlForExport(Control control) { for (int i = 0; i < control.Controls.Count; i++) { Control current = control.Controls[i]; if (current is LinkButton) { control.Controls.Remove(current); control.Controls.AddAt(i, new LiteralControl((current as LinkButton).Text)); } else if (current is ImageButton) { control.Controls.Remove(current); control.Controls.AddAt(i, new LiteralControl((current as ImageButton).AlternateText)); } else if (current is HyperLink) { control.Controls.Remove(current); control.Controls.AddAt(i, new LiteralControl((current as HyperLink).Text)); } else if (current is DropDownList) { control.Controls.Remove(current); control.Controls.AddAt(i, new LiteralControl((current as DropDownList).SelectedItem.Text)); } else if (current is CheckBox) { control.Controls.Remove(current); control.Controls.AddAt(i, new LiteralControl((current as CheckBox).Checked ? "True" : "False")); } if (current.HasControls()) { GridViewExportUtil.PrepareControlForExport(current); } } } }
__lb__lang-hs vApply :: Vec n (s -> t) -> Vec n s -> Vec n t vApply VNil VNil = VNil vApply (VCons f fs) (VCons s ss) = VCons (f s) (vApply fs ss)
__lb__lang-java Pasted from <http: <?xml version="1.0" encoding="UTF-8" standalone="no"?> <web:web-app xmlns:app="http: <dep:environment> <dep:moduleId> <dep:groupId>DataStar</dep:groupId> <dep:artifactId>DataStar</dep:artifactId> <dep:version>1.0</dep:version> <dep:type>car</dep:type> </dep:moduleId> <!--Don <dep:hidden-classes> <dep:filter>org.apache.commons.io</dep:filter> <dep:filter>org.apache.commons.fileupload</dep:filter> </dep:hidden-classes> <dep:inverse-classloading/> </dep:environment> <web:context-root>/DataStar</web:context-root> </web:web-app>
__lb__lang-cpp class MyClass { private: int myPrivateMember; protected: int myProtectedMember; };
__lb__lang-java DummyBean dum = new DummyBean(); dum.setDummy("foo"); System.out.println(dum.getDummy()); DummyBean dumtwo = dum; System.out.println(dumtwo.getDummy()); dum.setDummy("bar"); System.out.println(dumtwo.getDummy());
__lb__lang-java String contentType = connection.getHeaderField("Content-Type"); String charset = null; for (String param : contentType.replace(" ", "").split(";")) { if (param.startsWith("charset=")) { charset = param.split("=", 2)[1]; break; } } if (charset != null) { try (BufferedReader reader = new BufferedReader(new InputStreamReader(response, charset))) { for (String line; (line = reader.readLine()) != null;) { } } } else { }
__lb__lang-php namespace App\Providers; defines the namespace provider use Illuminate\Support\ServiceProvider; imports the ServiceProvider class namespace class HelperServiceProvider extends ServiceProvider {…} defines a class HelperServiceProvider that extends the ServiceProvider class public function boot(){…} bootstraps the application service public function register(){…} is the function that loads the helpers foreach (glob(app_path().
__lb__lang-cpp using namespace std; int main(){ string str; cin>>str; transform(str.begin(), str.end(), str.begin(), ::tolower); cout<<str; return 0; }
__lb__lang-cpp string str("Checkerboard"); TextureHandle htex = CreateTexture(128, 128, A8R8G8B8, str);
__lb__lang-cs try { SomeExceptionThrowingMethod() Assert.Fail("no exception thrown"); } catch (Exception ex) { Assert.IsTrue(ex is SpecificExceptionType); }
__lb__lang-java public class PassByValueObjectCase2 { public static void main(String[] args) { new PassByValueObjectCase2().caller(); } public void caller() { Student student = new Student(10, "Nikhil"); String output = method(student); /* * * */ System.out.println("output : " + output); System.out.println("student : " + student); } public String method(Student student) { student = new Student(20, "Anand"); return "output"; } }
__lb__lang-css input[type="checkbox"] { appearance: none; -webkit-appearance: none; -moz-appearance: none; }
__lb__lang-cs IEnumerable<string> stringEnumerable= new List<string>(); stringList.Add("Comma"); stringList.Add("Separated"); string.Join<string>(",", stringEnumerable);
__lb__lang-java public interface RecyclerViewClickListener { public void recyclerViewListClicked(View v,int position); } RecyclerView_Adapter adapter=new RecyclerView_Adapter(Wallpaper.this,arrayList,this); recyclerView.setAdapter(adapter); adapter.notifyDataSetChanged(); @Override public void recyclerViewListClicked(View v,int position){ imageView.setImageResource(wallpaperImages[position]); }
__lb__lang-java StopWatch stopWatch = new StopWatch("Performance Test Result"); stopWatch.start("Method 1"); doSomething1(); stopWatch.stop(); stopWatch.start("Method 2"); doSomething2(); stopWatch.stop(); System.out.println(stopWatch.prettyPrint());
__lb__lang-cpp template <typename T> class foo { public: void bar(const T& t); };
__lb__lang-html <div> <table style="width: 100%; height: 100%"> <tr> <td style="width: 100%; height: 100%; vertical-align: middle;"> What ever you want vertically-aligned </td> </tr> </table> </div>
__lb__lang-php root@vps [~] disable_functions = dl, exec, shell_exec, system, passthru, popen, pclose, proc_open, proc_nice, proc_terminate, proc_get_status, proc_close, pfsockopen, leak, apache_child_terminate, posix_kill, posix_mkfifo, posix_setpgid, posix_setsid, posix_setuid
__lb__lang-java String[] both = Stream.concat(Arrays.stream(a), Arrays.stream(b)) .toArray(String[]::new);
__lb__lang-java public static boolean isNumeric(String str) { return str.matches("^(?:(?:\\-{1})?\\d+(?:\\.{1}\\d+)?)$"); }
__lb__lang-java public enum MyEnum { VALUE_1("Super"), VALUE_2("Rainbow"), VALUE_3("Dash"), VALUE_3("Rocks"); private final String value; MyEnum(String value) { this.value = value; } /** * @return the Enum representation for the given string. * @throws IllegalArgumentException if unknown string. */ public static MyEnum fromString(String s) throws IllegalArgumentException { return Arrays.stream(MyEnum.values()) .filter(v -> v.value.equals(s)) .findFirst() .orElseThrow(() -> new IllegalArgumentException("unknown value: " + s)); } }
__lb__lang-cs public int PlayerCount { get { return Players.Count; } }
__lb__lang-css .tri-1 { width:100px; height:100px; display:inline-block; background-image: linear-gradient(to bottom right, transparent 50%,red 0), linear-gradient(to bottom left, transparent 50%,red 0); background-size:20% 60%,80% 60%; background-position: left bottom,right bottom; background-repeat:no-repeat; }
__lb__lang-java doAnswer(i -> { ((Runnable) i.getArguments()[0]).run(); return null; }).when(executor).execute(any());
__lb__lang-php strncmp_startswith2: 40.2 ms strncmp_startswith: 42.9 ms substr_compare_startswith: 44.5 ms substr_startswith: 48.4 ms strpos_startswith: 138.7 ms preg_match_startswith: 13,152.4 ms
__lb__lang-sh $Variable1 Open $Variable2 Systems $Variable3 $Variable1$Variable2 $echo $Variable3
__lb__lang-java byte[] buf = new byte[inputStreamLength]; int bytesRead = Math.max(0, inputStream.read(buf)); byte[] contents = bytesRead == inputStreamLength ? buf : Arrays.copyOf(buf, bytesRead);
__lb__lang-cpp int a[8] = {2, 3, 5, 7, 11, 13, 17, 19}; int b[8]; std::copy(a + 0, a + 8, b);
__lb__lang-java ImplementsRunnable : Counter : 1 ImplementsRunnable : Counter : 2 ImplementsRunnable : Counter : 3 ExtendsThread : Counter : 1 ExtendsThread : Counter : 1 ExtendsThread : Counter : 1
__lb__lang-java public class MyClass { public MyClass(double argument1, double argument2) { this(argument1, argument2, getDefaultArg3(argument1, argument2)); } public MyClass(double argument1, double argument2, double argument3) { this.argument1 = argument1; this.argument2 = argument2; this.argument3 = argument3; } private static double getDefaultArg3(double argument1, double argument2) { double argument3 = 0; return argument3; } }
__lb__lang-java package fatherpackage; public class Son extends Father { public void sonMethod(Father f) { f.foo(); } }
__lb__lang-java Running 64-bit HotSpot VM. Using compressed oop with 0-bit shift. Using compressed klass with 3-bit shift. Objects are 8 bytes aligned. Field sizes by type: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes] Array element sizes: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]
__lb__lang-cpp using namespace std; using namespace boost; typedef tokenizer<char_separator<wchar_t>, wstring::const_iterator, wstring> Tok; int main() { wstring s; while (getline(wcin, s)) { char_separator<wchar_t> sep(L" "); Tok tok(s, sep); for (Tok::iterator beg = tok.begin(); beg != tok.end(); ++beg) { wcout << *beg << L"\t"; } wcout << L"\n"; } return 0; }
__lb__lang-c int main(void) { int i = 0; i = i++ + ++i; printf("%d\n", i); i = 1; i = (i++); printf("%d\n", i); volatile int u = 0; u = u++ + ++u; printf("%d\n", u); u = 1; u = (u++); printf("%d\n", u); register int v = 0; v = v++ + ++v; printf("%d\n", v); int w = 0; printf("%d %d %d\n", w++, ++w, w); int x[2] = { 5, 8 }, y = 0; x[y] = y ++; printf("%d %d\n", x[0], x[1]); }
__lb__lang-cs [Flags] public enum PossibleOptions : byte { None = 0, OptionOne = 1, OptionTwo = 2, OptionThree = 4, OptionFour = 8, OptionOneAndTwo = OptionOne | OptionTwo, OptionOneTwoAndThree = OptionOne | OptionTwo | OptionThree, ... }
__lb__lang-php $i = 0; $keys_array=array("0"=>"one","1"=>"two"); $keys = array_keys($keys_array); for($i=0;$i<count($keys);$i++) { $keys_array[$keys_array[$i]]=$keys_array[$i]; unset($keys_array[$i]); } print_r($keys_array);
__lb__lang-php $qMarks = str_repeat( $sth = $db->prepare("SELECT * FROM myTable WHERE id IN ($qMarks)"); $sth->execute($ids);
__lb__lang-php $query = $corpus = array( 1 => 2 => 3 => ); $match_results=get_similar_documents($query,$corpus); echo print_r($match_results); echo
__lb__lang-cs public partial class SingleInstanceMutex : IDisposable { private bool isNoOtherInstanceRunning; private Mutex singleInstanceMutex = null; private bool disposed; public SingleInstanceMutex() { this.singleInstanceMutex = new Mutex(true, Assembly.GetCallingAssembly().FullName, out this.isNoOtherInstanceRunning); } public bool IsOtherInstanceRunning { get { return !this.isNoOtherInstanceRunning; } } public void Close() { this.ThrowIfDisposed(); this.singleInstanceMutex.Close(); } public void Dispose() { this.Dispose(true); GC.SuppressFinalize(this); } private void Dispose(bool disposing) { if (!this.disposed) { if (disposing) { this.Close(); } this.disposed = true; } } public void ThrowIfDisposed() { if (this.disposed) { throw new ObjectDisposedException(this.GetType().Name); } } }
__lb__lang-php $today = date("F j, Y, g:i a"); $today = date("m.d.y"); $today = date("j, n, Y"); $today = date("Ymd"); $today = date( $today = date( $today = date("D M j G:i:s T Y"); $today = date( $today = date("H:i:s"); $today = date("Y-m-d H:i:s");
__lb__lang-java from(people).where("name", eq("Arthur")).first(); from(people).where("age", lessThan(20)).all(); from(people).where("name", not(contains("Francine"))).all();
__lb__lang-html <input name="checkbox_name" id="checkbox_id" type="checkbox" checked> <input name="checkbox_name" id="checkbox_id" type="checkbox" checked="on"> <input name="checkbox_name" id="checkbox_id" type="checkbox" checked="yes"> <input name="checkbox_name" id="checkbox_id" type="checkbox" checked="checked"> <input name="checkbox_name" id="checkbox_id" type="checkbox" checked="true">
__lb__lang-hs return :: a ~> m a flip (>>=) :: (a ~> m b) -> (m a ~> m b)
__lb__lang-php RESULTS ARE: { - - - "results" : [ - - -- - - { - - -- - -- - - "address_components" : [ - - -- - -- - -- - - { - - -- - -- - -- - -- - - "long_name" : "Calgary" - - -- - -- - -- - -- - - "short_name" : "Calgary" - - -- - -- - -- - -- - - "types" : [ - - -- - -- - -- - -- - -- - - "locality" - - -- - -- - -- - -- - -- - - "political" ] - - -- - -- - -- - - } - - -- - -- - - - - -- - -- - -- - - { - - -- - -- - -- - -- - - "long_name" : "Division No. 6" - - -- - -- - -- - -- - - "short_name" : "Division No. 6" - - -- - -- - -- - -- - - "types" : [ - - -- - -- - -- - -- - -- - - "administrative_area_level_2" - - -- - -- - -- - -- - -- - - "political" ] - - -- - -- - -- - - } - - -- - -- - - - - -- - -- - -- - - { - - -- - -- - -- - -- - - "long_name" : "Alberta" - - -- - -- - -- - -- - - "short_name" : "AB" - - -- - -- - -- - -- - - "types" : [ - - -- - -- - -- - -- - -- - - "administrative_area_level_1" - - -- - -- - -- - -- - -- - - "political" ] - - -- - -- - -- - - } - - -- - -- - - - - -- - -- - -- - - { - - -- - -- - -- - -- - - "long_name" : "Canada" - - -- - -- - -- - -- - - "short_name" : "CA" - - -- - -- - -- - -- - - "types" : [ - - -- - -- - -- - -- - -- - - "country" - - -- - -- - -- - -- - -- - - "political" ] - - -- - -- - -- - - } - - -- - -- - - ] - - -- - - - - -- - -- - - "formatted_address" : "Calgary, AB, Canada" - - -- - -- - - "geometry" : { - - -- - -- - -- - - "bounds" : { - - -- - -- - -- - -- - - "northeast" : { - - -- - -- - -- - -- - -- - - "lat" : 51.18383 - - -- - -- - -- - -- - -- - - "lng" : -113.8769511 } - - -- - -- - -- - - - - -- - -- - -- - -- - - "southwest" : { - - -- - -- - -- - -- - -- - - "lat" : 50.84240399999999 - - -- - -- - -- - -- - -- - - "lng" : -114.27136 } - - -- - -- - -- - - } - - -- - -- - - - - -- - -- - -- - - "location" : { - - -- - -- - -- - -- - - "lat" : 51.0486151 - - -- - -- - -- - -- - - "lng" : -114.0708459 } - - -- - -- - - - - -- - -- - -- - - "location_type" : "APPROXIMATE" - - -- - -- - -- - - "viewport" : { - - -- - -- - -- - -- - - "northeast" : { - - -- - -- - -- - -- - -- - - "lat" : 51.18383 - - -- - -- - -- - -- - -- - - "lng" : -113.8769511 } - - -- - -- - -- - - - - -- - -- - -- - -- - - "southwest" : { - - -- - -- - -- - -- - -- - - "lat" : 50.84240399999999 - - -- - -- - -- - -- - -- - - "lng" : -114.27136 } - - -- - -- - -- - - } - - -- - -- - - } - - -- - - - - -- - -- - - "place_id" : "ChIJ1T-EnwNwcVMROrZStrE7bSY" - - -- - -- - - "types" : [ - - -- - -- - -- - - "locality" - - -- - -- - -- - - "political" ] - - -- - - } - - - ] - - - "status" : "OK" }
__lb__lang-cs [HttpPost] public ActionResult FileUpload(HttpPostedFileBase uploadedFile) { }
__lb__lang-cs public static string AssemblyDirectory { get { string codeBase = Assembly.GetExecutingAssembly().CodeBase; UriBuilder uri = new UriBuilder(codeBase); string path = Uri.UnescapeDataString(uri.Path.Replace("/", "\\") + uri.Fragment.Replace("/", "\\")); return Path.GetDirectoryName(path); } }
__lb__lang-cs var ts = new TimeSpan(DateTime.UtcNow.Ticks - dt.Ticks);
__lb__lang-css div { width: 200px; height: 200px; border: 1px solid green; display: flex; justify-content: center; align-items: center; }
__lb__lang-cpp typedef std::map<int, int> Int2IntMap; Int2IntMap testMap; map_add_values<Int2IntMap>(1,2)(3,4)(5,6).to(testMap);
__lb__lang-sh :$ ./bash_redir_test.sh STDOUT is attached to TTY :$ ./bash_redir_test.sh | xargs echo STDOUT is attached to a pipe :$ rm bash_redir_test.log :$ ./bash_redir_test.sh >> bash_redir_test.log :$ tail bash_redir_test.log STDOUT is attached to a redirection
__lb__lang-cs string camlCondition = $@" <Where> <Contains> <FieldRef Name= <Value Type= </Contains> </Where>";
__lb__lang-css .cn { display:table; height:80px; background-color: } .inner { display:table-cell; vertical-align:middle; color: padding-left:10px; padding-right:10px; }
__lb__lang-golang old := flag.Args() new := make([]interface{}, len(old)) for i, v := range old { new[i] = v } fmt.Println(new...)
__lb__lang-php <form id="foo"> <label for="bar">A bar</label> <input id="bar" name="bar" type="text" value="" /> <input type="submit" value="Send" /> </form> <!-- The result of the search will be rendered inside this div --> <div id="result"></div>
__lb__lang-c mrj10@mjlap:~/code$ gcc -fopenmp -std=c99 -o reverse reverse.c mrj10@mjlap:~/code$ ./reverse Time: 2.000593 seconds mrj10@mjlap:~/code$ ./reverse Time: 1.938893 seconds mrj10@mjlap:~/code$ ./reverse Time: 1.936365 seconds mrj10@mjlap:~/code$ gcc -fopenmp -std=c99 -O2 -o reverse reverse.c mrj10@mjlap:~/code$ ./reverse Time: 0.942709 seconds mrj10@mjlap:~/code$ ./reverse Time: 0.991104 seconds mrj10@mjlap:~/code$ ./reverse Time: 0.947203 seconds mrj10@mjlap:~/code$ gcc -fopenmp -std=c99 -O3 -o reverse reverse.c mrj10@mjlap:~/code$ ./reverse Time: 0.922639 seconds mrj10@mjlap:~/code$ ./reverse Time: 0.892372 seconds mrj10@mjlap:~/code$ ./reverse Time: 0.891688 seconds
__lb__lang-sh if [ $ then echo script has at least 3 arguments fi
__lb__lang-php mysql_set_charset($charset); mysql_query("SET SQL_MODE= $var = mysql_real_escape_string( mysql_query(
__lb__lang-golang type MessageType int32 const ( TEXT MessageType = 0 BINARY MessageType = 1 )
__lb__lang-java public class Solution { static volatile int counter = 0; static int print = 0; public static void main(String[] args) { Thread[] ths = new Thread[4]; for (int i = 0; i < ths.length; i++) { ths[i] = new Thread(new MyRunnable(i, ths.length)); ths[i].start(); } } static class MyRunnable implements Runnable { final int thID; final int total; public MyRunnable(int id, int total) { thID = id; this.total = total; } @Override public void run() { while (true) { if (thID == counter) { System.out.println("thread " + thID + " prints " + print); print++; if (print == total) print = 0; counter++; if (counter == total) counter = 0; } else { try { Thread.sleep(30); } catch (InterruptedException e) { } } } } } }
__lb__lang-php $idList = [1, 2, 3, 4]; $stmt = $this -> db -> prepare(" SELECT `Name` FROM `User` WHERE (`ID` IN (".$this -> db -> CreateArrayBindParamNames($idList)."))"); $this -> db -> BindArrayParam($stmt, $idList); $stmt -> execute(); foreach($stmt as $row) { echo $row[ }
__lb__lang-java public String MD5(String md5) { try { java.security.MessageDigest md = java.security.MessageDigest.getInstance("MD5"); byte[] array = md.digest(md5.getBytes()); StringBuffer sb = new StringBuffer(); for (int i = 0; i < array.length; ++i) { sb.append(Integer.toHexString((array[i] & 0xFF) | 0x100).substring(1,3)); } return sb.toString(); } catch (java.security.NoSuchAlgorithmException e) { } return null; }
__lb__lang-cs new Version(System.Windows.Forms.Application.ProductVersion);
__lb__lang-c static int func1 (int a, int b) { return a + b; } static char *func2 (int a, int b, char *c) { c[0] = a % 100; c[1] = b % 50; return c; } const FuncThings FuncThingsGlobal = {func1, func2};
__lb__lang-cs try { } catch (SqlException e) { if (e.ErrorCode != NO_ROW_ERROR) { throw; } } catch (IOException e) { throw; } catch (Exception e) { throw new DAOException("Excrement occurred", e); } finally { }
__lb__lang-cs public sealed class PositiveNumberTextBox : RegexedTextBox { public PositiveNumberTextBox() : base(@"^\d*$") { } } public sealed class PositiveFloatingPointNumberTextBox : RegexedTextBox { public PositiveFloatingPointNumberTextBox() : base(@"^(\d+\" + CultureInfo.CurrentCulture.NumberFormat.NumberDecimalSeparator + @")?\d*$") { } }
__lb__lang-php "autoload": { "classmap": [ "database/seeds", "database/factories", "database","app/Helper/Helpers.php" ], "psr-4": { "App\\": "app/" }, "files": ["app/Helper/Helpers.php"] },
__lb__lang-cs DateTime bDay = new DateTime(2000, 2, 29); DateTime now = new DateTime(2009, 2, 28); MessageBox.Show(string.Format("Test {0} {1} {2}", CalculateAgeWrong1(bDay, now), CalculateAgeWrong2(bDay, now), CalculateAgeCorrect(bDay, now)));
__lb__lang-css h1.alignBtm { line-height: 3em; } h1.alignBtm span { line-height: 1.2em; vertical-align: bottom; }
__lb__lang-java String strValue = "12345"; Integer intValue = NumberUtils.toInt(strValue);
__lb__lang-java import org.apache.commons.math.random.RandomData; import org.apache.commons.math.random.RandomDataImpl; public void method() { RandomData randomData = new RandomDataImpl(); int number = randomData.nextInt(5, 10); }
__lb__lang-java List<String> lines = Files.readAllLines(Paths.get(path), encoding);
__lb__lang-cpp strcpy(char *to, char *from, size_t count) { int n = (count + 7) / 8; switch (count % 8) { case 0: do { *to = *from++; case 7: *to = *from++; case 6: *to = *from++; case 5: *to = *from++; case 4: *to = *from++; case 3: *to = *from++; case 2: *to = *from++; case 1: *to = *from++; } while (--n > 0); } }
__lb__lang-c long n; unsigned long un; printf("%ld", n); printf("%lu", un);
__lb__lang-hs $ ghc --version The Glorious Glasgow Haskell Compilation System, version 7.10.3 $ ghc -O2 -optc-O3 Main.hs $ ./Main +RTS -s 3,116,460,096 bytes allocated in the heap 385,101,600 bytes copied during GC 235,234,800 bytes maximum residency (14 sample(s)) 124,137,808 bytes maximum slop 600 MB total memory in use (0 MB lost due to fragmentation) Tot time (elapsed) Avg pause Max pause Gen 0 6558 colls, 0 par 0.238s 0.280s 0.0000s 0.0012s Gen 1 14 colls, 0 par 0.179s 0.250s 0.0179s 0.0515s INIT time 0.000s ( 0.000s elapsed) MUT time 0.652s ( 0.745s elapsed) GC time 0.417s ( 0.530s elapsed) EXIT time 0.010s ( 0.052s elapsed) Total time 1.079s ( 1.326s elapsed) %GC time 38.6% (40.0% elapsed) Alloc rate 4,780,213,353 bytes per MUT second Productivity 61.4% of total user, 49.9% of total elapsed
__lb__lang-java try { ... } catch (RepositoryException re) { someCode(); } catch (Exception e) { someCode(); }
__lb__lang-java Message message= new ObjectMapper().readValue(jsonString, Message.class);
__lb__lang-cs private void button1_Click(object sender, RoutedEventArgs e) { ChildPopUp p = new ChildPopUp (Getname) p.Show(); }
__lb__lang-cpp using namespace std; class Animal { public: virtual void MakeTypicalNoise() = 0; virtual ~Animal(){}; }; class Cat : public Animal { public: virtual void MakeTypicalNoise() { cout << "Meow!" << endl; } }; class Dog : public Animal { public: virtual void MakeTypicalNoise() { cout << "Woof!" << endl; } }; class Doberman : public Dog { public: virtual void MakeTypicalNoise() { cout << "Woo, woo, woow!"; cout << " ... "; Dog::MakeTypicalNoise(); } }; int main() { Animal* apObject[] = { new Cat(), new Dog(), new Doberman() }; const int cnAnimals = sizeof(apObject)/sizeof(Animal*); for ( int i = 0; i < cnAnimals; i++ ) { apObject[i]->MakeTypicalNoise(); } for ( int i = 0; i < cnAnimals; i++ ) { delete apObject[i]; } return 0; }
__lb__lang-php $date1 = new DateTime( $date2 = new DateTime( $days = $date2->diff($date1)->format(
__lb__lang-cs int parameter = Convert.ToInt32(Session["Id"].ToString());
__lb__lang-perl perl Build.PL ./Build destdir=$HOME install_base=$HOME ./Build destdir=$HOME install_base=$HOME install
__lb__lang-cpp void maybeModify(int* x); void hurtTheCompilersOptimizer(short size, int array[]) { for (int i = 2; i < (int)size; i++) { maybeModify(&(array[0])); array[i] += array[1]; } }
__lb__lang-java buildscript { repositories { ... jcenter() } dependencies { ... classpath ... } }
__lb__lang-c int i,value=5,array[1000]; for(i=0;i<1000;i++) array[i]=value;
__lb__lang-java private static void performanceTestStringVsStringbuffereVsStringBuilder() { int loop = 100000; long start = 0; String str = null; start = System.currentTimeMillis(); for (int i = 1; i <= loop; i++) { str += i + "test"; } System.out.println("String - " + (System.currentTimeMillis() - start) + " ms"); StringBuffer sbuffer = new StringBuffer(); start = System.currentTimeMillis(); for (int i = 1; i <= loop; i++) { sbuffer.append(i).append("test"); } System.out.println("String Buffer - " + (System.currentTimeMillis() - start) + " ms"); start = System.currentTimeMillis(); StringBuilder sbuilder = new StringBuilder(); for (int i = 1; i <= loop; i++) { sbuffer.append(i).append("test"); } System.out.println("String Builder - " + (System.currentTimeMillis() - start) + " ms"); }
__lb__lang-php public function CheckUsername($connection, $username) { try { $data = array(); $data[ $sql = "SELECT Username FROM" . $this->usersTableName . " WHERE Username = :Username"; return $this->ExecuteObject($connection, $sql, $data); } catch(Exception $e) { throw $e; } }
__lb__lang-cpp $ ./time_hash_map TR1 UNORDERED_MAP (4 byte objects, 10000000 iterations): map_grow 126.1 ns (27427396 hashes, 40000000 copies) 290.9 MB map_predict/grow 67.4 ns (10000000 hashes, 40000000 copies) 232.8 MB map_replace 22.3 ns (37427396 hashes, 40000000 copies) map_fetch 16.3 ns (37427396 hashes, 40000000 copies) map_fetch_empty 9.8 ns (10000000 hashes, 0 copies) map_remove 49.1 ns (37427396 hashes, 40000000 copies) map_toggle 86.1 ns (20000000 hashes, 40000000 copies) STANDARD MAP (4 byte objects, 10000000 iterations): map_grow 225.3 ns ( 0 hashes, 20000000 copies) 462.4 MB map_predict/grow 225.1 ns ( 0 hashes, 20000000 copies) 462.6 MB map_replace 151.2 ns ( 0 hashes, 20000000 copies) map_fetch 156.0 ns ( 0 hashes, 20000000 copies) map_fetch_empty 1.4 ns ( 0 hashes, 0 copies) map_remove 141.0 ns ( 0 hashes, 20000000 copies) map_toggle 67.3 ns ( 0 hashes, 20000000 copies)
__lb__lang-html <label><input type="checkbox" />Option 1</label> <label><input type="checkbox" />Option 2</label> <label><input type="checkbox" />Option 3</label>
__lb__lang-java public class MyClass implements Serializable{ Here is your instance variable }
__lb__lang-c { __auto_type __x = (x); __auto_type __y = (y); \ __x > __y ? __x : __y; })
__lb__lang-hs feed(f, feed(g, wrap(x))) = feed(f, feed(g, <x, "">)) = feed(f, <x, "called g. ">) = <x, "called g. called f. ">
__lb__lang-golang go build -ldflags "-X main.minversion=`date -u +.%Y%m%d.%H%M%S`" service.go
__lb__lang-sh pax> VAR=xyzzy pax> if [[ -e $VAR ]] ; then echo yes ; fi pax> VAR=/tmp pax> if [[ -e $VAR ]] ; then echo yes ; fi yes
__lb__lang-golang $ mkdir -p dir1/dir2 $ touch dir1/file1 dir1/dir2/file2 $ go run walk.go dir1 Visited: dir1 Visited: dir1/dir2 Visited: dir1/dir2/file2 Visited: dir1/file1 filepath.Walk() returned <nil>
__lb__lang-cpp constexpr int max() { return INT_MAX; } constexpr long long_max() { return 2147483647; } constexpr bool get_val() { bool res = false; return res; } constexpr int square(int x) { return x * x; } const int res = square(5); int y = getval(); int n = square(y);
__lb__lang-java import java.util.Calendar; class Demostration{ public static void main(String[]args){ Calendar calendar=Calendar.getInstance(); System.out.println(calendar.getTime()); } }
__lb__lang-cs While True: Ask a question If the answer is valid: break
__lb__lang-cs public static class RegexConvert { public static string ToAlphaNumericOnly(this string input) { Regex rgx = new Regex("[^a-zA-Z0-9]"); return rgx.Replace(input, ""); } public static string ToAlphaOnly(this string input) { Regex rgx = new Regex("[^a-zA-Z]"); return rgx.Replace(input, ""); } public static string ToNumericOnly(this string input) { Regex rgx = new Regex("[^0-9]"); return rgx.Replace(input, ""); } }
__lb__lang-java String pattern="[\\s]"; String replace=""; part="name=john age=13 year=2001"; Pattern p=Pattern.compile(pattern); Matcher m=p.matcher(part); part=m.replaceAll(replace); System.out.println(part);
__lb__lang-java public class TestFragment extends Fragment implements OnRecyclerItemClickListener<Data>{ private RecyclerView mRecyclerView; @Override public void onItemClick(View view, int position, Data item) { } @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { return inflater.inflate(R.layout.test_fragment, container, false); } @Override public void onViewCreated(View view, Bundle savedInstanceState) { mRecyclerView = view.findViewById(idOfTheRecycler); mRecyclerView .setAdapter(new CustomRecyclerAdapter(this)); }
__lb__lang-php <script> location.replace("target.html"); </script>
__lb__lang-perl my $string = "one.two.three.four"; my @count = $string =~ /\./g; print scalar @count;
__lb__lang-c typedef union { unsigned char color[4]; int new_color; } u_color;
__lb__lang-sh $ timeout --preserve-status 2 bash -c "</dev/tcp/canyouseeme.org/81"; echo $? 143
__lb__lang-sh $ docker run 3a87 ls /usr/local/bin easy_install easy_install-2.7 pip pip-2.7 virtualenv virtualenv-2.7 virtualenv-clone virtualenvwrapper.sh virtualenvwrapper_lazy.sh
__lb__lang-golang package main func main() { a := "declared and not used" b := "another declared and not used" c := 123 Use(a, b, c) }
__lb__lang-cs using System.ComponentModel; public static string GetDescription(this Enum value) { var descriptionAttribute = (DescriptionAttribute)value.GetType() .GetField(value.ToString()) .GetCustomAttributes(false) .Where(a => a is DescriptionAttribute) .FirstOrDefault(); return descriptionAttribute != null ? descriptionAttribute.Description : value.ToString(); }
__lb__lang-cs Right click on the Project -> Properties -> Security -> Enable ClickOnce Security Settings
__lb__lang-java class MyFileUtils { public static void loadFilesForFolder(final File folder, List<String> fileList){ for (final File fileEntry : folder.listFiles()) { if (fileEntry.isDirectory()) { loadFilesForFolder(fileEntry, fileList); } else { fileList.add( fileEntry.getParent() + File.separator + fileEntry.getName() ); } } } }
__lb__lang-css .header { height: 60px; top: 0; background-color: green} .body { height: calc(100vh - 110px); background-color: gray; } .footer { height: 50px; bottom: 0; }
__lb__lang-java 10.5 rounded is 11 10.499999999999998 rounded is 10 9.5 rounded is 10 9.499999999999998 rounded is 9 8.5 rounded is 9 8.499999999999998 rounded is 8 7.5 rounded is 8 7.499999999999999 rounded is 7 6.5 rounded is 7 6.499999999999999 rounded is 6 5.5 rounded is 6 5.499999999999999 rounded is 5 4.5 rounded is 5 4.499999999999999 rounded is 4 3.5 rounded is 4 3.4999999999999996 rounded is 3 2.5 rounded is 3 2.4999999999999996 rounded is 2 1.5 rounded is 2 1.4999999999999998 rounded is 1 0.5 rounded is 1 0.49999999999999994 rounded is 0
__lb__lang-hs instance (Num r, V.Vector v r, Factored m r) => Num (VT v m r) where {- VT x + VT y = VT $ V.zipWith (+) x y
__lb__lang-c /* run this program using the console pauser or add your own getch, system("pause") or input loop */ int main() { . . . getch(); return 0; }
__lb__lang-c **Direct call to qsort library function** : 164 **Naive implementation (insertion sort)** : 138 **Insertion Sort (Daniel Stutzbach)** : 85 **Insertion Sort Unrolled** : 97 **Sorting Networks (Daniel Stutzbach)** : 457 **Sorting Networks (Paul R)** : 179 **Sorting Networks 12 with Fast Swap** : 238 **Sorting Networks 12 reordered Swap** : 236 **Rank Order** : 116
__lb__lang-cs var e = new ExpandoObject(); e.position.x = 5; etc...
__lb__lang-java List<String> places = Arrays.asList(new String[] {"x", "y" });
__lb__lang-php final class DaysOfWeek extends TypedEnum { public static function Sunday() { return self::_create(0); } public static function Monday() { return self::_create(1); } public static function Tuesday() { return self::_create(2); } public static function Wednesday() { return self::_create(3); } public static function Thursday() { return self::_create(4); } public static function Friday() { return self::_create(5); } public static function Saturday() { return self::_create(6); } }
__lb__lang-css div.checkbox { position: relative; font-family: Arial; font-size: 13px; } label { position: relative; padding-left: 16px; } label::before { content :""; display: inline-block; width: 10px; height: 10px; background-color: white; border: solid 1px position: absolute; top: 1px; left: 0px; } label::after { content:""; width: 8px; height: 8px; background-color: position: absolute; left: 2px; top: 3px; display: none; } input[type=checkbox] { visibility: hidden; position: absolute; } input[type=checkbox]:checked + label::after { display: block; } input[type=checkbox]:active + label::before { background-color: }
__lb__lang-cpp MAKE_CODE_TRAIT( has_to_string, std::declval<T>().toString() )
__lb__lang-css margin: 0 auto; width: 901px; height: 100%; background-color: background-image: url(images/wrapperback.gif); color: } float: left; width: 100.00%; height: 122px; background-color: background-image: url(images/header.jpg); color: } float: left; padding-top: 20px; margin-left: 495px; width: 390px; color: }
__lb__lang-java List<String> messages = Arrays.asList("bla1", "bla2", "bla3");
__lb__lang-java String[] sampleTokensAgain = "004".split(""); System.out.println(Arrays.toString(sampleTokensAgain));
__lb__lang-cs using Microsoft.SharePoint; using Microsoft.SharePoint.Utilities; ... string strISODate = SPUtility.CreateISO8601DateTimeFromSystemDateTime(DateTime.Now)
__lb__lang-php <?php $apple = new Apple(); $apple->eat(); $fruit = new Fruit(); $fruit->eat();
__lb__lang-cs public static class CryptographyProvider { public static string EncryptString(string plainText, out string Key) { if (plainText == null || plainText.Length <= 0) throw new ArgumentNullException("plainText"); using (Aes _aesAlg = Aes.Create()) { Key = Convert.ToBase64String(_aesAlg.Key); ICryptoTransform _encryptor = _aesAlg.CreateEncryptor(_aesAlg.Key, _aesAlg.IV); using (MemoryStream _memoryStream = new MemoryStream()) { _memoryStream.Write(_aesAlg.IV, 0, 16); using (CryptoStream _cryptoStream = new CryptoStream(_memoryStream, _encryptor, CryptoStreamMode.Write)) { using (StreamWriter _streamWriter = new StreamWriter(_cryptoStream)) { _streamWriter.Write(plainText); } return Convert.ToBase64String(_memoryStream.ToArray()); } } } } public static string DecryptString(string cipherText, string Key) { if (string.IsNullOrEmpty(cipherText)) throw new ArgumentNullException("cipherText"); if (string.IsNullOrEmpty(Key)) throw new ArgumentNullException("Key"); string plaintext = null; byte[] _initialVector = new byte[16]; byte[] _Key = Convert.FromBase64String(Key); byte[] _cipherTextBytesArray = Convert.FromBase64String(cipherText); byte[] _originalString = new byte[_cipherTextBytesArray.Length - 16]; Array.Copy(_cipherTextBytesArray, 0, _initialVector, 0, _initialVector.Length); Array.Copy(_cipherTextBytesArray, 16, _originalString, 0, _cipherTextBytesArray.Length - 16); using (Aes _aesAlg = Aes.Create()) { _aesAlg.Key = _Key; _aesAlg.IV = _initialVector; ICryptoTransform decryptor = _aesAlg.CreateDecryptor(_aesAlg.Key, _aesAlg.IV); using (MemoryStream _memoryStream = new MemoryStream(_originalString)) { using (CryptoStream _cryptoStream = new CryptoStream(_memoryStream, decryptor, CryptoStreamMode.Read)) { using (StreamReader _streamReader = new StreamReader(_cryptoStream)) { plaintext = _streamReader.ReadToEnd(); } } } } return plaintext; } }
__lb__lang-cs foreach (var o in objects) { MethodInfo method = typeof(Service).GetMethod("Process"); MethodInfo generic = method.MakeGenericMethod(o.GetType()); generic.Invoke(service, new object[] { o }); }
__lb__lang-c int main() { int i=0; char *buf[10]; while(i<10) { buf[i] = (char*)calloc(1,BLOCK_SIZE); i++; } }
__lb__lang-c void main(void){ int v1 = function_1(); int v2 = function_2(); int v3 = function_3(); } int function_2(void) return 1234;
__lb__lang-java public class Outer { public class Inner {} public static class Nested {} }
__lb__lang-golang package main import ( "fmt" "os" "path/filepath" ) func main() { dirname := "." + string(filepath.Separator) d, err := os.Open(dirname) if err != nil { fmt.Println(err) os.Exit(1) } defer d.Close() fi, err := d.Readdir(-1) if err != nil { fmt.Println(err) os.Exit(1) } for _, fi := range fi { if fi.Mode().IsRegular() { fmt.Println(fi.Name(), fi.Size(), "bytes") } } }
__lb__lang-java public boolean isEquals(enumVariable) public static boolean areEqual(enumVariable, enumVariable2)
__lb__lang-java public static String readFileToString(File file) throws IOException
__lb__lang-java try (Stream<String> stream = Files.lines(Paths.get(fileName))) { stream.forEach(System.out::println); }
__lb__lang-java [C:\java_code\]java TimeIteratorVsIndexIntArray 1000000 Test A: 358,597,622 nanoseconds Test B: 269,167,681 nanoseconds B faster by 89,429,941 nanoseconds (24.438799231635727% faster) [C:\java_code\]java TimeIteratorVsIndexIntArray 1000000 Test A: 377,461,823 nanoseconds Test B: 278,694,271 nanoseconds B faster by 98,767,552 nanoseconds (25.666236154695838% faster) [C:\java_code\]java TimeIteratorVsIndexIntArray 1000000 Test A: 288,953,495 nanoseconds Test B: 207,050,523 nanoseconds B faster by 81,902,972 nanoseconds (27.844689860906513% faster) [C:\java_code\]java TimeIteratorVsIndexIntArray 1000000 Test A: 375,373,765 nanoseconds Test B: 283,813,875 nanoseconds B faster by 91,559,890 nanoseconds (23.891659337194227% faster) [C:\java_code\]java TimeIteratorVsIndexIntArray 1000000 Test A: 375,790,818 nanoseconds Test B: 220,770,915 nanoseconds B faster by 155,019,903 nanoseconds (40.75164734599769% faster) [C:\java_code\]java TimeIteratorVsIndexIntArray 1000000 Test A: 326,373,762 nanoseconds Test B: 202,555,566 nanoseconds B faster by 123,818,196 nanoseconds (37.437545972215744% faster)
__lb__lang-sh $ IN="bla@some.com;john@home.com" $ awk -F";" > [bla@some.com] > [john@home.com]
__lb__lang-c static int func1(int a, int b) { return a + b; } static int func2(int a, int b, char *c) { return c[0] + a + b; } static int func3(int a, int b, char *x) { return a + b; } static char *func4(int a, int b, char *c, int (*p)()) { if (p == func1) { p(a, b); } else if (p == func2) { p(a, b, c); } else if (p == func3) { p(a, b, c); } return c; }
__lb__lang-cs static bool ByteArrayCompare(byte[] a1, byte[] a2) { if (a1.Length != a2.Length) return false; for (int i=0; i<a1.Length; i++) if (a1[i]!=a2[i]) return false; return true; }
__lb__lang-cpp static inline void ltrim(std::string &s) { s.erase(s.begin(), std::find_if(s.begin(), s.end(), [](int ch) { return !std::isspace(ch); })); } static inline void rtrim(std::string &s) { s.erase(std::find_if(s.rbegin(), s.rend(), [](int ch) { return !std::isspace(ch); }).base(), s.end()); } static inline void trim(std::string &s) { ltrim(s); rtrim(s); } static inline std::string ltrim_copy(std::string s) { ltrim(s); return s; } static inline std::string rtrim_copy(std::string s) { rtrim(s); return s; } static inline std::string trim_copy(std::string s) { trim(s); return s; }
__lb__lang-php $page=new stdClass(); $page->name= $page->status=1;
__lb__lang-php DB::table( ->where( ->orWhere(function ($query) { $query->where( ->where( }) ->get();
__lb__lang-hs fibs = 0 : 1 : 1 : 2 : <thunk3> tail fibs = 1 : 1 : 2 : <thunk3> zipWith (+) fibs (tail fibs) = 1 : 2 : <thunk3>
__lb__lang-java public class TrialClass { public static void main(String[] args) { String temp = "004-034556"; String [] arrString = temp.split("-"); for(String splitString:arrString) { System.out.println(splitString); } } }
__lb__lang-c unsigned int reverse(register unsigned int x) { x = (((x & 0xaaaaaaaa) >> 1) | ((x & 0x55555555) << 1)); x = (((x & 0xcccccccc) >> 2) | ((x & 0x33333333) << 2)); x = (((x & 0xf0f0f0f0) >> 4) | ((x & 0x0f0f0f0f) << 4)); x = (((x & 0xff00ff00) >> 8) | ((x & 0x00ff00ff) << 8)); return((x >> 16) | (x << 16)); } int main() { unsigned int *ints = malloc(100000000*sizeof(unsigned int)); unsigned int *ints2 = malloc(100000000*sizeof(unsigned int)); for(unsigned int i = 0; i < 100000000; i++) ints[i] = rand(); unsigned int *inptr = ints; unsigned int *outptr = ints2; unsigned int *endptr = ints + 100000000; double start = omp_get_wtime(); while(inptr != endptr) { (*outptr) = reverse(*inptr); inptr++; outptr++; } double end = omp_get_wtime(); printf("Time: %f seconds\n", end-start); free(ints); free(ints2); return 0; }
__lb__lang-cs <UseIIS>True</UseIIS> <UseIISExpress>false</UseIISExpress>
__lb__lang-cpp int main ( int argc, char* argv[] ) { std::string program(argv[0]); }
__lb__lang-java public class PassByValueString { public static void main(String[] args) { new PassByValueString().caller(); } public void caller() { String value = "Nikhil"; boolean valueflag = false; String output = method(value, valueflag); /* * * */ System.out.println("output : " + output); System.out.println("value : " + value); System.out.println("valueflag : " + valueflag); } public String method(String value, boolean valueflag) { value = "Anand"; valueflag = true; return "output"; } }
__lb__lang-java Files.lines(Paths.get("input.txt")).forEach(s -> stringBuffer.append(s);
__lb__lang-php function json_validate($string) { $result = json_decode($string); switch (json_last_error()) { case JSON_ERROR_NONE: $error = break; case JSON_ERROR_DEPTH: $error = break; case JSON_ERROR_STATE_MISMATCH: $error = break; case JSON_ERROR_CTRL_CHAR: $error = break; case JSON_ERROR_SYNTAX: $error = break; case JSON_ERROR_UTF8: $error = break; case JSON_ERROR_RECURSION: $error = break; case JSON_ERROR_INF_OR_NAN: $error = break; case JSON_ERROR_UNSUPPORTED_TYPE: $error = break; default: $error = break; } if ($error !== exit($error); } return $result; }
__lb__lang-java All letters The following pattern letters are defined: Symbol Meaning Presentation Examples ------ ------- ------------ ------- G era text AD; Anno Domini; A u year year 2004; 04 y year-of-era year 2004; 04 D day-of-year number 189 M/L month-of-year number/text 7; 07; Jul; July; J d day-of-month number 10 Q/q quarter-of-year number/text 3; 03; Q3; 3rd quarter Y week-based-year year 1996; 96 w week-of-week-based-year number 27 W week-of-month number 4 E day-of-week text Tue; Tuesday; T e/c localized day-of-week number/text 2; 02; Tue; Tuesday; T F week-of-month number 3 a am-pm-of-day text PM h clock-hour-of-am-pm (1-12) number 12 K hour-of-am-pm (0-11) number 0 k clock-hour-of-am-pm (1-24) number 0 H hour-of-day (0-23) number 0 m minute-of-hour number 30 s second-of-minute number 55 S fraction-of-second fraction 978 A milli-of-day number 1234 n nano-of-second number 987654321 N nano-of-day number 1234000000 V time-zone ID zone-id America/Los_Angeles; Z; -08:30 z time-zone name zone-name Pacific Standard Time; PST O localized zone-offset offset-O GMT+8; GMT+08:00; UTC-08:00; X zone-offset x zone-offset offset-x +0000; -08; -0830; -08:30; -083015; -08:30:15; Z zone-offset offset-Z +0000; -0800; -08:00;
__lb__lang-cs public static IEnumerable<TEnum> GetEnumValues() { Type enumType = typeof(TEnum); if(!enumType.IsEnum) throw new ArgumentException("Type argument must be Enum type"); Array enumValues = Enum.GetValues(enumType); return enumValues.Cast<TEnum>(); }
__lb__lang-sh VAR=`echo -e "for i in {$RANGE_START..$RANGE_END}; do echo \\${i}; done" | bash`
__lb__lang-java List<String> newList = Stream.of(listOne, listTwo, listThree) .flatMap(x -> x.stream()) .collect(Collectors.toList());
__lb__lang-c const char *my_array[] = {"eenie","meenie","miney"};
__lb__lang-cs float[] floats = System.Array.ConvertAll(new float[16], v => 1.0f);
__lb__lang-html /** * Block Link * * A Faux block-level link. Used for when you need a block-level link with * clickable areas within it as directly nesting a tags breaks things. */ .block-link { position: relative; } .block-link a { position: relative; z-index: 1; } .block-link .block-link__overlay-link { position: static; &:before { bottom: 0; content: ""; left: 0; overflow: hidden; position: absolute; right: 0; top: 0; white-space: nowrap; z-index: 0; } &:hover, &:focus { &:before { background: rgba(255,255,0, .2); } } }
__lb__lang-c struct foo { int x; }; struct bar { int x; int y; }; struct bar b = { 1, 2}; struct foo *p = (struct foo *)&b; int z = p->x;
__lb__lang-hs instance Monoid a => Monoid (Maybe a) where mempty = Nothing mappend (Just a) (Just b) = Just (mappend a b) mappend Nothing x = x mappend x Nothing = x mappend Nothing Nothing = Nothing
__lb__lang-php print_r(array_filter($linksArray, create_function( print_r(array_filter($linksArray, function($value) { return $value !==
__lb__lang-cs private pricecheckEntities _context = new pricecheckEntities(); ... private void resetpcheckedtoFalse() { try { foreach (var product in _context.products) { product.pchecked = false; _context.products.Attach(product); _context.Entry(product).State = EntityState.Modified; } _context.SaveChanges(); } catch (Exception extofException) { MessageBox.Show(extofException.ToString()); } productsDataGrid.Items.Refresh(); }
__lb__lang-html <div class="outer"> <div class="inner"><span style=" margin: auto;">Active Tasks</span></div> </div>
__lb__lang-css .btcf:after { content:""; display:block; clear:both; }
__lb__lang-php $myDateTime = DateTime::createFromFormat( $newDateString = $myDateTime->format(
__lb__lang-hs showInt n r | n < 0 = error "Numeric.showInt: can | otherwise = go n r where go n r = case quotRem n 10 of { (n case chr (ord_0 + fromIntegral d) of { C let r in if n }}
__lb__lang-cs string source = "/once/upon/a/time/"; int count = 0, n = 0; while ((n = source.IndexOf(
__lb__lang-perl echo a b cX | sed -r "s/(a\sb[[:space:]]c[^[:space:]])/Result: \1/" Result: a b cX
__lb__lang-php public function __construct() { $parameters = func_get_args(); ... } $o = new MyClass(
__lb__lang-hs foldl :: (a -> b -> a) -> a -> [b] -> a foldl f v xs = foldr (\x g -> (\a -> g (f v x))) id xs v
__lb__lang-golang package main import "os" import "fmt" import "net/http" import "io/ioutil" import "encoding/json" type tracks struct { Toptracks []toptracks_info } type toptracks_info struct { Track []track_info Attr []attr_info } type track_info struct { Name string Duration string Listeners string Mbid string Url string Streamable []streamable_info Artist []artist_info Attr []track_attr_info } type attr_info struct { Country string Page string PerPage string TotalPages string Total string } type streamable_info struct { Text string Fulltrack string } type artist_info struct { Name string Mbid string Url string } type track_attr_info struct { Rank string } func get_content() { url := "http: res, err := http.Get(url) if err != nil { panic(err.Error()) } body, err := ioutil.ReadAll(res.Body) if err != nil { panic(err.Error()) } var data tracks json.Unmarshal(body, &data) fmt.Printf("Results: %v\n", data) os.Exit(0) } func main() { get_content() }
__lb__lang-golang export GOPATH=~/ go get github.com/whateveruser/whateverrepo cd ~/src/github.com/whateveruser/whateverrepo git tag -l git checkout tags/v0.0.2 go run whateverpackage/main.go
__lb__lang-cs private static void Main(string[] args) { if (NeedsToRunAsAdmin() && !IsRunAsAdmin()) { ProcessStartInfo proc = new ProcessStartInfo(); proc.UseShellExecute = true; proc.WorkingDirectory = Environment.CurrentDirectory; proc.FileName = Assembly.GetEntryAssembly().CodeBase; foreach (string arg in args) { proc.Arguments += String.Format("\"{0}\" ", arg); } proc.Verb = "runas"; try { Process.Start(proc); } catch { Console.WriteLine("This application requires elevated credentials in order to operate correctly!"); } } else { } } private static bool IsRunAsAdmin() { WindowsIdentity id = WindowsIdentity.GetCurrent(); WindowsPrincipal principal = new WindowsPrincipal(id); return principal.IsInRole(WindowsBuiltInRole.Administrator); }
__lb__lang-java List < UserEntity > vList= new ArrayList<>(); vList= service(...); Set<UserEntity> vSet= vList.stream().collect(Collectors.toSet());
__lb__lang-cs string.Format(@"<script> function test(x) { return x * {0} } </script>", aMagicValue) string.Format(@"<script> function test(x) {{ return x * {0} }} </script>", aMagicValue)
__lb__lang-cs List<thing> myThings; string tidyString; foreach (var thing in myThings) { tidyString += string.format("Thing {0} is a {1}", thing.id, thing.name) + GetSeparator(myThings, thing); }
__lb__lang-golang package main import ( "github.com/davecgh/go-spew/spew" ) type Project struct { Id int64 `json:"project_id"` Title string `json:"title"` Name string `json:"name"` Data string `json:"data"` Commits string `json:"commits"` } func main() { o := Project{Name: "hello", Title: "world"} spew.Dump(o) }
__lb__lang-css display: inline-block; position: relative; width: 50%; } margin-top: 75%; } position: absolute; top: 0; bottom: 0; left: 0; right: 0; background-color: silver }
__lb__lang-java double a = DoubleRounder.round(2.0/3.0, 3); double b = DoubleRounder.round(2.0/3.0, 3, RoundingMode.DOWN); double c = DoubleRounder.round(1000.0d, 17); double d = DoubleRounder.round(90080070060.1d, 9); System.out.println(a); System.out.println(b); System.out.println(c); System.out.println(d);
__lb__lang-cs try { WebId = new Guid(queryString["web"]); } catch (FormatException) { WebId = Guid.Empty; } catch (OverflowException) { WebId = Guid.Empty; }
__lb__lang-cs public static class StringExtensions { public static Stream ToStream(this string s) { return s.ToStream(Encoding.UTF8); } public static Stream ToStream(this string s, Encoding encoding) { return new MemoryStream(encoding.GetBytes(s ?? "")); } }
__lb__lang-cpp +---+---+---+---+---+---+---+ connect_four: | | | | | | | | +---+---+---+---+---+---+---+ | | | | | | | | +---+---+---+---+---+---+---+ | | | | | | | | +---+---+---+---+---+---+---+ | | | | | | | | +---+---+---+---+---+---+---+ | | | | | | | | +---+---+---+---+---+---+---+ | | | | | | | | +---+---+---+---+---+---+---+
__lb__lang-golang n := NetworkInterface{ Gateway : "foo" } json.Marshal(n)
__lb__lang-cs class A { public readonly int Id; public A(int i) { Id = i; } }
__lb__lang-cpp template<typename Collection> RangePrinter<typename Collection::const_iterator> rangePrinter ( const Collection& coll, const char * delim=",", const char * open="[", const char * close="]") { return RangePrinter< typename Collection::const_iterator > ( coll.begin(), coll.end(), delim, open, close ); }
__lb__lang-sh git fetch origin git log HEAD..origin/master --oneline
__lb__lang-golang package main import ( "flag" "fmt" "os" "strconv" ) func main() { flag.Parse() s := flag.Arg(0) i, err := strconv.Atoi(s) if err != nil { fmt.Println(err) os.Exit(2) } fmt.Println(s, i) }
__lb__lang-c int n = (count+3)/4; switch (count % 4) { do { case 0: *to = *from++; case 3: *to = *from++; case 2: *to = *from++; case 1: *to = *from++; } while (--n > 0); }
__lb__lang-hs -- This is an error... but let let a = runST $ newSTRef (15 :: Int) b = runST $ writeSTRef a 20 c = runST $ readSTRef a in b `seq` c
__lb__lang-cs public static void CopyStream(Stream input, Stream output) { byte[] buffer = new byte[8 * 1024]; int len; while ( (len = input.Read(buffer, 0, buffer.Length)) > 0) { output.Write(buffer, 0, len); } } public static void WriteFile(string fileName, Stream inputStream) { string path = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location); if (!path.EndsWith(@"\")) path += @"\"; if (File.Exists(Path.Combine(path, fileName))) File.Delete(Path.Combine(path, fileName)); using (FileStream fs = new FileStream(Path.Combine(path, fileName), FileMode.CreateNew, FileAccess.Write) { CopyStream(inputStream, fs); } inputStream.Close(); inputStream.Flush(); }
__lb__lang-c int random(int range); int main(void) { printf("%d", random(10)); return 0; } int random(int range) { struct time t; int r; gettime(&t); r = t.ti_sec % range; return r; }
__lb__lang-perl my %hash=("1"=>undef); print "exists:".exists($hash{"1"})."\n"; print "defined:".defined($hash{"1"})."\n";
__lb__lang-java MainClass.class.getProtectionDomain().getCodeSource().getLocation().getFile();
__lb__lang-cs bool isPowerOfTwo(int x_) { register int bitpos, bitpos2; asm ("bsrl %1,%0": "+r" (bitpos):"rm" (x_)); asm ("bsfl %1,%0": "+r" (bitpos2):"rm" (x_)); return bitpos > 0 && bitpos == bitpos2; }
__lb__lang-cpp struct MyDel { static const pretty_print::delimiters_values<char> values; }; const pretty_print::delimiters_values<char> MyDel::values = { "<", "; ", ">" };
__lb__lang-java List<String> newList = ListUtils.union(list1, list2);
__lb__lang-php $json_string = $jsondata = file_get_contents($json_string); $obj = json_decode($jsondata); print_r($obj->Result); foreach($obj->Result as $value){ echo $value->id; }
__lb__lang-cs customerList = Task.Run<List<Customer>>(() => { return GetCustomers(); }).Result;
__lb__lang-php $ch = curl_init( $fp = fopen( curl_setopt($ch, CURLOPT_FILE, $fp); curl_setopt($ch, CURLOPT_HEADER, 0); curl_exec($ch); curl_close($ch); fclose($fp);
__lb__lang-java public static final String[] VALUES = new String[] {"AB","BC","CD","AE"};
__lb__lang-golang package main import ( "fmt" "io/ioutil" "log" ) func main() { files, err := ioutil.ReadDir("./") if err != nil { log.Fatal(err) } for _, f := range files { fmt.Println(f.Name()) } }
__lb__lang-cs double unixTimeInMilliseconds = timeToConvert.Subtract(unixEpoch).TotalMilliseconds;
__lb__lang-css width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; z-index: 0; } .stretch { width:100%; height:100%; }
__lb__lang-php $duration = 1; $converted = [ ]; $result = ltrim( sprintf( if( $result ==
__lb__lang-sh rreadlink() ( target=$1 fname= targetDir= CDPATH= { \unalias command; \unset -f command; } >/dev/null 2>&1 [ -n "$ZSH_VERSION" ] && options[POSIX_BUILTINS]=on while :; do [ -L "$target" ] || [ -e "$target" ] || { command printf command cd "$(command dirname -- "$target")" fname=$(command basename -- "$target") [ "$fname" = if [ -L "$fname" ]; then target=$(command ls -l "$fname") target=${target continue fi break done targetDir=$(command pwd -P) if [ "$fname" = command printf elif [ "$fname" = command printf else command printf fi ) rreadlink "$@"
__lb__lang-perl die "You can only add two numbers\n" if (not add(3, -2)); die "You can only add two numbers\n" if (not add("cow", "dog")); die "You can only add two numbers\n" if (not add(3, -3));
__lb__lang-hs f x | cond1 x = a | cond2 x = g a | otherwise = f (h x a) where a = w x f x = let a = w x in case () of _ | cond1 x = a | cond2 x = g a | otherwise = f (h x a)
__lb__lang-sh realpath() { for f in "$@"; do echo ${f}(:A); done }
__lb__lang-java public static void main(String[] args) throws IOException{ File[] files = new File(args[0].replace("\\", "\\\\")).listFiles(new FilenameFilter() { @Override public boolean accept(File dir, String name) { return name.endsWith(".txt"); } }); ArrayList<String> filedir = new ArrayList<String>(); String FILE_TEST = null; for (i=0; i<files.length; i++){ filedir.add(files[i].toString()); CSV_FILE_TEST=filedir.get(i) try(Reader testreader = Files.newBufferedReader(Paths.get(FILE_TEST)); ){ }}}
__lb__lang-c typedef EFI_STATUS (EFIAPI *EFI_BLOCK_READ)( IN EFI_BLOCK_IO_PROTOCOL *This, IN UINT32 MediaId, IN EFI_LBA Lba, IN UINTN BufferSize, OUT VOID *Buffer ); struct _EFI_BLOCK_IO_PROTOCOL { UINT64 Revision; EFI_BLOCK_IO_MEDIA *Media; EFI_BLOCK_RESET Reset; EFI_BLOCK_READ ReadBlocks; EFI_BLOCK_WRITE WriteBlocks; EFI_BLOCK_FLUSH FlushBlocks; };
__lb__lang-java export JAVA_HOME=YOUR_JAVA_PATH/Contents/Home export PATH=$JAVA_HOME/bin:$PATH
__lb__lang-golang for i := 0; i < len(n.Attr); i++ { if n.Attr[i].Key == "href" { n.Attr[i].Val = "something" } }
__lb__lang-java public static <T> T[] toArray(final List<T> obj) { if (obj == null || obj.isEmpty()) { return null; } final T t = obj.get(0); final T[] res = (T[]) Array.newInstance(t.getClass(), obj.size()); for (int i = 0; i < obj.size(); i++) { res[i] = obj.get(i); } return res; }
__lb__lang-cpp switch (val) { case VAL: int newVal = 42; break; case ANOTHER_VAL: ... break; }
__lb__lang-sh git diff --shortstat `git hash-object -t tree /dev/null`
__lb__lang-java WeakReference weakWidget = new WeakReference(widget);
__lb__lang-perl Index: 0, Element: 1111 Index: 1, Element: 2222 Index: 2, Element: 3333
__lb__lang-sh DESTINATIONPATH[0]="xxx/yyy" DESTINATIONPATH[1]="aaa/bbb" .. DESTINATIONPATH[5]="MainLine/USER" NumberOfDestinations=6 for (( i=0; i<NumberOfDestinations; i++)) do cp SourcePath/fileName.ext ${DESTINATIONPATH[$i]} done exit
__lb__lang-hs any :: (a -> Bool) -> [a] -> Bool any f = (foldr (||) False) . (map f)
__lb__lang-java creating bean B: com.xxx.B@cd5f8b creating bean C: com.xxx.C@15ac3c9 creating bean A: com.yyy.A@ec4a87 setting A.bbb with com.xxx.B@cd5f8b setting A.ccc with com.xxx.C@15ac3c9
__lb__lang-golang package main import ( "bufio" "fmt" "log" "os" ) func readLines(path string) ([]string, error) { file, err := os.Open(path) if err != nil { return nil, err } defer file.Close() var lines []string scanner := bufio.NewScanner(file) for scanner.Scan() { lines = append(lines, scanner.Text()) } return lines, scanner.Err() } func writeLines(lines []string, path string) error { file, err := os.Create(path) if err != nil { return err } defer file.Close() w := bufio.NewWriter(file) for _, line := range lines { fmt.Fprintln(w, line) } return w.Flush() } func main() { lines, err := readLines("foo.in.txt") if err != nil { log.Fatalf("readLines: %s", err) } for i, line := range lines { fmt.Println(i, line) } if err := writeLines(lines, "foo.out.txt"); err != nil { log.Fatalf("writeLines: %s", err) } }
__lb__lang-cs List<MyEnum> result = Utils.GetEnumValues<MyEnum>();
__lb__lang-css .input-file { position: relative; margin: 60px 60px 0 } .input-file .input-group-addon { border: 0px; padding: 0px; } .input-file .input-group-addon .btn { border-radius: 0 4px 4px 0 } .input-file .input-group-addon input { cursor: pointer; position:absolute; width: 72px; z-index:2;top:0;right:0;filter: alpha(opacity=0);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";opacity:0; background-color:transparent; color:transparent; }
__lb__lang-php <?php function authRedirect($get_auth_level, $required_level, $if_fail_link = “www.example.com/index.php”){ if($get_auth_level != $required_level){ header(location : $if_fail_link); return false; exit(); }else{ return true; } } . . .
__lb__lang-c int bit_reverse(int w, int bits) { int r = 0; for (int i = 0; i < bits; i++) { int bit = (w & (1 << i)) >> i; r |= bit << (bits - i - 1); } return r; }
__lb__lang-c /* Undefined behavior: already defined in main. * Binutils 2.24 gives an error and refuses to link. * https: */ /*void f() { puts("a f"); }*/ void f(void); static void sf() { puts("a sf"); } void a() { f(); sf(); }
__lb__lang-java Map<String, Object> info = Map.of("age", 27, "major", "cs");
__lb__lang-java public class TestPropertyOverride { public static class A { public int i = 0; public void add() { i++; } public int getI() { return i; } } public static class B extends A { public int i = 2; @Override public void add() { i = i + 2; } @Override public int getI() { return i; } } public static void main(String[] args) { A a = new B(); System.out.println(a.i); a.add(); System.out.println(a.i); System.out.println(a.getI()); } }
__lb__lang-php $date1= $date2= echo getYearDifference ($date1,$date2); function getYearDifference($date1=strtotime($date1),$date2=strtotime($date2)){ $year = 0; while($date2 > $date1 = strtotime( ++$year; } return $year; }
__lb__lang-java import static org.mockito.Mockito.when; import static org.mockito.AdditionalAnswers.returnsFirstArg; when(myMock.myFunction(anyString())).then(returnsFirstArg());
__lb__lang-sh repo forall -c repo forall -c " " repo forall -c repo forall -c "
__lb__lang-java public static int parseIntFromTo ( char[] digitChars, int offset, int to ) { int num = digitChars[ offset ] - if ( ++offset < to ) { num = ( num * 10 ) + ( digitChars[ offset ] - if ( ++offset < to ) { num = ( num * 10 ) + ( digitChars[ offset ] - if ( ++offset < to ) { num = ( num * 10 ) + ( digitChars[ offset ] - if ( ++offset < to ) { num = ( num * 10 ) + ( digitChars[ offset ] - if ( ++offset < to ) { num = ( num * 10 ) + ( digitChars[ offset ] - if ( ++offset < to ) { num = ( num * 10 ) + ( digitChars[ offset ] - if ( ++offset < to ) { num = ( num * 10 ) + ( digitChars[ offset ] - if ( ++offset < to ) { num = ( num * 10 ) + ( digitChars[ offset ] - } } } } } } } } return num; }
__lb__lang-cs public static void Main() { int test = MyCSharpWrapperMethod(TestEnum.Test1); Debug.Assert(test == 1); } public static int MyCSharpWrapperMethod(TestEnum customFlag) { return MyCPlusPlusMethod(customFlag.GetValue<int>()); } public static int MyCPlusPlusMethod(int customFlag) { return customFlag; } public enum TestEnum { Test1 = 1, Test2 = 2, Test3 = 3 } } public static class EnumExtensions { public static T GetValue<T>(this Enum enumeration) { T result = default(T); try { result = (T)Convert.ChangeType(enumeration, typeof(T)); } catch (Exception ex) { Debug.Assert(false); Debug.WriteLine(ex); } return result; } }
__lb__lang-hs int compute_sum_of_squares (int min, int max) { if (min >= max) return 0; else return min * min + compute_sum_of_squares(min + 1, max); }
__lb__lang-php $messages = [312, 401, 1599, 3, 6]; $messages = array_reject_value($messages, 401);
__lb__lang-php $index = 0; foreach($data as $key=>$val) { echo "Index is $index\n"; $index++; }
__lb__lang-cs namespace MyNamespace { using System; using MyAlias = System.DateTime; class MyClass { } }
__lb__lang-php /** * Generating string * @param $size * @return string */ function Uniwur_string($size){ $text = md5(uniqid(rand(), TRUE)); RETURN substr($text, 0, $size); }
__lb__lang-sh shortopts="hvd:c::s::L:D" longopts="help,version,directory:,client::,server::,load:,delete" opts=$(posix_getopt "$shortopts" "$longopts" "$@") if [ $? -eq 0 ]; then eval "set -- ${opts}" while [ $ case "$1" in ( -- ) shift; break;; ( -h|--help ) help=1; shift; break;; ( -v|--version ) version_help=1; shift; break;; ( -d|--directory ) dir=$2; shift 2;; ( -c|--client ) useclient=1; client=$2; shift 2;; ( -s|--server ) startserver=1; server_name=$2; shift 2;; ( -L|--load ) load=$2; shift 2;; ( -D|--delete ) delete=1; shift;; esac done else shorthelp=1 fi
__lb__lang-java public static <T> T[] newArray(Class<T[]> type, int size) { return type.cast(Array.newInstance(type.getComponentType(), size)); }
__lb__lang-sh echo this file: "$BASH_SOURCE" echo this dir: "$(dirname "$BASH_SOURCE")"
__lb__lang-hs (flip run) 34 (modify (+ 1) >> gets (* 12) >>= (\ n -> modify (+ 7) >> return (show n) ) )
__lb__lang-cpp class MyClass { ... virtual void DoSomething(int,int,int,int,int); }; void Foo(const MyClass & bar) { ... bar.DoSomething(i1,i2,i3,i4,i5); } MyClass * GetInstance() { if (somecondition) return NULL; ... } MyClass * p = GetInstance(); Foo(*p);
__lb__lang-sh $ ps -f <PID> UID PID PPID C STIME TTY STAT TIME CMD <UID> <PID> 1 0 11:16 ? S 0:00 /bin/bash ./loop.sh $ /usr/bin/lsof -p <PID> ... loop.sh <PID> truey 0u CHR 136,36 38 /dev/pts/36 (deleted) loop.sh <PID> truey 1u REG 0,26 1127 15008411 /home/truey/loop.out loop.sh <PID> truey 2u CHR 136,36 38 /dev/pts/36 (deleted)
__lb__lang-java System > Advanced system setting > Environment Variables
__lb__lang-sh ------------ | tail | |----------| | | top | ------------
__lb__lang-php if ( ! function_exists( { function word_limiter($str, $limit = 100, $end_char = { if (trim($str) == { return $str; } preg_match( if (strlen($str) == strlen($matches[0])) { $end_char = } return rtrim($matches[0]).$end_char; } }
__lb__lang-php <?php $arr = array( print_r(array_filter($arr)); print_r(array_filter($arr,
__lb__lang-cs [HttpPost] public ActionResult Index(HttpPostedFileBase upload) { if (ModelState.IsValid) { if (upload != null && upload.ContentLength > 0) { if (upload.FileName.EndsWith(".csv") || upload.FileName.EndsWith(".CSV")) { ViewBag.Result = "Correct File Uploaded"; } } } return View(); }
__lb__lang-cpp std::vector<int>&& return_vector(void) { std::vector<int> tmp {1,2,3,4,5}; return std::move(tmp); } std::vector<int> &&rval_ref = return_vector();
__lb__lang-cpp int main() { redi::ipstream proc("./some_command", redi::pstreams::pstdout | redi::pstreams::pstderr); std::string line; while (std::getline(proc.out(), line)) std::cout << "stdout: " << line << while (std::getline(proc.err(), line)) std::cout << "stderr: " << line << }
__lb__lang-java Stream.of("A", "B", "C", "D").collect(Collectors.toCollection(HashSet::new));
__lb__lang-java IntentMailBox.content.add(level); Intent intent = new Intent(LevelsActivity.this, LevelActivity.class); startActivity(intent);
__lb__lang-cs PossibleOptions opt = PossibleOptions.OptionOneTwoAndThree if( opt.IsSet( PossibleOptions.OptionOne ) ) { }
__lb__lang-sh text="this is line one this is line two this is line three" echo "$text" > filename
__lb__lang-css { display:block; width:100%; height:95vh !important; overflow:hidden; } { float:left; width:100%; display:block; } { float:left; width:100%; height:100%; display:block; overflow:scroll; }
__lb__lang-php <?php $data = ["1","2","3","4","5"]; echo json_encode($data, JSON_NUMERIC_CHECK); ?>
__lb__lang-cpp void inner(int &, int &); void inner(int &&, int &&);
__lb__lang-cs { "name":"John", "age":31, "city":"New York", "Childs":[ { "name":"Jim", "age":11 }, { "name":"Tim", "age":9 } ] }
__lb__lang-cs using System.Runtime.Remoting.Metadata.W3cXsd2001; public static byte[] GetStringToBytes(string value) { SoapHexBinary shb = SoapHexBinary.Parse(value); return shb.Value; } public static string GetBytesToString(byte[] value) { SoapHexBinary shb = new SoapHexBinary(value); return shb.ToString(); }
__lb__lang-php foreach ($array as $key => $value) { if ($value === end($array)) { echo "LAST ELEMENT!"; } }
__lb__lang-java boolean atLeastTwo(boolean a, boolean b, boolean c) { if (a) { return b||c; } else { return b&&C; }
__lb__lang-cs <requestedExecutionLevel level="asInvoker" uiAccess="false" />
__lb__lang-golang package main import ( "encoding/json" "fmt" ) type Object struct { Foo map[string]map[string]string `json:"foo"` More string `json:"more"` } func main(){ someJSONString := []byte(`{"foo":{ "bar": "1", "baz": "2" }, "more": "text"}`) var obj Object err := json.Unmarshal(someJSONString, &obj) if err != nil{ fmt.Println(err) } fmt.Println("jsonObj", obj) }
__lb__lang-java package com.example.mail; import java.util.Properties; import javax.mail.Message; import javax.mail.MessagingException; import javax.mail.PasswordAuthentication; import javax.mail.Session; import javax.mail.Transport; import javax.mail.internet.InternetAddress; import javax.mail.internet.MimeMessage; public class SendMailTLS { public static void main(String[] args) { final String username = "username@gmail.com"; final String password = "password"; Properties props = new Properties(); props.put("mail.smtp.auth", "true"); props.put("mail.smtp.starttls.enable", "true"); props.put("mail.smtp.host", "smtp.gmail.com"); props.put("mail.smtp.port", "587"); Session session = Session.getInstance(props, new javax.mail.Authenticator() { protected PasswordAuthentication getPasswordAuthentication() { return new PasswordAuthentication("username", "password"); } }); try { Message message = new MimeMessage(session); message.setFrom(new InternetAddress("from-email@gmail.com")); message.setRecipients(Message.RecipientType.TO, InternetAddress.parse("to-email@gmail.com")); message.setSubject("Testing Subject"); message.setText("Dear Mail Crawler," + "\n\n No spam to my email, please!"); Transport.send(message); System.out.println("Done"); } catch (MessagingException e) { throw new RuntimeException(e); } } }
__lb__lang-php /** * Delete a file or recursively delete a directory * * @param string $str Path to file or directory */ function recursiveDelete($str) { if (is_file($str)) { return @unlink($str); } elseif (is_dir($str)) { $scan = glob(rtrim($str, foreach($scan as $index=>$path) { recursiveDelete($path); } return @rmdir($str); } }
__lb__lang-php class Database { protected $_conn; public function __construct($connection) { $this->_conn = $connection; } public function ExecuteObject($sql, $data) { } } abstract class Model { protected $_db; public function __construct(Database $db) { $this->_db = $db; } } class User extends Model { public function CheckUsername($username) { $sql = "SELECT Username FROM" . $this->usersTableName . " WHERE ..."; return $this->_db->ExecuteObject($sql, $data); } } $db = new Database($conn); $model = new User($db); $model->CheckUsername(
__lb__lang-java public final class Foo implements Serializable { private static final long serialVersionUID = 1L; private static class FooLoader { private static final Foo INSTANCE = new Foo(); } public static Foo getInstance() { return FooLoader.INSTANCE; } @SuppressWarnings("unused") private Foo readResolve() { return FooLoader.INSTANCE; } }
__lb__lang-cpp int main(int argc, char **argv) { typedef double (array5k_t)[5000]; array5k_t *array5k = new array5k_t[5000]; array5k[4999][4999] = 10; printf("array5k[4999][4999] == %f\n", array5k[4999][4999]); return 0; }
__lb__lang-sh $ ls -l -rw-r--r--@ 1 root wheel my.txt -rw-r--r--@ 1 root wheel files.txt -rw-r--r--@ 1 root wheel here.txt
__lb__lang-sh $ ./cronjob_creator.sh $ crontab -l $ */10 * * * * echo "this is a test" > export_file
__lb__lang-php $headers = array("From from@example.com", "Reply To: replyto@example.com", "X-Mailer: "PHP"/" . PHP_VERSION );
__lb__lang-hs (1 + 1, 2 + 2) -- the outermost part is the data constructor (,) \x -> 2 + 2 -- the outermost part is a lambda abstraction
__lb__lang-css display: flex; justify-content: space-between; background-color: lightyellow; } .box { height: 50px; width: 75px; background-color: springgreen; } .box1 { width: 100px; } .box3 { width: 200px; } text-align: center; margin-bottom: 5px; } background-color: aqua; padding: 2px; }
__lb__lang-css .wrapper { width: 940px; margin: 0 auto; position: relative; } .fixed-wrapper { width: 220px; position: absolute; top: 0; left: -240px; } .fixed { width: 220px; position: fixed; /* Do not set top / left! */ }
__lb__lang-java List<String> l1 = Lists.newArrayList(anotherListOrCollection); List<String> l2 = Lists.newArrayList(aStringArray); List<String> l3 = Lists.newArrayList("or", "string", "elements");
__lb__lang-java List<String> l1 = Collections.unmodifiableList(Arrays.asList(anArrayOfElements)); List<String> l2 = Collections.unmodifiableList(Arrays.asList("element1", "element2"));
__lb__lang-cs [DllImport( "advapi32.dll")] private static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword, int dwLogonType, int dwLogonProvider, out int phToken); [DllImport("Kernel32.dll")] private static extern int GetLastError(); public static bool LogOnXP(String sDomain, String sUser, String sPassword) { int token1, ret; int attmpts = 0; bool LoggedOn = false; while (!LoggedOn && attmpts < 2) { LoggedOn= LogonUser(sUser, sDomain, sPassword, 3, 0, out token1); if (LoggedOn) return (true); else { switch (ret = GetLastError()) { case (126): ; if (attmpts++ > 2) throw new LogonException( "Specified module could not be found. error code: " + ret.ToString()); break; case (1314): throw new LogonException( "Specified module could not be found. error code: " + ret.ToString()); case (1326): return false; default: throw new LogonException( "Unexpected Logon Failure. Contact Administrator"); } } } return(false); }
__lb__lang-cs foreach (var s in strings) { query = query.Where(i => i.Prop == s); ... }
__lb__lang-java import MyFileUtils; List<String> fileList = new ArrayList<String>(); final File folder = new File("/home/you/Desktop"); MyFileUtils.loadFilesForFolder(folder, fileList); for (String fileName : fileList){ System.out.println(fileName); }
__lb__lang-c char text[] = "Lets go fishing in stead of sitting on our but !!"; size_t line = 2337200120702199116; printf("number: %I64d\n",*(size_t*)&text); printf("text: %s\n",*(char(*)[])&line);
__lb__lang-java package io; import java.io.File; import java.util.Scanner; public class ReadFromFileUsingScanner { public static void main(String[] args) throws Exception { File file = new File("C:\\Users\\pankaj\\Desktop\\test.java"); Scanner sc = new Scanner(file); while(sc.hasNextLine()){ System.out.println(sc.nextLine()); } } }
__lb__lang-hs divisors :: Integral t => t -> [t] divisors n = filter (`divides` n) [2 .. n - 1] divides :: Integral t => t -> t -> Bool (`divides` n) = (== 0) . (n `rem`)
__lb__lang-cs MyClass instance; try { instance = ... } catch(Exception1 e) { Reset(instance); } catch(Exception2 e) { Reset(instance); } catch(Exception) { throw; } void Reset(MyClass instance) { }
__lb__lang-perl use constant MYENUM => qw(ZERO ONE TWO THREE FOUR); BEGIN { eval "use constant (MYENUM)[$_] => $_;" foreach 0..(MYENUM)-1; }
__lb__lang-cpp using namespace std; int main() { string name = "John"; int age = 21; string answer1 = ""; string s1=to_string(age); answer1 = name + s1; cout << answer1 << endl; ostringstream s2; s2 << age; string s3 = s2.str(); string answer2 = ""; answer2 = name + s3; cout << answer2 << endl; return 0; }
__lb__lang-cs string localVar = "dynamic"; string templateString = $@"<h2>{0}</h2><div>this is my {localVar} template using a {{{{custom tag}}}}</div>"; string result = string.Format(templateString, "String Interpolation");
__lb__lang-cs var files = $(" if (files.length > 0) { data.append("filekey", files[0]);} $.ajax({ url: data: data, dataType: contentType: false, success: function (data) { var response=data.JsonData; }, error: function (er) { } });
__lb__lang-cs class OneAtATimePlease { static Mutex mutex = new Mutex (false, "oreilly.com OneAtATimeDemo"); static void Main() { if (!mutex.WaitOne(TimeSpan.FromSeconds (5), false)) { Console.WriteLine("Another instance of the app is running. Bye!"); return; } try { Console.WriteLine("Running - press Enter to exit"); Console.ReadLine(); } finally { mutex.ReleaseMutex(); } } }
__lb__lang-java try { } catch(Exception e) { StackTraceElement[] traceElements = e.getStackTrace(); }
__lb__lang-sh CLIENTSCRIPT="foo" CLIENTSCRIPT2="hello" CLIENTFILE="bar"
__lb__lang-sh pax> false | true | false; echo ${PIPESTATUS[*]} 1 0 1
__lb__lang-golang n := int64(32) str := strconv.FormatInt(n, 10) fmt.Println(str)
__lb__lang-php <?php namespace App\Providers; use Illuminate\Support\ServiceProvider; class HelperServiceProvider extends ServiceProvider { /** * Bootstrap the application services. * * @return void */ public function boot() { // } /** * Register the application services. * * @return void */ public function register() { foreach (glob(app_path(). require_once($filename); } } }
__lb__lang-cs public static class StreamHelpers { public static byte[] ReadFully(this Stream input) { using (MemoryStream ms = new MemoryStream()) { input.CopyTo(ms); return ms.ToArray(); } } }
__lb__lang-cs foreach (var item in tempGroupOfFiles) { var itemToUpdate = item; if (itemToUpdate != null) { itemToUpdate.FileStatusID = 8; itemToUpdate.LastModifiedDate = DateTime.Now; } Entities.SaveChanges(); }
__lb__lang-java @Component public class UserListerDB implements UserLister { public List<User> getUsers() { } }
__lb__lang-php $path = $_FILES[ $ext = pathinfo($path, PATHINFO_EXTENSION);
__lb__lang-c printf("%d %x %o\n", 10, 10, 10); print("%b\n", 10);
__lb__lang-java public SomeValue calculateSomeValueUsingSophisticatedLogic(Predicate predicate) { try { Result1 result1 = performSomeCalculation(predicate); Result2 result2 = performSomeOtherCalculation(result1.getSomeProperty()); Result3 result3 = performThirdCalculation(result2.getSomeProperty()); Result4 result4 = performLastCalculation(result3.getSomeProperty()); return result4.getSomeProperty(); } catch (NullPointerException e) { return null; } } public SomeValue calculateSomeValueUsingSophisticatedLogic(Predicate predicate) { SomeValue result = null; if (predicate != null) { Result1 result1 = performSomeCalculation(predicate); if (result1 != null && result1.getSomeProperty() != null) { Result2 result2 = performSomeOtherCalculation(result1.getSomeProperty()); if (result2 != null && result2.getSomeProperty() != null) { Result3 result3 = performThirdCalculation(result2.getSomeProperty()); if (result3 != null && result3.getSomeProperty() != null) { Result4 result4 = performLastCalculation(result3.getSomeProperty()); if (result4 != null) { result = result4.getSomeProperty(); } } } } } return result; }
__lb__lang-cs var x = (IAsyncResult)task; task.Start(); x.AsyncWaitHandle.WaitOne();
__lb__lang-sh if [ -d t ]; then if [ -L t ]; then rm t else rmdir t fi fi
__lb__lang-php <?php $my_file = @file ( die ("Failed opening file: error was $value = @$cache[$key]; ?>
__lb__lang-html <div class="container"> <div class="center">Centered div with left aligned text.</div> </div>
__lb__lang-java public class MyAdapter extends RecyclerView.Adapter<SitesListAdapter.ViewHolder> { ... private List<MyPojo> mMyPojos; private static OnItemClickListener mOnItemClickListener; ... public interface OnItemClickListener { public void onItemClick(MyPojo pojo); } ... public void setOnItemClickListener(OnItemClickListener onItemClickListener){ mOnItemClickListener = onItemClickListener; } ...
__lb__lang-php F1 = Fatal error: Call to undefined function array_key_last() in Command line code on line 1 F2 = Fatal error: Uncaught Error: Call to undefined function array_key_last() in Command line code:1 W1 = Warning: array_slice() expects parameter 1 to be array, null given in Command line code on line 1 W2 = Warning: array_values() expects parameter 1 to be array, null given in Command line code on line 1 W3 = Warning: array_pop() expects parameter 1 to be array, null given in Command line code on line 1 W4 = Warning: end() expects parameter 1 to be array, null given in Command line code on line 1 W5 = Warning: reset() expects parameter 1 to be array, null given in Command line code on line 1 W6 = Warning: array_keys() expects parameter 1 to be array, null given in Command line code on line 1 W7 = Warning: count(): Parameter must be an array or an object that implements Countable in Command line code on line 1 W8 = Warning: array_key_last() expects parameter 1 to be array, null given in Command line code on line 1 N1 = Notice: Undefined offset: 0 in Command line code on line 1 N2 = Notice: Only variables should be passed by reference in Command line code on line 1 N3 = Notice: Undefined offset: -1 in Command line code on line 1 N4 = Notice: Undefined index: in Command line code on line 1
__lb__lang-cs [DebuggerHidden] public Element GetElementAt(Vector2 position) { return GetElementAt(position.X, position.Y); } public Element GetElementAt(Single x, Single y) { ... }
__lb__lang-perl $n = 1729; $s = 0; $i = 0; while ($n) { $s += $n % 10; $n/=10; $i ++ } print "Sum : $s\n"; print "Number of iterations : $i\n"
__lb__lang-css * { box-sizing: border-box; } .container { border-radius: 5px; background-color: padding: 20px; } .row:after { content: ""; display: table; clear: both; } input[type=text], select, textarea{ width: 100%; padding: 12px; border: 1px solid border-radius: 4px; box-sizing: border-box; resize: vertical; }
__lb__lang-golang dir, err := filepath.Abs(filepath.Dir(os.Args[0])) if err != nil { log.Fatal(err) } fmt.Println(dir)
__lb__lang-cs (((exception as System.Data.Entity.Validation.DbEntityValidationException).EntityValidationErrors as System.Collections.Generic.List<System.Data.Entity.Validation.DbEntityValidationResult>)[0].ValidationErrors as System.Collections.Generic.List<System.Data.Entity.Validation.DbValidationError>)[0]
__lb__lang-java Collections.sort(list, comparing(ClassName::getName).reversed());
__lb__lang-cpp std::forward<int>(1); std::forward<std::string>("Hello");
__lb__lang-java double p = Math.pow(10d, dp); double result = Math.round(value * p)/p;
__lb__lang-java import java.util.concurrent.atomic.AtomicInteger; import java.util.stream.IntStream; public class ThreadId { private static final AtomicInteger nextId = new AtomicInteger(1000); private static final ThreadLocal<Integer> threadId = ThreadLocal.withInitial(() -> nextId.getAndIncrement()); public static int get() { return threadId.get(); } public static void main(String[] args) { new Thread(() -> IntStream.range(1, 3).forEach(i -> { System.out.println(Thread.currentThread().getName() + " >> " + new ThreadId().get()); })).start(); new Thread(() -> IntStream.range(1, 3).forEach(i -> { System.out.println(Thread.currentThread().getName() + " >> " + new ThreadId().get()); })).start(); new Thread(() -> IntStream.range(1, 3).forEach(i -> { System.out.println(Thread.currentThread().getName() + " >> " + new ThreadId().get()); })).start(); } }
__lb__lang-cs public class HomeController : Controller { public ActionResult UploadFile() { return View(); } [HttpPost] public ActionResult UploadFile(MyModal Modal) { string DocumentName = string.Empty; string Description = string.Empty; if (!String.IsNullOrEmpty(Request.Form["DocumentName"].ToString())) DocumentName = Request.Form["DocumentName"].ToString(); if (!String.IsNullOrEmpty(Request.Form["Description"].ToString())) Description = Request.Form["Description"].ToString(); if (!String.IsNullOrEmpty(Request.Form["FileName"].ToString())) UploadedDocument = Request.Form["FileName"].ToString(); HttpFileCollectionBase files = Request.Files; string filePath = Server.MapPath("~/Root/Documents/"); if (!(Directory.Exists(filePath))) Directory.CreateDirectory(filePath); for (int i = 0; i < files.Count; i++) { HttpPostedFileBase file = files[i]; if (Request.Browser.Browser.ToUpper() == "IE" || Request.Browser.Browser.ToUpper() == "INTERNETEXPLORER") { string[] testfiles = file.FileName.Split(new char[] { fname = testfiles[testfiles.Length - 1]; UploadedDocument = fname; } else { fname = file.FileName; UploadedDocument = file.FileName; } file.SaveAs(fname); return RedirectToAction("List", "Home"); }
__lb__lang-cs MySwitchWithEnumerable(c, 0, 10, DoThing); MySwitchWithEnumerable(c, 10, 20, DoAnotherThing);
__lb__lang-java opt1: "Extract required libraries into generated JAR" opt2: "Package required libraries into generated JAR" opt3: "Copy required libraries into a sub-folder next to the generated JAR"
__lb__lang-sh $ cat numbers.txt 1 2 3 4 5 6 7 8 9 10 $ I=0; for N in $(cat numbers.txt); do I=$(($I + $N)); done; echo $I 55
__lb__lang-golang for key := range m { if key.expired() { delete(m, key) } }
__lb__lang-java public static ArrayList<String> createArrayList(String ... elements) { ArrayList<String> list = new ArrayList<String>(); for (String element : elements) { list.add(element); } return list; } .... ArrayList<String> places = createArrayList( "São Paulo", "Rio de Janeiro", "Brasília");
__lb__lang-c void SendMessage(uint32_t* buff, size_t size32) { for (int i = 0; i < size32; ++i) { SendWord(buff[i]); } }
__lb__lang-c union pw { short int i; char ch[2]; }; int putw(short int num, FILE *fp); int main (void) { FILE *fp; fp fopen("test.tmp", "wb "); putw(1000, fp); fclose(fp); return 0; } int putw(short int num, FILE *fp) { pw word; word.i = num; putc(word.c[0] , fp); return putc(word.c[1] , fp); }
__lb__lang-golang ~/projects/ bin/ pkg/ src/ github.com/ username/ mypack/ foo.go bar.go mypack_test.go mylib/ utillib.go utillib_test.go
__lb__lang-sh files=$(ls xorg-x11-fonts* 2> /dev/null | wc -l) if [ "$files" != "0" ] then echo "Exists" else echo "None found." fi > Exists
__lb__lang-php public function isPOST() { return (($this->requestMethod === $this->hasTokenTimeLeft() && $this->hasSameGETandPOSTIdentities() && ($this->httpHost === filter_input(INPUT_SERVER, }
__lb__lang-c int inline FixedPointMul (int a, int b) { long long a_long = a; long long product = a_long * b; return (int) (product >> 16); }
__lb__lang-java package com.tutorialspoint.java; /** * Created by mda21185 on 15-6-2016. */ public class CommandLine { public static void main(String args[]){ for(int i=0; i<args.length; i++){ System.out.println("args[" + i + "]: " + args[i]); } } }
__lb__lang-css table { table-layout: fixed; width: 100%; } td { text-overflow: ellipsis; white-space: nowrap; overflow: hidden; border: 1px solid red; }
__lb__lang-css position: relative; top: 50%; transform: translateY(-50%); -webkit-transform: translateY(-50%); }
__lb__lang-java assertException(new BlastContainer() { @Override public void test() throws Exception { doSomethingThatShouldExceptHere(); } });
__lb__lang-sh OUTPUTS_REDIRECTED="false" LOGFILE=/dev/stdout function save_standard_outputs { if [ "$OUTPUTS_REDIRECTED" == "true" ]; then echo "[ERROR]: ${FUNCNAME[0]}: Cannot save standard outputs because they have been redirected before" exit 1; fi exec 3>&1 exec 4>&2 trap restore_standard_outputs EXIT } function redirect_outputs_to_logfile { if [ "$OUTPUTS_REDIRECTED" == "true" ]; then echo "[ERROR]: ${FUNCNAME[0]}: Cannot redirect standard outputs because they have been redirected before" exit 1; fi LOGFILE=$1 if [ -z "$LOGFILE" ]; then echo "[ERROR]: ${FUNCNAME[0]}: logfile empty [$LOGFILE]" fi if [ ! -f $LOGFILE ]; then touch $LOGFILE fi if [ ! -f $LOGFILE ]; then echo "[ERROR]: ${FUNCNAME[0]}: creating logfile [$LOGFILE]" exit 1 fi save_standard_outputs exec 1>>${LOGFILE%.log}.log exec 2>&1 OUTPUTS_REDIRECTED="true" } function restore_standard_outputs { if [ "$OUTPUTS_REDIRECTED" == "false" ]; then echo "[ERROR]: ${FUNCNAME[0]}: Cannot restore standard outputs because they have NOT been redirected" exit 1; fi exec 1>&- exec 2>&- exec 2>&4 exec 1>&3 OUTPUTS_REDIRECTED="false" }
__lb__lang-cs db.Users.Attach(updatedUser); db.Entry(updatedUser).State = EntityState.Modified; db.SaveChanges();
__lb__lang-php Variable_name Value date_format %Y-%m-%d datetime_format %Y-%m-%d %H:%i:%
__lb__lang-cpp string IntToString (int a) { ostringstream temp; temp<<a; return temp.str(); }
__lb__lang-css .triangle { margin: 50px auto; width: 100px; height: 100px; background: -moz-linear-gradient(-45deg, rgba(255,0,0,0) 0%, rgba(255,0,0,0) 50%, rgba(255,0,0,1) 50%, rgba(255,0,0,1) 100%); background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,rgba(255,0,0,0)), color-stop(50%,rgba(255,0,0,0)), color-stop(50%,rgba(255,0,0,1)), color-stop(100%,rgba(255,0,0,1))); background: -webkit-linear-gradient(-45deg, rgba(255,0,0,0) 0%,rgba(255,0,0,0) 50%,rgba(255,0,0,1) 50%,rgba(255,0,0,1) 100%); background: -o-linear-gradient(-45deg, rgba(255,0,0,0) 0%,rgba(255,0,0,0) 50%,rgba(255,0,0,1) 50%,rgba(255,0,0,1) 100%); background: -ms-linear-gradient(-45deg, rgba(255,0,0,0) 0%,rgba(255,0,0,0) 50%,rgba(255,0,0,1) 50%,rgba(255,0,0,1) 100%); background: linear-gradient(135deg, rgba(255,0,0,0) 0%,rgba(255,0,0,0) 50%,rgba(255,0,0,1) 50%,rgba(255,0,0,1) 100%); ; }
__lb__lang-java wget --no-check-certificate -c --header "Cookie: oraclelicense=accept-securebackup-cookie" http:
__lb__lang-java import java.util.Arrays; class demo{ public static void main(String a[]){ int[][] number2={{1,2},{3,4},{5,6}};` System.out.print(Arrays.deepToString(number2)); } }
__lb__lang-cs public class MyOrderingClass : IComparer<Order> { public int Compare(Order x, Order y) { int compareDate = x.Date.CompareTo(y.Date); if (compareDate == 0) { return x.OrderID.CompareTo(y.OrderID); } return compareDate; } }
__lb__lang-sh argArray=( "$@" ) arrayLength=${ lastArg=$((arrayLength - 1)) echo ${argArray[$lastArg]}
__lb__lang-java RandomUtils random = new RandomUtils(); random.nextInt(0, 0); random.nextInt(10, 10); random.nextInt(-10, 10); random.nextInt(10, -10);
__lb__lang-java public static String getStackTraceString(Throwable e) { return getStackTraceString(e, ""); } private static String getStackTraceString(Throwable e, String indent) { StringBuilder sb = new StringBuilder(); sb.append(e.toString()); sb.append("\n"); StackTraceElement[] stack = e.getStackTrace(); if (stack != null) { for (StackTraceElement stackTraceElement : stack) { sb.append(indent); sb.append("\tat "); sb.append(stackTraceElement.toString()); sb.append("\n"); } } Throwable[] suppressedExceptions = e.getSuppressed(); if (suppressedExceptions != null) { for (Throwable throwable : suppressedExceptions) { sb.append(indent); sb.append("\tSuppressed: "); sb.append(getStackTraceString(throwable, indent + "\t")); } } Throwable cause = e.getCause(); if (cause != null) { sb.append(indent); sb.append("Caused by: "); sb.append(getStackTraceString(cause, indent)); } return sb.toString(); }
__lb__lang-cpp class Foo { public: Foo(int a) { } } int func() { int a1, a2; std::cin >> a1; std::cin >> a2; Foo f1(a1); __asm push a1; __asm lea ecx, [this]; __asm call Foo::Foo(int); Foo* f2 = new Foo(a2); __asm push sizeof(Foo); __asm call operator new; __asm push a2; __asm call Foo::Foo(int); delete f2; }
__lb__lang-java Parser parser = ParserFactory.getParser(); if (parser == null) { } Action action = parser.findAction(someInput); if (action == null) { } else { action.doSomething(); }
__lb__lang-cs public static class Question { public static readonly int Role = 2; public static readonly int ProjectFunding = 3; public static readonly int TotalEmployee = 4; public static readonly int NumberOfServers = 5; public static readonly int TopBusinessConcern = 6; }
__lb__lang-golang package main import ( "fmt" "encoding/json" ) type Person struct { FirstName string `json:"first_name"` LastName string `json:"last_name"` MiddleName string `json:"middle_name,omitempty"` } func main() { json_string := ` { "first_name": "John", "last_name": "Smith" }` person := new(Person) json.Unmarshal([]byte(json_string), person) fmt.Println(person) new_json, _ := json.Marshal(person) fmt.Printf("%s\n", new_json) }
__lb__lang-c int main(void) { use_it(); global_variable += 19; use_it(); printf("Increment: %d\n", increment()); return 0; }
__lb__lang-cpp const SomeClass* pSomeClass; pSomeClass->GetValue();
__lb__lang-php <?php class MyCompanyName_HelloWorld_IndexController extends Mage_Core_Controller_Front_Action{ public function indexAction(){ echo "We } }
__lb__lang-cpp std::is_class<Foo>::value std::is_class<Bar>::value
__lb__lang-java WeakHashMap<Pair<String, String>, String> map = ...
__lb__lang-perl my @arr = (2); print scalar @arr; print $ my $arrSize = @arr; print $arrSize;
__lb__lang-java public static void swap(StringBuffer s1, StringBuffer s2) { StringBuffer temp = s1; s1 = s2; s2 = temp; } public static void main(String[] args) { StringBuffer s1 = new StringBuffer("Hello"); StringBuffer s2 = new StringBuffer("World"); swap(s1, s2); System.out.println(s1); System.out.println(s2); }
__lb__lang-c typedef struct myStructElement { myStructElement* nextSE; field_1; ... }myStruct;
__lb__lang-sh $ nc -w 2 -v canyouseeme.org 80 </dev/null; echo $? Connection to canyouseeme.org 80 port [tcp/http] succeeded! 0
__lb__lang-java synchronized(myMap) { if (!myMap.containsKey("tomato")) myMap.put("tomato", "red"); }
__lb__lang-golang a: [1 2 0 0 0 0 0 0 0 0] x: [1 2], y: [3 4] cap(x): 2 x: [1 2 3 4] a: [1 2 0 0 0 0 0 0 0 0]
__lb__lang-cpp /* Define _USE_MATH_DEFINES before including math.h to expose these macro * definitions for common math constants. These are placed under an * since these commonly-defined names are not part of the C/C++ standards. */
__lb__lang-hs >>> import numpy as np >>> np.polyfit(x, map(lambda x:x[1], res), deg=1) array([ 1.41324057, -17.7512292 ])
__lb__lang-cs Stream s; byte[] b; if (s.Length > int.MaxValue) { throw new Exception("This stream is larger than the conversion algorithm can currently handle."); } using (var br = new BinaryReader(s)) { b = br.ReadBytes((int)s.Length); }
__lb__lang-cpp g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-4) Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
__lb__lang-java BufferedReader br = new BufferedReader(new FileReader("D:\\sampleJson.txt")); StringBuilder sb = new StringBuilder(); String line = br.readLine(); while (line != null) { sb.append(line); sb.append(System.lineSeparator()); line = br.readLine(); } br.close(); String jsonInput = sb.toString();
__lb__lang-cs StatusEnum MyStatus = Enum<StatusEnum>.Parse("Active");
__lb__lang-css body { margin: 0; } .outer-container { position: absolute; display: table; width: 100%; height: 100%; background: } .inner-container { display: table-cell; vertical-align: middle; text-align: center; } .centered-content { display: inline-block; text-align: left; background: padding: 20px; border: 1px solid }
__lb__lang-sh $ help read read: read [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t timeout] [-u fd] [name ...] Read a line from the standard input and split it into fields. ... -p prompt output the string PROMPT without a trailing newline before attempting to read ... -s do not echo input coming from a terminal
__lb__lang-java try (Stream<String> lines = Files.lines(file, Charset.defaultCharset())) { lines.forEachOrdered(System.out::println); }
__lb__lang-sh function has-session { tmux has-session -t name_of_my_session 2>/dev/null } if has-session ; then echo "Session already exists" else cd /path/to/my/project tmux new-session -d -s name_of_my_session tmux split-window -h -p 40 start_web_server tmux split-window -v tmux attach-session -d -t name_of_my_session fi
__lb__lang-cpp int main() { int x = 5; char * x_str = new char[2]; int chars_written = sprintf(x_str, "%d", x); return 0; }
__lb__lang-cs public static void CopyStream(Stream input, Stream output) { using (StreamReader reader = new StreamReader(input)) using (StreamWriter writer = new StreamWriter(output)) { writer.Write(reader.ReadToEnd()); } }
__lb__lang-golang package main import ( "fmt" ) func main() { i := 1 }
__lb__lang-cs string[] brokenBaseUrl = Context.Url.TrimEnd( string[] brokenRootFolderPath = RootFolderPath.Split( for (int x = 0; x < brokenRootFolderPath.Length; x++) { if (!brokenBaseUrl.Contains(brokenRootFolderPath[x])) { if (x == 0) { RootLocationUrl = Context.Url.TrimEnd( } else { RootLocationUrl += String.Format("/{0}", brokenRootFolderPath[x]); } } }
__lb__lang-c unsigned char ReverseBits(unsigned char data) { unsigned char k = 0, rev = 0; unsigned char n = data; while(n) { k = n & (~(n - 1)); n &= (n - 1); rev |= (128 / k); } return rev; }
__lb__lang-cs private T Create<T>() where T : class, new() { return new T(); }
__lb__lang-cpp struct POD { int x; char y; void f() {} static std::vector<char> v; }; struct AggregateButNotPOD1 { int x; ~AggregateButNotPOD1() {} }; struct AggregateButNotPOD2 { AggregateButNotPOD1 arrOfNonPod[3]; };
__lb__lang-sh Host my_synology Hostname xxxx.synology.me IdentityFile ~/.ssh/id_rsa_xxxx User myname Port xx
__lb__lang-golang package main import ( "path/filepath" "os" "flag" ) type visitor int func (v visitor) VisitDir(path string, f *os.FileInfo) bool { println(path) return true } func (v visitor) VisitFile(path string, f *os.FileInfo) { println(path) } func main() { root := flag.Arg(0) filepath.Walk(root, visitor(0), nil) }
__lb__lang-php register_shutdown_function( "fatal_handler" ); function fatal_handler() { $errfile = "unknown file"; $errstr = "shutdown"; $errno = E_CORE_ERROR; $errline = 0; $error = error_get_last(); if( $error !== NULL) { $errno = $error["type"]; $errfile = $error["file"]; $errline = $error["line"]; $errstr = $error["message"]; error_mail(format_error( $errno, $errstr, $errfile, $errline)); } }
__lb__lang-php function str_short($string,$limit) { $len=strlen($string); if($len>$limit) { $to_sub=$len-$limit; $crop_temp=substr($string,0,-$to_sub); return $crop_len=$crop_temp."..."; } else { return $string; } }
__lb__lang-java public Action findAction(final String userInput) { return new Action() { public void doSomething() { userConsole.err("Action not found: " + userInput); } } }
__lb__lang-golang GOOS=windows GOARCH=386 go build -o appname.exe appname.go GOOS=linux GOARCH=386 CGO_ENABLED=0 go build -o appname.linux appname.go
__lb__lang-php $prime_array = array( 2, 3, 5, 7, 11, 13, .... 104729, ... ); $result_array = array(); foreach( $prime_array => $number ) { $result_array[$number] = in_array( $number, $large_prime_array ); } $prime_array => array( 2 => NULL, 3 => NULL, 5 => NULL, 7 => NULL, 11 => NULL, 13 => NULL, .... 104729 => NULL, ... ); foreach( $prime_array => $number ) { $result_array[$number] = array_key_exists( $number, $large_prime_array ); }
__lb__lang-java public class MapUtilities { public static <K, V extends Comparable<V>> List<Entry<K, V>> sortByValue(Map<K, V> map) { List<Entry<K, V>> entries = new ArrayList<Entry<K, V>>(map.entrySet()); Collections.sort(entries, new ByValue<K, V>()); return entries; } private static class ByValue<K, V extends Comparable<V>> implements Comparator<Entry<K, V>> { public int compare(Entry<K, V> o1, Entry<K, V> o2) { return o1.getValue().compareTo(o2.getValue()); } }
__lb__lang-cpp if(a < 901) cmpl $900, -4(%rbp) jg .L2 if(a <=901) cmpl $901, -4(%rbp) jg .L3
__lb__lang-cs System.IO.Directory.Delete(installPath, true); System.IO.Directory.CreateDirectory(installPath);
__lb__lang-sh text= text="${text}this is line one\n" text="${text}this is line two\n" text="${text}this is line three\n" printf "%b" "$text" > filename
__lb__lang-java map = ImmutableSortedMap.copyOf(myOriginalMap, valueComparator);
__lb__lang-sh getopt [getopt_options] [-o options] [--] [optstring] [parameters]
__lb__lang-html <div class="outer"> <div class="center-helper"> <div class="inner"> <h1>A div with no defined width</h1> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<br> Duis condimentum sem non turpis consectetur blandit.<br> Donec dictum risus id orci ornare tempor.<br> Proin pharetra augue a lorem elementum molestie.<br> Nunc nec justo sit amet nisi tempor viverra sit amet a ipsum.</p> </div> </div> </div>
__lb__lang-golang package main import "fmt" func Reverse(s string) string { n := len(s) runes := make([]rune, n) for _, rune := range s { n-- runes[n] = rune } return string(runes[n:]) } func main() { fmt.Println(Reverse(Reverse("Hello, 世界"))) fmt.Println(Reverse(Reverse("The quick brown 狐 jumped over the lazy 犬"))) }
__lb__lang-c struct variant { int type; double number; char *string; };
__lb__lang-hs instance (Factored m Int) => Num (VT U.Vector m Int) where VT x + VT y = VT $ V.zipWith (+) x y
__lb__lang-java List<Person> olderThan30 = personList.stream(). filter(p -> p.age >= 30). collect(Collectors.toList());
__lb__lang-cs public static class IntExtensions { public static bool Even(this int value) { return value % 2 == 0; } }
__lb__lang-php mysql_query("SET NAMES utf8"); meta charset="utf-8" header php.(before any output of the HTML): header( table-rows-charset(for each row): utf8_unicode_ci
__lb__lang-golang package main import ( "fmt" "io/ioutil" ) func main() { data, err := ioutil.ReadFile("text.txt") if err != nil { return } fmt.Println(string(data)) }
__lb__lang-hs instance Monad [] where return :: t -> [t] return = (: []) (=<<) :: (a -> [b]) -> ([a] -> [b]) (f =<<) = concat . map f
__lb__lang-cpp int array[] = {10,20,30} for(int i=0; i<sizeof(array); i++) v.push_back(array[i]);
__lb__lang-cpp void f(my_string&); void f(const char*); f(my_string());
__lb__lang-cs string get_unique_string(int string_length) { using(var rng = new RNGCryptoServiceProvider()) { var bit_count = (string_length * 6); var byte_count = ((bit_count + 7) / 8); var bytes = new byte[byte_count]; rng.GetBytes(bytes); return Convert.ToBase64String(bytes); } }
__lb__lang-java import static org.assertj.core.api.Assertions.*; @Test public void testFooThrowsIndexOutOfBoundsException() { Foo foo = new Foo(); assertThatThrownBy(() -> foo.doStuff()) .isInstanceOf(IndexOutOfBoundsException.class); }
__lb__lang-cs public class Test { private Excel.Application xl; private Excel.Workbook book; public void DoSomething() { xl = new Excel.Application(); xl.Visible = true; book = xl.Workbooks.Add(Type.Missing); Excel.Range rng = book.Worksheets[1].UsedRange; } public void CleanUp() { book = null; xl.Quit(); xl = null; GC.Collect(); GC.WaitForPendingFinalizers(); GC.Collect(); GC.WaitForPendingFinalizers(); } }
__lb__lang-php echo formatSeconds(15); echo formatSeconds(100); echo formatSeconds(10800); echo formatSeconds(10000000);
__lb__lang-cpp string str = intToString[3] + " + " + intToString[4] + " = " + intToString[7];
__lb__lang-css .center{ position: absolute; height: 50px; width: 50px; background:red; top:calc(50% - 50px/2); left:calc(50% - 50px/2); }
__lb__lang-css border-collapse: collapsed; color: pink; border: 1px solid } outline: 3px solid }
__lb__lang-cs using System; class Program { enum PetType { None, Cat = 1, Dog = 2 } static void Main() { string value = "Dog"; PetType pet = (PetType)Enum.Parse(typeof(PetType), value); if (pet == PetType.Dog) { Console.WriteLine("Equals dog."); } } } ------------- Output Equals dog.
__lb__lang-java String strEmp = new Gson().toJson(emp); Intent intent = new Intent(getBaseContext(), YourActivity.class); intent.putExtra("EMP", strEmp); startActivity(intent); Bundle bundle = getIntent().getExtras(); String empStr = bundle.getString("EMP"); Gson gson = new Gson(); Type type = new TypeToken<Employee>() { }.getType(); Employee selectedEmp = gson.fromJson(empStr, type);
__lb__lang-cpp template <typename T> std::string NumberToString ( T Number ) { std::ostringstream ss; ss << Number; return ss.str(); }
__lb__lang-golang scanner := bufio.NewScanner(os.Stdin) for scanner.Scan() { fmt.Println(scanner.Text()) } if scanner.Err() != nil { }
__lb__lang-cs new JavaScriptSerializer().Serialize( (from p in (new List<Person>() { new Person() { Age = 35, Gender = Gender.Male } }) select new { Age =p.Age, Gender=p.Gender.ToString() } ).ToArray()[0] );
__lb__lang-php foreach($data as $object) { foreach($object as $value) { echo $value; } }
__lb__lang-cs public static string GetDescription<T>(this object enumerationValue) where T : struct { Type type = enumerationValue.GetType(); if (!type.IsEnum) { throw new ArgumentException("EnumerationValue must be of Enum type", "enumerationValue"); } MemberInfo[] memberInfo = type.GetMember(enumerationValue.ToString()); if (memberInfo != null && memberInfo.Length > 0) { object[] attrs = memberInfo[0].GetCustomAttributes(typeof(DescriptionAttribute), false); if (attrs != null && attrs.Length > 0) { return ((DescriptionAttribute)attrs[0]).Description; } } return enumerationValue.ToString(); }
__lb__lang-java int ch; StringBuilder sb = new StringBuilder(); while((ch = inputStream.read()) != -1) sb.append((char)ch); reset(); return sb.toString();
__lb__lang-php function array_reject_value(array &$arrayToFilter, $deleteValue) { $filteredArray = array(); foreach ($arrayToFilter as $key => $value) { if ($value !== $deleteValue) { $filteredArray[] = $value; } } return $filteredArray; }
__lb__lang-cpp Base(Base::UPtr &&n) : next(::std::move(n)) {} void setNext(Base::UPtr &&n) { next = ::std::move(n); }
__lb__lang-c bool f1() { int var1 = 1000; int var2 = 2000; int var3 = var1 + var2; return (var3 == 0) ? true : false; }
__lb__lang-cs using System; using System.Linq; ... var a1 = new int[] { 1, 2, 3}; var a2 = new int[] { 1, 2, 3}; var a3 = new int[] { 1, 2, 4}; var x = a1.SequenceEqual(a2); var y = a1.SequenceEqual(a3);
__lb__lang-java ArrayList<String> places = new ArrayList<String>(); places.add("Buenos Aires"); places.add("Córdoba"); places.add("La Plata");
__lb__lang-sh RevNum=`git status --branch | head -n1 | tr -d sed -i "/^ app_version:/c\ app_version:$RevNum" app/config/parameters.yml
__lb__lang-java int [] a1 = IntStream.range(1, 20).toArray(); System.out.println(Arrays.toString(a1));
__lb__lang-sh CLASSPATH=hibernate-$LATESTVERSION_src.zip:hibernate_$LATEST_VERSION.jar CLASSPATH=hibernate-${LATESTVERSION}_src.zip:hibernate_$LATEST_VERSION.jar
__lb__lang-css .tr { width: 30%; padding-bottom: 21.27%; /* = width / 1.41 */ position: relative; overflow: hidden; } .tr:before { content: position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-color: transform-origin: 0 100%; transform: rotate(45deg); }
__lb__lang-cs public class CommandOptions { private Dictionary<string, Action<string[]>> _actions; private Dictionary<string, Action> _actionsNoParams; public CommandOptions() { _actions = new Dictionary<string, Action<string[]>>(); _actionsNoParams = new Dictionary<string, Action>(); } public CommandOptions Add(string name, Action action) { _actionsNoParams.Add(name, action); return this; } public CommandOptions Add(string name, Action<string[]> action) { _actions.Add(name, action); return this; } public bool Parse(string command) { if (command.IndexOf(" ") == -1) { foreach (string key in _actionsNoParams.Keys) { if (command == key) { _actionsNoParams[key].Invoke(); return true; } } } else { foreach (string key in _actions.Keys) { if (command.StartsWith(key) && command.Length > key.Length) { string options = command.Substring(key.Length); options = options.Trim(); string[] parts = options.Split( _actions[key].Invoke(parts); return true; } } } return false; } }
__lb__lang-java static final Map<Integer, String> MY_MAP = Map.of( 1, "one", 2, "two" );
__lb__lang-sh if [[ `id -u` -ne 0 ]] ; then echo "Please run as root" ; exit 1 ; fi
__lb__lang-cpp using namespace std; class Parent { protected: virtual void fun(int i) { cout<<"Parent::fun functionality write here"<<endl; } void fun1(int i) { cout<<"Parent::fun1 functionality write here"<<endl; } void fun2() { cout<<"Parent::fun3 functionality write here"<<endl; } }; class Child:public Parent { public: virtual void fun(int i) { cout<<"Child::fun partial functionality write here"<<endl; Parent::fun(++i); Parent::fun2(); } void fun1(int i) { cout<<"Child::fun1 partial functionality write here"<<endl; Parent::fun1(++i); } }; int main() { Child d1; d1.fun(1); d1.fun1(2); return 0; }
__lb__lang-java "Map<String , String > map = new HapshMap<String , String>; map.add("one","java"); map.add("two" ,"spring"); Set<Entry<String,String>> set = map.entrySet(); List<Entry<String , String>> list = new ArrayList<Entry<String , String>> (set); for(Entry<String , String> entry : list ) { System.out.println(entry.getKey()); System.out.println(entry.getValue()); } "
__lb__lang-java @Test public void testFooThrowsIndexOutOfBoundsException() { try { foo.doStuff(); fail("expected exception was not occured."); } catch(IndexOutOfBoundsException e) { } }
__lb__lang-sh default= value=${1:-$default} echo "value: [$value]"
__lb__lang-sh foo 2>&1 | grep ERROR foo 2>&1 | less foo 2>&1 |tee /dev/tty >>outfile foo >outfile1 2>&1 >outfile2
__lb__lang-php $x[4] = $x{4} = $echo $x[4]; $echo $x{4}; $x[] = $x{} = $x = [1, 2]; $x = {1, 2}; echo "${x[4]}"; echo "${x{4}}"; echo "{$x[4]}"; echo "{$x{4}}";
__lb__lang-c struct foobarbaz{ int one; int two; int three; int (*exampleMethod)(int, int); }; int addTwoNumbers(int a, int b){ return a+b; } int main() { int (*pointerToFunction)(int, int) = addTwoNumbers; int test = (*pointerToFunction)(12,12); printf ("test: %u \n", test); struct foobarbaz fbb; fbb.one = 1; fbb.two = 2; fbb.three = 3; fbb.exampleMethod = addTwoNumbers; int test2 = fbb.exampleMethod(13,36); printf ("test2: %u \n", test2); printf("\nDone\n"); return 0; }
__lb__lang-css width: 0; height: 0; border-left: 50px solid transparent; border-right: 50px solid transparent; border-bottom: 100px solid red; }
__lb__lang-perl sub Average{ $n = scalar(@_); $sum = 0; foreach $item (@_){ $sum += $item; } $average = $sum / $n; print "Average for the given numbers: $average\n"; }
__lb__lang-cs string source_dir = @"E:\"; string destination_dir = @"C:\"; foreach (string dir in System.IO.Directory.GetDirectories(source_dir, "*", System.IO.SearchOption.AllDirectories)) { System.IO.Directory.CreateDirectory(System.IO.Path.Combine(destination_dir, dir.Substring(source_dir.Length + 1))); } foreach (string file_name in System.IO.Directory.GetFiles(source_dir, "*", System.IO.SearchOption.AllDirectories)) { System.IO.File.Copy(file_name, System.IO.Path.Combine(destination_dir, file_name.Substring(source_dir.Length + 1))); }
__lb__lang-java @Test public void testFooThrowsIndexOutOfBoundsException() { when(foo).doStuff(); then(caughtException()).isInstanceOf(IndexOutOfBoundsException.class); }
__lb__lang-php <?php $json = $stdInstance = json_decode($json); echo $stdInstance->foo . PHP_EOL; echo $stdInstance->number . PHP_EOL; $array = json_decode($json, true); echo $array[ echo $array[
__lb__lang-java Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(source); String title = XPathFactory.newInstance().newXPath().evaluate("
__lb__lang-java boolean isNumber(String str){ return str.replaceAll("[0-9]","").length() == 0; }
__lb__lang-php $newVariable = isset($thePotentialData) ? $thePotentialData : null;
__lb__lang-cs public static bool EmptyFolder(string pathName) { bool errors = false; DirectoryInfo dir = new DirectoryInfo(pathName); foreach (FileInfo fi in dir.EnumerateFiles()) { try { fi.IsReadOnly = false; fi.Delete(); while (fi.Exists) { System.Threading.Thread.Sleep(10); fi.Refresh(); } } catch (IOException e) { Debug.WriteLine(e.Message); errors = true; } } foreach (DirectoryInfo di in dir.EnumerateDirectories()) { try { EmptyFolder(di.FullName); di.Delete(); while (di.Exists) { System.Threading.Thread.Sleep(10); di.Refresh(); } } catch (IOException e) { Debug.WriteLine(e.Message); errors = true; } } return !errors; }
__lb__lang-php $jsonIterator = new RecursiveIteratorIterator( new RecursiveArrayIterator(json_decode($json, TRUE)), RecursiveIteratorIterator::SELF_FIRST); foreach ($jsonIterator as $key => $val) { if(is_array($val)) { echo "$key:\n"; } else { echo "$key => $val\n"; } }
__lb__lang-java import java.lang.reflect.TypeVariable; public static <T> Class<T> getGenericClass() { __<T> ins = new __<T>(); TypeVariable<?>[] cls = ins.getClass().getTypeParameters(); return (Class<T>)cls[0].getClass(); } private final class __<T> { private __() { } }
__lb__lang-cpp auto_ptr<Shape> a(new Triangle); +---------------+ | triangle data | +---------------+ ^ | | | +-----|---+ | +-|-+ | a | p | | | | | +---+ | +---------+ auto_ptr<Shape> b(a); +---------------+ | triangle data | +---------------+ ^ | +----------------------+ | +---------+ +-----|---+ | +---+ | | +-|-+ | a | p | | | b | p | | | | | +---+ | | +---+ | +---------+ +---------+
__lb__lang-cs orderList.Sort( delegate(Order p1, Order p2) { int compareDate = p1.Date.CompareTo(p2.Date); if (compareDate == 0) { return p2.OrderID.CompareTo(p1.OrderID); } return compareDate; } );
__lb__lang-php <?php $foo = "5bar"; $bar = true; settype($foo, "integer"); settype($bar, "string"); ?>
__lb__lang-java List<E> ints = Stream.of(list1, list2).collect(ArrayList::new, List::addAll, List::addAll);
__lb__lang-hs instance Monad Maybe where return = Just join (Just m) = m join Nothing = Nothing
__lb__lang-php <!-- snip --> <script> var data = <?php echo json_encode("42", JSON_HEX_TAG); ?>; </script> <!-- snip -->
__lb__lang-cpp template <typename T, typename TypeList> struct Contains; template <typename T, typename Head, typename Tail> struct Contains<T, UnionNode<Head, Tail> > { enum { result = Contains<T, Tail>::result }; }; template <typename T, typename Tail> struct Contains<T, UnionNode<T, Tail> > { enum { result = true }; }; template <typename T> struct Contains<T, void> { enum { result = false }; };
__lb__lang-css ::-webkit-input-placeholder { color: red; text-overflow: ellipsis; } :-moz-placeholder { color: } ::-moz-placeholder { color: } :-ms-input-placeholder { color: }
__lb__lang-php $this->abortIf($this->connection->getDatabasePlatform()->getName() != "postgresql"); $this->addSql("ALTER TABLE tablename ADD property BOOLEAN"); $object = new Object(); $defaultValue = $menuItem->getProperty() ? "true":"false"; $this->addSql("UPDATE tablename SET property = {$defaultValue}"); $this->addSql("ALTER TABLE tablename ALTER property SET NOT NULL");
__lb__lang-php php_value mysql.default.user myusername php_value mysql.default.password mypassword php_value mysql.default.host server
__lb__lang-c int main() { int dividend = -42, divisor = 5, quotient, remainder; __asm__ ( "cdq; idivl %%ebx;" : "=a" (quotient), "=d" (remainder) : "a" (dividend), "b" (divisor) : ); printf("%i / %i = %i, remainder: %i\n", dividend, divisor, quotient, remainder); return 0; }
__lb__lang-cpp void main() { SYSTEMTIME SystemTime, LocalTime; int loctime = GetLocalTime(&LocalTime); int systime = GetSystemTime(&SystemTime) }
__lb__lang-cpp template<class T> struct has_foo { typedef char (&Yes)[1]; typedef char (&No)[2]; template<class U> static Yes test(U * data, MyClass* arg1 = 0, typename std::enable_if<std::is_void< decltype(data->foo(*arg1, 1u)) >::value>::type * = 0); static No test(...); static const bool value = sizeof(Yes) == sizeof(has_foo::test((typename std::remove_reference<T>::type*)0)); };
__lb__lang-cs var result = myDataTable.Rows.OfType<CustomSet.CustomTableRow>().Where(myRow => myRow.RowNo);
__lb__lang-java String Pool b -----------------> "test" <-----------------a
__lb__lang-golang export GOROOT=${INSTALL_DIR}/go export GOPATH=<your go path> export PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin
__lb__lang-cs foreach(var i in Enumerable.Range(1,3)) { if (i == 2) break; Console.WriteLine(i); }
__lb__lang-cpp char intToChar(int num) { if (num < 10 && num >= 0) { return num + 48; } else { return } } string intToString(int num) { int digits = 0, process, single; string numString; process = num; while (process != 0) { single = process % 10; process = (process - single)/10; digits ++; } process = num; for (int i = 0; i < digits; i++) { numString += } for (int i = digits-1; i >= 0; i--) { single = process % 10; numString[i] = intToChar ( single); process = (process - single) / 10; } return numString; }
__lb__lang-css .overflow-x-scroll-no-scrollbar {overflow:hidden;} .overflow-x-scroll-no-scrollbar div { overflow-x:hidden; margin-bottom:-17px; overflow-y:hidden; width:100%; } .overflow-x-scroll-no-scrollbar div * { overflow-x:auto; width:100%; padding-bottom:17px; white-space: nowrap; cursor:pointer } .parent-style {width:100px;background-color:
__lb__lang-perl my $string = "one.two.three.four"; @s = split /\./,$string; print scalar @s - 1;
__lb__lang-hs > replicate 3 "aaa" > :t replicate replicate :: Int -> a -> [a] > :t liftA2 replicate liftA2 replicate :: (Applicative f) => f Int -> f a -> f [a] > (liftA2 replicate) [1,2,3] [ ["a","b","c","aa","bb","cc","aaa","bbb","ccc"] > :t liftA2 liftA2 :: (Applicative f) => (a -> b -> c) -> (f a -> f b -> f c)
__lb__lang-golang var input string func main() { fmt.Print("Enter Your Name=") fmt.Scanf("%s",&input) fmt.Println("Hello "+input) }
__lb__lang-cs PropertyInfo column = (new Process()).GetType().GetProperties().Where(x => x.Name == dgvProcessList.Columns[e.ColumnIndex].Name).First();
__lb__lang-hs append [] ys = ys append (x:xs) ys = x : append xs ys
__lb__lang-java @SuppressWarnings("unchecked") public static <T> T[] join(T[]...arrays) { final List<T> output = new ArrayList<T>(); for(T[] array : arrays) { output.addAll(Arrays.asList(array)); } return output.toArray((T[])Array.newInstance( arrays[0].getClass().getComponentType(), output.size())); }
__lb__lang-php abstract class Enumeration { public static function enum() { $reflect = new ReflectionClass( get_called_class() ); return $reflect->getConstants(); } } class Test extends Enumeration { const A = const B = } foreach (Test::enum() as $key => $value) { echo "$key -> $value<br>"; }
__lb__lang-sh EUID Expands to the effective user ID of the current user, initialized at shell startup. This variable is readonly.
__lb__lang-cpp int i = 42; std::string s = SSTR( "i is: " << i ); puts( SSTR( i ).c_str() ); Foo x( 42 ); throw std::runtime_error( SSTR( "Foo is
__lb__lang-java Set entries: E -> -1 Set entries: B -> 1 Set entries: A -> 3 Set entries: C -> 3 Set entries: D -> 5 Set entries: H -> 15 Set entries: G -> 79 Set entries: F -> 1000 Added to result map entries: E -1 Added to result map entries: B 1 Added to result map entries: A 3 Added to result map entries: C 3 Added to result map entries: D 5 Added to result map entries: H 15 Added to result map entries: G 79 Added to result map entries: F 1000 Result map values: 5 Result map values: -1 Result map values: 1000 Result map values: 79 Result map values: 3 Result map values: 1 Result map values: 3 Result map values: 15 Result map entries: D -> 5 Result map entries: E -> -1 Result map entries: F -> 1000 Result map entries: G -> 79 Result map entries: A -> 3 Result map entries: B -> 1 Result map entries: C -> 3 Result map entries: H -> 15
__lb__lang-sh foo="Hello" foo="${foo}World" echo $foo > HelloWorld
__lb__lang-php trait A { function calc($v) { return $v+1; } } class MyClass { use A { calc as traitcalc; } function calc($v) { $v++; return traitcalc($v); } }
__lb__lang-php function array_is_assoc(array $a) { $i = 0; foreach ($a as $k => $v) { if ($k !== $i++) { return true; } } return false; }
__lb__lang-golang x := 10 y := uint(1025) println(x >> y) println(x << y)
__lb__lang-sh oldIFS=$IFS IFS=/ for basetool in $0 ; do : ; done IFS=$oldIFS
__lb__lang-cs DateTime start, end = .... int days = (end - start).Days;
__lb__lang-hs -- Zippers are themselves products toZipper :: (D t :*: Identity) a -> Zipper t a toZipper (d :*: (Identity h)) = Zipper d h fromZipper :: Zipper t a -> (D t :*: Identity) a fromZipper (Zipper d h) = (d :*: (Identity h))
__lb__lang-cpp foo(shared_ptr<T1>(new T1()), shared_ptr<T2>(new T2()));
__lb__lang-cs List<Person> distinctPeople = allPeople .GroupBy(p => p.PersonId) .Select(g => g.First()) .ToList();
__lb__lang-java FileWriter fw=new FileWriter("C:\\file.json",true); fw.write("ssssss"); fw.close();
__lb__lang-golang nate:~/work/src/dir $ cd hello nate:~/work/src/dir/hello $ go install hello.go go install: no install location for .go files listed on command line (GOBIN not set) nate:~/work/src/dir/hello $ go install hello can /opt/go/src/hello (from $GOROOT) /home/ubuntu/work/src/hello (from $GOPATH)
__lb__lang-cpp template<typename T> vector<T> split(const T & str, const T & delimiters) { vector<T> v; typename T::size_type start = 0; auto pos = str.find_first_of(delimiters, start); while(pos != T::npos) { if(pos != start) v.emplace_back(str, start, pos - start); start = pos + 1; pos = str.find_first_of(delimiters, start); } if(start < str.length()) v.emplace_back(str, start, str.length() - start); return v; }
__lb__lang-c struct point { int x, y; } first_point, second_point;
__lb__lang-golang export GOROOT=/usr/local/go export GOPATH=$GOROOT/src export GOBIN=$GOROOT/bin PATH=$PATH:$GOPATH:$GOBIN export PATH
__lb__lang-java java.util.regex.Pattern object externals: ADDRESS SIZE TYPE PATH VALUE d5e5f290 16 java.util.regex.Pattern$Node .root.next.atom.next (object) d5e5f2a0 120 (something else) (somewhere else) (something else) d5e5f318 16 java.util.regex.Pattern$LastNode .root.next.next.next.next.next.next.next (object) d5e5f328 21664 (something else) (somewhere else) (something else) d5e647c8 24 java.lang.String .pattern (object) d5e647e0 112 [C .pattern.value [^, [, a, -, z, A, -, Z, 0, -, 9, _, ., +, -, ], +, @, [, a, -, z, A, -, Z, 0, -, 9, -, ], +, \, ., [, a, -, z, A, -, Z, 0, -, 9, -, ., ], +, $] d5e64850 448 (something else) (somewhere else) (something else) d5e64a10 72 java.util.regex.Pattern (object) d5e64a58 416 (something else) (somewhere else) (something else) d5e64bf8 16 java.util.regex.Pattern$Begin .root (object) d5e64c08 24 java.util.regex.Pattern$BitClass .root.next.atom.val$rhs (object) d5e64c20 272 [Z .root.next.atom.val$rhs.bits [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false] d5e64d30 24 java.util.regex.Pattern$1 .root.next.atom.val$lhs.val$lhs.val$lhs.val$lhs.val$lhs.val$lhs (object) d5e64d48 24 java.util.regex.Pattern$1 .root.next.atom.val$lhs.val$lhs.val$lhs.val$lhs.val$lhs.val$rhs (object) d5e64d60 24 java.util.regex.Pattern$5 .root.next.atom.val$lhs.val$lhs.val$lhs.val$lhs.val$lhs (object) d5e64d78 24 java.util.regex.Pattern$1 .root.next.atom.val$lhs.val$lhs.val$lhs.val$lhs.val$rhs (object) d5e64d90 24 java.util.regex.Pattern$5 .root.next.atom.val$lhs.val$lhs.val$lhs.val$lhs (object) d5e64da8 24 java.util.regex.Pattern$5 .root.next.atom.val$lhs.val$lhs.val$lhs (object) d5e64dc0 24 java.util.regex.Pattern$5 .root.next.atom.val$lhs.val$lhs (object) d5e64dd8 24 java.util.regex.Pattern$5 .root.next.atom.val$lhs (object) d5e64df0 24 java.util.regex.Pattern$5 .root.next.atom (object) d5e64e08 32 java.util.regex.Pattern$Curly .root.next (object) d5e64e28 24 java.util.regex.Pattern$Single .root.next.next (object) d5e64e40 24 java.util.regex.Pattern$BitClass .root.next.next.next.atom.val$rhs (object) d5e64e58 272 [Z .root.next.next.next.atom.val$rhs.bits [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false] d5e64f68 24 java.util.regex.Pattern$1 .root.next.next.next.atom.val$lhs.val$lhs.val$lhs (object) d5e64f80 24 java.util.regex.Pattern$1 .root.next.next.next.atom.val$lhs.val$lhs.val$rhs (object) d5e64f98 24 java.util.regex.Pattern$5 .root.next.next.next.atom.val$lhs.val$lhs (object) d5e64fb0 24 java.util.regex.Pattern$1 .root.next.next.next.atom.val$lhs.val$rhs (object) d5e64fc8 24 java.util.regex.Pattern$5 .root.next.next.next.atom.val$lhs (object) d5e64fe0 24 java.util.regex.Pattern$5 .root.next.next.next.atom (object) d5e64ff8 32 java.util.regex.Pattern$Curly .root.next.next.next (object) d5e65018 24 java.util.regex.Pattern$Single .root.next.next.next.next (object) d5e65030 24 java.util.regex.Pattern$BitClass .root.next.next.next.next.next.atom.val$rhs (object) d5e65048 272 [Z .root.next.next.next.next.next.atom.val$rhs.bits [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false] d5e65158 24 java.util.regex.Pattern$1 .root.next.next.next.next.next.atom.val$lhs.val$lhs.val$lhs.val$lhs (object) d5e65170 24 java.util.regex.Pattern$1 .root.next.next.next.next.next.atom.val$lhs.val$lhs.val$lhs.val$rhs (object) d5e65188 24 java.util.regex.Pattern$5 .root.next.next.next.next.next.atom.val$lhs.val$lhs.val$lhs (object) d5e651a0 24 java.util.regex.Pattern$1 .root.next.next.next.next.next.atom.val$lhs.val$lhs.val$rhs (object) d5e651b8 24 java.util.regex.Pattern$5 .root.next.next.next.next.next.atom.val$lhs.val$lhs (object) d5e651d0 24 java.util.regex.Pattern$5 .root.next.next.next.next.next.atom.val$lhs (object) d5e651e8 24 java.util.regex.Pattern$5 .root.next.next.next.next.next.atom (object) d5e65200 32 java.util.regex.Pattern$Curly .root.next.next.next.next.next (object) d5e65220 120 (something else) (somewhere else) (something else) d5e65298 24 java.util.regex.Pattern$Dollar .root.next.next.next.next.next.next (object)
__lb__lang-sh if [ ! "${somepath}" ] || [ ! "${otherstring}" ] || [ ! "${barstring}" ] ; then
__lb__lang-php class PHPFatalError { public function setHandler() { register_shutdown_function( } } function handleShutdown() { if (($error = error_get_last())) { ob_start(); echo "<pre>"; var_dump($error); echo "</pre>"; $message = ob_get_clean(); sendEmail($message); ob_start(); echo ob_flush(); exit(); } }
__lb__lang-perl my ( $osvername, $major, $minor, $id ) = Win32::GetOSVersion();
__lb__lang-cs static DateTimeOffset FromUnixTimeSeconds(long seconds) static DateTimeOffset FromUnixTimeMilliseconds(long milliseconds) long DateTimeOffset.ToUnixTimeSeconds() long DateTimeOffset.ToUnixTimeMilliseconds()
__lb__lang-hs instance Stateful (State st) st where get :: State st st get = State $ \ s -> (s, s) put :: st -> State st () put s = State $ \ _ -> ((), s)
__lb__lang-sh echo "export CATALINA_HOME="/opt/tomcat9"" >> /etc/environment
__lb__lang-java <dependency> <groupId>javax.validation</groupId> <artifactId>validation-api</artifactId> <version>1.1.0.Final</version> </dependency> <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-validator</artifactId> <version>5.4.1.Final</version> </dependency>
__lb__lang-hs data Tree a = Tree (Tree a) a (Tree a) instance Functor Tree where fmap f (Tree l m r) = Tree (fmap f l) (f m) (fmap f r)
__lb__lang-sh int main(int argc, char** argv) { long sum = 0; long i = 0; while(scanf("%ld", &i) == 1) { sum = sum + i; } printf("%ld\n", sum); return 0; }
__lb__lang-cs public static byte[] HexadecimalStringToByteArray_BestEffort(string input) { var outputLength = input.Length / 2; var output = new byte[outputLength]; var numeral = new char[2]; for (int i = 0; i < outputLength; i++) { input.CopyTo(i * 2, numeral, 0, 2); output[i] = Convert.ToByte(new string(numeral), 16); } return output; }
__lb__lang-c uintmax_t num = strtoumax(s, NULL, 10); if (num == UINTMAX_MAX && errno == ERANGE)
__lb__lang-hs {- class Foo a where whichOne :: a -> String instance Foo a where whichOne _ = "a" instance Foo [a] where whichOne _ = "[a]" -- | -- >>> main -- [a] main :: IO () main = putStrLn $ whichOne (undefined :: [Int])
__lb__lang-java package fatherpackage; public class Father { } ------------------------------------------- package sonpackage; public class Son extends Father { }
__lb__lang-java import java.util.*; import javax.swing.*; public class alphanumeric{ public static void main(String args[]){ String nval,lenval; int n,len; nval=JOptionPane.showInputDialog("Enter number of codes you require : "); n=Integer.parseInt(nval); lenval=JOptionPane.showInputDialog("Enter code length you require : "); len=Integer.parseInt(lenval); find(n,len); } public static void find(int n,int length) { String str1="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; StringBuilder sb=new StringBuilder(length); Random r = new Random(); System.out.println("\n\t Unique codes are \n\n"); for(int i=0;i<n;i++){ for(int j=0;j<length;j++){ sb.append(str1.charAt(r.nextInt(str1.length()))); } System.out.println(" "+sb.toString()); sb.delete(0,length); } } }
__lb__lang-sh ─━│┃┄┅┆┇┈┉┊┋┌┍┎┏ ┐┑┒┓└┕┖┗┘┙┚┛├┝┞┟ ┠┡┢┣┤┥┦┧┨┩┪┫┬┭┮┯ ┰┱┲┳┴┵┶┷┸┹┺┻┼┽┾┿ ╀╁╂╃╄╅╆╇╈╉╊╋╌╍╎╏ ═║╒╓╔╕╖╗╘╙╚╛╜╝╞╟ ╠╡╢╣╤╥╦╧╨╩╪╫╬╭╮╯ ╰╱╲╳╴╵╶╷╸╹╺╻╼╽╾╿ ▀▁▂▃▄▅▆▇█▉▊▋▌▍▎▏ ▐░▒▓▔▕▖▗▘▙▚▛▜▝▞▟ ■□▢▣▤▥▦▧▨▩▪▫▬▭▮▯ ▰▱▲△▴▵▶▷▸▹►▻▼▽▾▿ ◀◁◂◃◄◅◆◇◈◉◊○◌◍◎● ◐◑◒◓◔◕◖◗◘◙◚◛◜◝◞◟ ◠◡◢◣◤◥◦◧◨◩◪◫◬◭◮◯ ◰◱◲◳◴◵◶◷◸◹◺◻◼◽◾◿
__lb__lang-php $then = microtime(); myFunc(); $now = microtime(); echo sprintf("Elapsed: %f", $now-$then);
__lb__lang-php class Encoding { /** * http: * @param $string * @return null */ public static function detect_encoding($string) { static $list = [ foreach ($list as $item) { try { $sample = iconv($item, $item, $string); } catch (\Exception $e) { continue; } if (md5($sample) == md5($string)) { return $item; } } return null; } } $content = file_get_contents($file[ $encoding = Encoding::detect_encoding($content); if ($encoding != $result = iconv($encoding, } else { $result = $content; }
__lb__lang-perl use strict; use ExtUtils::Installed; my @modules; my $installed = ExtUtils::Installed->new(); if (scalar(@ARGV) > 0) { @modules = @ARGV; } else { @modules = $installed->modules(); } print "Module\tVersion\n"; foreach (@modules) { print $_ . "\t" . $installed->version($_) . "\n"; }
__lb__lang-java SortKeys sortKeys = new SortKeys(); sortKeys.addField("firstName") .addField("age", true); ListSorter listSorter = new ListSorter(); List sortedList = (List<Person>) listSorter.sortList(listToSort, sortKeys);
__lb__lang-java final class MapValueComparator<K,V extends Comparable<V>> implements Comparator<K> { private Map<K,V> map; private MapValueComparator() { super(); } public MapValueComparator(Map<K,V> map) { this(); this.map = map; } public int compare(K o1, K o2) { return map.get(o1).compareTo(map.get(o2)); } }
__lb__lang-java ValidationUtils.getNullValidator().addParam(plans, "plans").addParam(persons, "persons").validate();
__lb__lang-cpp Boy* p1 = &boy; p1 -> task(); Girl* p2 = &girl; p2 -> task();
__lb__lang-css *,*:before,*:after { box-sizing: border-box; } .window { position: relative; top: 20px; left: 50px; margin-top: 20px; width: 150px; height: 150px; } .window-header { position: absolute; top: -20px; height: 20px; border: 2px solid black; width: 100%; } ul { border: 5px dashed gray; height: 100%; }
__lb__lang-java System.getProperties().put( "server.port", 80 ); SpringApplication.run(App.class, args);
__lb__lang-cpp template<class T> std::string optionalToString(T* obj) { if constexpr (has_toString<T>) return obj->toString(); else return "toString not defined"; }
__lb__lang-c static int tcpOpen (tCommClass *tcp, char *fspec) { printf ("Opening TCP: %s\n", fspec); return 0; } static int tcpInit (tCommClass *tcp) { tcp->open = &tcpOpen; return 0; }
__lb__lang-c struct A { A(); int f(); }; int main() { std::cout << sizeof(A().f())<< std::endl; return 0; }
__lb__lang-cs var person = new Person { ... }; for (var i = 0; i < 1000000; i++) { personList.Add(person); } var watcher = new Stopwatch(); watcher.Start(); var copylist = personList.Select(CopyFactory.CreateCopyReflection).ToList(); watcher.Stop(); var elapsed = watcher.Elapsed;
__lb__lang-perl for ($i = 0; $i < 1.01; $i += 0.05) { printf "%.1f ",$i} 0.0 0.1 0.1 0.2 0.2 0.2 0.3 0.3 0.4 0.4 0.5 0.5 0.6 0.7 0.7 0.8 0.8 0.9 0.9 1.0 1.0
__lb__lang-cs using (System.IO.StringReader reader = new System.IO.StringReader(input)) { string line = reader.ReadLine(); }
__lb__lang-java @Around("execution(* my.package..*.*(..))") public Object logTime(ProceedingJoinPoint joinPoint) throws Throwable { StopWatch stopWatch = new StopWatch(); stopWatch.start(); Object retVal = joinPoint.proceed(); stopWatch.stop(); log.info(" execution time: " + stopWatch.getTotalTimeMillis() + " ms"); return retVal; }
__lb__lang-hs {- module Nat where data Nat = Z | S Nat data Parity = Even | Odd type family Flip (x :: Parity) :: Parity where Flip Even = Odd Flip Odd = Even data ParNat :: Parity -> * where PZ :: ParNat Even PS :: (x ~ Flip y, y ~ Flip x) => ParNat x -> ParNat (Flip x) halve :: ParNat Even -> Nat halve PZ = Z halve (PS a) = helper a where helper :: ParNat Odd -> Nat helper (PS b) = S (halve b)
__lb__lang-sh inquire () { echo -n "$1 [y/n]? " read answer finish="-1" while [ "$finish" = do finish="1" if [ "$answer" = then answer="" else case $answer in y | Y | yes | YES ) answer="y";; n | N | no | NO ) answer="n";; *) finish="-1"; echo -n read answer;; esac fi done } ... other stuff inquire "Install now?" ...
__lb__lang-cs class Room { public string sectionOne; public string sectionTwo; } Room r = new Room(); r.sectionOne = "enter";
__lb__lang-cpp void apply(std::function<void(int)> f) { f(10); f(20); f(30); } void output(int width) { int col; apply([width,&col](int data) { cout << data << ((++col % width) ? }); }
__lb__lang-css div { display: table; height: 100px; width: 100%; text-align: center; border: 2px dashed } span { display: table-cell; vertical-align: middle; }
__lb__lang-java for (TouchableObj obj : untouchedSet) { if (obj.isTouched()) { untouchedSet.remove(obj); touchedSt.add(obj); break; } }
__lb__lang-java public class RoomService { public Room findByName(String roomName) {...} public void persist(Room room) {...} }
__lb__lang-hs -- test.hs liftTup :: (x -> f x) -> (a, b) -> (f a, f b) liftTup liftFunc (t, v) = (liftFunc t, liftFunc v) ghci> :l test.hs Couldnt match expected type ...
__lb__lang-sh -e: any kind of archive -f: file -h: symbolic link -r: readable file -w: writable file -x: executable file -s: file size greater than zero
__lb__lang-golang bin/ streak todo pkg/ linux_amd64/ code.google.com/p/goauth2/ oauth.a github.com/nf/todo/ task.a src/ code.google.com/p/goauth2/ .hg/ oauth/ oauth.go oauth_test.go
__lb__lang-cs using System.Diagnostics; Debug.WriteLine("Send to debug output.");
__lb__lang-php $json = $output = json_validate($json); print_r($output);
__lb__lang-golang Benchmark_rmuller-4 100000 19246 ns/op Benchmark_peterSO-4 50000 28068 ns/op Benchmark_russ-4 50000 30007 ns/op Benchmark_ivan-4 50000 33694 ns/op Benchmark_yazu-4 50000 33372 ns/op Benchmark_yuku-4 50000 37556 ns/op Benchmark_simon-4 3000 426201 ns/op
__lb__lang-css width: calc(100% - 5px); height: calc(100% - 5px); padding: 5px; }
__lb__lang-cs class Phone { public string BasePart = "555-xxx-xxx"; } class User { public string Name = "Xxxxx"; public List<Phone> Phones; }
__lb__lang-cs public DrawableConstructor : IDrawableConstructor<Triangle>, IDrawableConstructor<Square>, IDrawableConstructor<Circle> { Triangle IDrawableConstructor<Triangle>.Construct(GraphicsDeviceManager manager) { return new Triangle(manager); } Square IDrawableConstructor<Square>.Construct(GraphicsDeviceManager manager) { return new Square(manager); } Circle IDrawableConstructor<Circle>.Construct(GraphicsDeviceManager manager) { return new Circle(manager); } }
__lb__lang-sh mkdir tempdir ret=$? if [ "$ret" == "0" ] then echo "dir present" else echo "dir not present" fi
__lb__lang-cpp inline std::string trim(const std::string &s) { auto wsfront=std::find_if_not(s.begin(),s.end(),[](int c){return std::isspace(c);}); auto wsback=std::find_if_not(s.rbegin(),s.rend(),[](int c){return std::isspace(c);}).base(); return (wsback<=wsfront ? std::string() : std::string(wsfront,wsback)); }
__lb__lang-java int [] intArray = new int [1]; will require 4 bytes. long [] longArray = new long [1]; will require 8 bytes.
__lb__lang-golang go install: no install location for .go files listed on command line (GOBIN not set)
__lb__lang-java LinkedList list = new LinkedList(); list.add(new MyObject()); MyObject myObject = (MyObject)list.get(0);
__lb__lang-java list.setOnCreateContextMenuListener(new OnCreateContextMenuListener() { public void onCreateContextMenu(ContextMenu menu, View v, ContextMenuInfo menuInfo) { } });
__lb__lang-cs using System; public class Genre { public string Name { get; set; } } public class MainClass { public static void Main() { Genre g1 = new Genre(); Genre g2 = new Genre(); Genre g3 = new Genre(); g1.Name = "Hip Hop"; g2.Name = "Rock"; g3.Name = "Country"; Console.WriteLine ("Genres: {0}, {1}, {2}", g1.Name, g2.Name, g3.Name); } }
__lb__lang-html <p style="color:red">Wrong (default spacing):</p> <div class=""> <span>Item-1</span> <span>Item-2</span> <span>Item-3</span> </div> <hr/> <p style="color:green">Correct (no-spacing):</p> <div class="no-spacing"> <span>Item-1</span> <span>Item-2</span> <span>Item-3</span> </div>
__lb__lang-golang package main func main () { var sessions = map[string] chan int{}; sessions["moo"] = make (chan int); _, ok := sessions["moo"]; if ok { delete(sessions, "moo"); } }
__lb__lang-cs OutputDebugStringW(L"Write this to Output window in VS14.");
__lb__lang-java Benchmark (n) Mode Cnt Score Error Units MyBenchmark.brackets 1000000000 avgt 5 380.889 ± 58.011 ms/op MyBenchmark.noBrackets 1000000000 avgt 5 512.464 ± 11.098 ms/op
__lb__lang-cs var obj = new Dictionary<string, object>(); obj["MyInt"] = 3; obj["MyString"] = "Foo"; Console.WriteLine(obj["MyString"]);
__lb__lang-cpp uint64_t builtin_popcnt1a(const uint64_t* buf, size_t len) { uint64_t cnt0, cnt1, cnt2, cnt3; cnt0 = cnt1 = cnt2 = cnt3 = 0; uint64_t val = buf[0]; __asm__ __volatile__ ( "1:\n\t" "popcnt %2, %1\n\t" "popcnt %2, %1\n\t" "popcnt %2, %1\n\t" "popcnt %2, %1\n\t" "subq $4, %0\n\t" "jnz 1b\n\t" : "+q" (len), "=q" (cnt0) : "q" (val) : ); __asm__ __volatile__ ( "1:\n\t" "popcnt %5, %1\n\t" "popcnt %5, %2\n\t" "popcnt %5, %3\n\t" "popcnt %5, %4\n\t" "subq $4, %0\n\t" "jnz 1b\n\t" : "+q" (len), "=q" (cnt0), "=q" (cnt1), "=q" (cnt2), "=q" (cnt3) : "q" (val) : ); return cnt0; }
__lb__lang-java import static java.util.Comparator.comparing; Collections.sort(list, comparing(MyObject::getStartDate));
__lb__lang-cs [Flags] public enum CompeteMetric { [StringValue("u")] Basic_UniqueVisitors = 1 , [StringValue("vi")] Basic_Visits = 2 , [StringValue("rank")] Basic_Rank = 4 }
__lb__lang-cs if (!Directory.Exists(subdir)) { Directory.CreateDirectory(subdir); }
__lb__lang-cs public override int GetHashCode() { return base.GetHashCode(); }
__lb__lang-cpp int main(int argc, char*argv[]) { const int p = argc; constexpr int r = 2^3; }
__lb__lang-cpp void my_malloc_failed_handler(); template <typename T> struct alloc { template <typename ...Args> static T *safe_malloc(Args&&... args) { void *mem = malloc(sizeof(T)); if (!mem) { my_malloc_failed_handler(); } return new (mem)T(std::forward(args)...); } };
__lb__lang-java import java.util.AbstractCollection; import java.util.Collection; import java.util.Iterator; import java.util.NoSuchElementException; public class DownCastCollection<E> extends AbstractCollection<E> implements Collection<E> { private Collection<? extends E> delegate; public DownCastCollection(Collection<? extends E> delegate) { super(); this.delegate = delegate; } @Override public int size() { return delegate ==null ? 0 : delegate.size(); } @Override public boolean isEmpty() { return delegate==null || delegate.isEmpty(); } @Override public boolean contains(Object o) { if(isEmpty()) return false; return delegate.contains(o); } private class MyIterator implements Iterator<E>{ Iterator<? extends E> delegateIterator; protected MyIterator() { super(); this.delegateIterator = delegate == null ? null :delegate.iterator(); } @Override public boolean hasNext() { return delegateIterator != null && delegateIterator.hasNext(); } @Override public E next() { if(!hasNext()) throw new NoSuchElementException("The iterator is empty"); return delegateIterator.next(); } @Override public void remove() { delegateIterator.remove(); } } @Override public Iterator<E> iterator() { return new MyIterator(); } @Override public boolean add(E e) { throw new UnsupportedOperationException(); } @Override public boolean remove(Object o) { if(delegate == null) return false; return delegate.remove(o); } @Override public boolean containsAll(Collection<?> c) { if(delegate==null) return false; return delegate.containsAll(c); } @Override public boolean addAll(Collection<? extends E> c) { throw new UnsupportedOperationException(); } @Override public boolean removeAll(Collection<?> c) { if(delegate == null) return false; return delegate.removeAll(c); } @Override public boolean retainAll(Collection<?> c) { if(delegate == null) return false; return delegate.retainAll(c); } @Override public void clear() { if(delegate == null) return; delegate.clear(); }
__lb__lang-golang package main import "fmt" type Runes []rune func (s Runes) Reverse() (cp Runes) { l := len(s); cp = make(Runes, l) for i := 0; i <= l/2; i++ { cp[i], cp[l-1-i] = s[l-1-i], s[i] } return cp } func (s Runes) String() string { return string(s) } func main() { input := "The quick brown 狐 jumped over the lazy 犬 +odd" r := Runes(input) output := r.Reverse() valid := string(output.Reverse()) == input fmt.Println(len(r), len(output), r, output.Reverse(), valid) }
__lb__lang-c void check(short *h,long *k) { *h=5; *k=6; if (*h == 5) printf("strict aliasing problem\n"); } int main(void) { long k[1]; check((short *)k,k); return 0; }
__lb__lang-cpp template <typename T> T min3(const T& a, const T& b, const T& c) { return std::min(std::min(a, b), c); } class levenshtein_distance { mutable std::vector<std::vector<unsigned int> > matrix_; public: explicit levenshtein_distance(size_t initial_size = 8) : matrix_(initial_size, std::vector<unsigned int>(initial_size)) { } unsigned int operator()(const std::string& s, const std::string& t) const { const size_t m = s.size(); const size_t n = t.size(); if (m == 0) { return n; } if (n == 0) { return m; } if (matrix_.size() < m + 1) { matrix_.resize(m + 1, matrix_[0]); } if (matrix_[0].size() < n + 1) { for (auto& mat : matrix_) { mat.resize(n + 1); } } unsigned int i, j; for (i = 1; i <= m; ++i) { matrix_[i][0] = i; } for (j = 1; j <= n; ++j) { matrix_[0][j] = j; } for (j = 1; j <= n; ++j) { for (i = 1; i <= m; ++i) { unsigned int substitution_cost = s[i - 1] == t[j - 1] ? 0 : 1; matrix_[i][j] = min3(matrix_[i - 1][j] + 1, matrix_[i][j - 1] + 1, matrix_[i - 1][j - 1] + substitution_cost); } } return matrix_[m][n]; } };
__lb__lang-java javac MemLeak.java java -Xmx2m -classpath .:big.jar MemLeak
__lb__lang-php class AlbumTrack extends AlbumTrackAbstract { ... proxy method. function getTitle() {} } class TrackAlbum extends AlbumTrackAbstract { ... proxy method. function getTitle() {} } class AlbumTrackAbstract { private $id; .... }
__lb__lang-hs f :: Int -> RealWorld -> (Int, RealWorld) -- input some states of the whole world, -- modify the whole world because of the a side effects, -- then return the new world.
__lb__lang-cpp std::this_thread::sleep_for(std::chrono::milliseconds(x));
__lb__lang-cs int age = new DateTime(DateTime.Now.Subtract(birthday).Ticks).Year-1;
__lb__lang-java index = (int) Math.floor(Math.random() * i.length);
__lb__lang-golang package main import ( "fmt" ) func romanNumeralDict() func(int) string { innerMap := map[int]string{ 1000: "M", 900: "CM", 500: "D", 400: "CD", 100: "C", 90: "XC", 50: "L", 40: "XL", 10: "X", 9: "IX", 5: "V", 4: "IV", 1: "I", } return func(key int) string { return innerMap[key] } } func main() { fmt.Println(romanNumeralDict()(10)) fmt.Println(romanNumeralDict()(100)) dict := romanNumeralDict() fmt.Println(dict(400)) }
__lb__lang-cpp bool iequals(const string& a, const string& b) { unsigned int sz = a.size(); if (b.size() != sz) return false; for (unsigned int i = 0; i < sz; ++i) if (tolower(a[i]) != tolower(b[i])) return false; return true; }
__lb__lang-php $myobject = arrayToObject($array); print_r($myobject);
__lb__lang-java /** * Reads the contents of a file line by line to a List * of Strings using the default encoding for the VM. */ static List readLines(File file)
__lb__lang-c /* Global variable declarations / definitions */ EXTERN int global_variable INITIALIZE(37); EXTERN struct oddball oddball_struct INITIALIZE({ 41, 43 });
__lb__lang-cs [HttpGet] public JsonResult UploadFile() { string _imgname = string.Empty; if (System.Web.HttpContext.Current.Request.Files.AllKeys.Any()) { var pic = System.Web.HttpContext.Current.Request.Files["MyImages"]; if (pic.ContentLength > 0) { var fileName = Path.GetFileName(pic.FileName); var _ext = Path.GetExtension(pic.FileName); _imgname = Guid.NewGuid().ToString(); var _comPath = Server.MapPath("/MyFolder") + _imgname + _ext; _imgname = "img_" + _imgname + _ext; ViewBag.Msg = _comPath; var path = _comPath; tblAssignment assign = new tblAssignment(); assign.Uploaded_Path = "/MyFolder" + _imgname + _ext; pic.SaveAs(path); } } return Json(Convert.ToString(_imgname), JsonRequestBehavior.AllowGet); }
__lb__lang-java public void saveDataInFile(String data) throws IOException { Path path = Paths.get(fileName); byte[] strToBytes = data.getBytes(); Files.write(path, strToBytes); }
__lb__lang-java package trials; import java.math.BigDecimal; public class Trials { public static void main(String[] args) { int yourScale = 10; System.out.println(BigDecimal.valueOf(0.42344534534553453453-0.42324534524553453453).setScale(yourScale, BigDecimal.ROUND_HALF_UP)); }
__lb__lang-hs Prelude Data.List> import Data.List Prelude Data.List> let numUniques Prelude Data.List> :t numUniques' numUniques
__lb__lang-cs List<int> items = new List<int>() { 2, 2, 3, 4, 2, 7, 3,3,3}; var result = items.Remove(2); var result1 = items.RemoveAll(lst => lst == 3); items.RemoveAt(3);
__lb__lang-cs var nums = new[]{1,2,3,4}; var sum = nums.Aggregate( (a,b) => a + b); Console.WriteLine(sum);
__lb__lang-sh if [ -z ${var+x} ]; then echo "var is unset"; else echo "var is set to
__lb__lang-cs foreach (var f in Directory.GetFileSystemEntries(path, "*", SearchOption.AllDirectories)) { var output = Regex.Replace(f, @"^" + path, newPath); if (File.Exists(f)) File.Copy(f, output, true); else Directory.CreateDirectory(output); }
__lb__lang-perl use strict; use warnings; no indirect; Syntax error! exit 0;
__lb__lang-cs return RedirectToAction(actionName: "Action", routeValues: new { id = 99 });
__lb__lang-java void foo(String a, Integer b) { } void foo(String a) { foo(a, 0); } foo("a", 2); foo("a");
__lb__lang-cs static void Main() { using (SingleInstanceMutex sim = new SingleInstanceMutex()) { if (sim.IsOtherInstanceRunning) { Application.Exit(); } } }
__lb__lang-java List<String> list = ..; String[] array = list.toArray(new String[0]);
__lb__lang-sh declare -A CPIDs; declare -a CMDs=("AAA" "BBB" "CCC" "DDD") CMD_TIME=15; for CMD in ${CMDs[*]}; do (echo "Started..$CMD"; sleep $CMD_TIME; echo "$CMD Done";) & CPIDs[$!]="$RN"; sleep 1; done GPID=$(ps -o pgid= $$); CNT_TIME_OUT=10; CNT=0; while (true); do declare -A TMP_CPIDs; for PID in "${!CPIDs[@]}"; do echo "Checking "${CPIDs[$PID]}"=>"$PID; if ps -p $PID > /dev/null ; then echo "-->"${CPIDs[$PID]}"=>"$PID" is running.."; TMP_CPIDs[$PID]=${CPIDs[$PID]}; else echo "-->"${CPIDs[$PID]}"=>"$PID" is completed."; fi done if [ ${ echo "All commands completed."; break; else unset CPIDs; declare -A CPIDs; for PID in "${!TMP_CPIDs[@]}"; do CPIDs[$PID]=${TMP_CPIDs[$PID]}; done unset TMP_CPIDs; if [ $CNT -gt $CNT_TIME_OUT ]; then echo ${CPIDs[@]}"PIDs not reponding. Timeout reached $CNT sec. killing all childern with GPID $GPID.."; kill -- -$GPID; fi fi CNT=$((CNT+1)); echo "waiting since $b secs.."; sleep 1; done exit;
__lb__lang-cpp using namespace std; int main() { time_t now = chrono::system_clock::to_time_t(chrono::system_clock::now()); cout << put_time(localtime(&now), "%F %T") << endl; return 0; }
__lb__lang-java Reader reader = null; try { reader = new FileReader(file); char buf[] = new char[8192]; int len; StringBuilder s = new StringBuilder(); while ((len = reader.read(buf)) >= 0) { s.append(buf, 0, len); byte[] byteArray = s.toString().getBytes(); } } catch(FileNotFoundException ex) { } catch(IOException e) { } finally { if (reader != null) { reader.close(); } }
__lb__lang-java com/abc/ic/api/model/domain/item/BizOrderTransDO.java com/abc/ic/api/model/domain/item/CardPassFeature.java com/abc/ic/api/model/domain/item/CategoryFeature.java com/abc/ic/api/model/domain/item/GoodsFeature.java com/abc/ic/api/model/domain/item/ItemFeature.java com/abc/ic/api/model/domain/item/ItemPicUrls.java com/abc/ic/api/model/domain/item/ItemSkuDO.java com/abc/ic/api/model/domain/serve/ServeCategoryFeature.java com/abc/ic/api/model/domain/serve/ServeFeature.java com/abc/ic/api/model/param/depot/DepotItemDTO.java com/abc/ic/api/model/param/depot/DepotItemQueryDTO.java com/abc/ic/api/model/param/depot/InDepotDTO.java com/abc/ic/api/model/param/depot/OutDepotDTO.java
__lb__lang-php $element = array( $elements = array($element); array_splice($array, $position, $length, $elements);
__lb__lang-perl if ( -e (getpwuid $>)[7] . "/foo.txt" ) { print "yes ,it exists!"; }
__lb__lang-java String s = "abc-def"; int p = s.indexOf( if (p >= 0) { String left = s.substring(0, p); String right = s.substring(p + 1); } else { }
__lb__lang-php foreach($array as $value) { if ($value === reset($array)) { echo } if ($value === end($array)) { echo } }
__lb__lang-sh # # # function assert_var_not_null() { local fatal var num_null=0 [[ "$1" = "-f" ]] && { shift; fatal=1; } for var in "$@"; do [[ -z "${!var}" ]] && printf ((num_null++)) done if ((num_null > 0)); then [[ "$fatal" ]] && exit 1 return 1 fi return 0 }
__lb__lang-cs string title = "string": title.ToUpper().Contains("STRING")
__lb__lang-cs MethodInfo methodA = methodCallExpr.Method.GetGenericMethodDefinition();
__lb__lang-sh LOCALPATH=$1 GITURL=$2 GITPASS=$3 cd $LOCALPATH BRANCH="$(git rev-parse --abbrev-ref HEAD)" echo echo git url = $GITURL echo branch = $BRANCH GITURL2="${GITURL/@/:$GITPASS@}" FOO="$(git ls-remote $GITURL2 -h $BRANCH 2> /dev/null)" if [ "$?" != "0" ]; then echo cannot get remote status exit 2 fi FOO_ARRAY=($FOO) BAR=${FOO_ARRAY[0]} echo [$BAR] LOCALBAR="$(git rev-parse HEAD)" echo [$LOCALBAR] echo if [ "$BAR" == "$LOCALBAR" ]; then echo No changes exit 0 else echo There are changes between local and remote repositories. exit 1 fi
__lb__lang-java public static String md5hashing(String text) { String hashtext = null; try { String plaintext = text; MessageDigest m = MessageDigest.getInstance("MD5"); m.reset(); m.update(plaintext.getBytes()); byte[] digest = m.digest(); BigInteger bigInt = new BigInteger(1,digest); hashtext = bigInt.toString(16); while(hashtext.length() < 32 ){ hashtext = "0"+hashtext; } } catch (Exception e1) { JOptionPane.showMessageDialog(null,e1.getClass().getName() + ": " + e1.getMessage()); } return hashtext; }
__lb__lang-cs public IEnumerable<Animals> AllSpotted() { return from a in Zoo.Animals where a.coat.HasSpots == true select a; } public IEnumerable<Animals> Feline(IEnumerable<Animals> sample) { return from a in sample where a.race.Family == "Felidae" select a; } public IEnumerable<Animals> Canine(IEnumerable<Animals> sample) { return from a in sample where a.race.Family == "Canidae" select a; }
__lb__lang-sh shopt -s globstar getlist() { for f in **/foo* do echo "File found: $f" done }
__lb__lang-php open("/usr/bin/php.ini", O_RDONLY) = -1 ENOENT (No such file or directory) open("/etc/php.ini", O_RDONLY) = 3 lstat("/etc/php.ini", {st_mode=S_IFREG|0644, st_size=69105, ...}) = 0
__lb__lang-cs var list = new List<T> (); fillList (list); var randomizedList = new List<T> (); var rnd = new Random (); while (list.Count != 0) { var index = rnd.Next (0, list.Count); randomizedList.Add (list [index]); list.RemoveAt (index); }
__lb__lang-cpp class foo { private: static bar i; }; bar foo::i = VALUE;
__lb__lang-cpp using namespace std; int i; int main() { string a = "abcde"; string b = a.substr(2,2); cout << "substring of a is: " << b << endl; return 0; }
__lb__lang-hs Prelude> let second x = head $ tail x Prelude> second "asdf" Prelude> let second = head . tail Prelude> second "asdf"
__lb__lang-java public static int getRandomInt(Random random, int min, int max) { return random.nextInt(max - min + 1) + min; }
__lb__lang-cpp int* triangle[5]; for (int i = 0; i < 5; ++i) { triangle[i] = new int[5 - i]; } for (int i = 0; i < 5; ++i) { delete[] triangle[i]; }
__lb__lang-java public class DownloadService extends IntentService { public static final int UPDATE_PROGRESS = 8344; public DownloadService() { super("DownloadService"); } @Override protected void onHandleIntent(Intent intent) { String urlToDownload = intent.getStringExtra("url"); ResultReceiver receiver = (ResultReceiver) intent.getParcelableExtra("receiver"); try { URL url = new URL(urlToDownload); URLConnection connection = url.openConnection(); connection.connect(); int fileLength = connection.getContentLength(); InputStream input = new BufferedInputStream(connection.getInputStream()); String path = "/sdcard/BarcodeScanner-debug.apk" ; OutputStream output = new FileOutputStream(path); byte data[] = new byte[1024]; long total = 0; int count; while ((count = input.read(data)) != -1) { total += count; Bundle resultData = new Bundle(); resultData.putInt("progress" ,(int) (total * 100 / fileLength)); receiver.send(UPDATE_PROGRESS, resultData); output.write(data, 0, count); } output.flush(); output.close(); input.close(); } catch (IOException e) { e.printStackTrace(); } Bundle resultData = new Bundle(); resultData.putInt("progress" ,100); receiver.send(UPDATE_PROGRESS, resultData); } }
__lb__lang-golang $ brew install go ==> Downloading https: Already downloaded: /Users/nigel/Library/Caches/Homebrew/go-1.7.1.sierra.bottle.tar.gz ==> Pouring go-1.7.1.sierra.bottle.tar.gz ==> Caveats As of go 1.2, a valid GOPATH is required to use the `go get` command: https: You may wish to add the GOROOT-based install location to your PATH: export PATH=$PATH:/usr/local/opt/go/libexec/bin ==> Summary 🍺 /usr/local/Cellar/go/1.7.1: 6,436 files, 250.6M $ go get golang.org/x/tools/cmd/godoc $ go get github.com/golang/lint/golint $ go get golang.org/x/tour/gotour $ gotour 2016/10/19 12:06:54 Serving content from /Users/nigel/.go/src/golang.org/x/tour 2016/10/19 12:06:54 A browser window should open. If not, please visit http: 2016/10/19 12:06:55 accepting connection from: 127.0.0.1:52958
__lb__lang-golang f, err := os.Open(fi) if err != nil { fmt.Printf("error opening file: %v\n",err) os.Exit(1) } r := bufio.NewReader(f) s, e := Readln(r) for e == nil { fmt.Println(s) s,e = Readln(r) }
__lb__lang-php $duration = 1; $result = ltrim( sprintf( if( $result ==
__lb__lang-java public abstract class AbstractFilter<T> { /** * Method that returns whether an item is to be included or not. * @param item an item from the given collection. * @return true if this item is to be included in the collection, false in case it has to be removed. */ protected abstract boolean excludeItem(T item); public void filter(Collection<T> collection) { if (CollectionUtils.isNotEmpty(collection)) { Iterator<T> iterator = collection.iterator(); while (iterator.hasNext()) { if (excludeItem(iterator.next())) { iterator.remove(); } } } } }
__lb__lang-java this.getClass().getClassLoader().getResource("").getPath()
__lb__lang-cs static readonly SortedList<double, Func<TimeSpan, string>> offsets = new SortedList<double, Func<TimeSpan, string>> { { 0.75, _ => "less than a minute"}, { 1.5, _ => "about a minute"}, { 45, x => $"{x.TotalMinutes:F0} minutes"}, { 90, x => "about an hour"}, { 1440, x => $"about {x.TotalHours:F0} hours"}, { 2880, x => "a day"}, { 43200, x => $"{x.TotalDays:F0} days"}, { 86400, x => "about a month"}, { 525600, x => $"{x.TotalDays / 30:F0} months"}, { 1051200, x => "about a year"}, { double.MaxValue, x => $"{x.TotalDays / 365:F0} years"} }; public static string ToRelativeDate(this DateTime input) { TimeSpan x = DateTime.Now - input; string Suffix = x.TotalMinutes > 0 ? " ago" : " from now"; x = new TimeSpan(Math.Abs(x.Ticks)); return offsets.First(n => x.TotalMinutes < n.Key).Value(x) + Suffix; }
__lb__lang-java try { String stringValue = "1234"; int integerValue = Integer.valueOf(stringValue); int integerValue = Integer.ParseInt(stringValue); stringValue = String.valueOf(integerValue); } catch (NumberFormatException ex) { System.out.println("Invalid input string!"); return; }
__lb__lang-java String readFile(String filename) { File f = new File(filename); try { byte[] bytes = Files.readAllBytes(f.toPath()); return new String(bytes,"UTF-8"); } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } return ""; }
__lb__lang-cs public static class ExtensionMethods { public static bool IsNumeric(this string s) { decimal d; return decimal.TryParse(s, System.Globalization.NumberStyles.Any, System.Globalization.CultureInfo.CurrentCulture, out d); } public static bool IsNumbersOnly(this string s) { if (s == null || s == string.Empty) return false; foreach (char c in s) { if (c < return false; } return true; } }
__lb__lang-cs <MessageEncryption> <EncryptionKey KeySize="256" Key="3q2+796tvu/erb7v3q2+796tvu/erb7v3q2+796tvu8="/> </MessageEncryption>
__lb__lang-golang func reverse(s string) string { l := len(s) m := make([]rune, l) for _, c := range s { l-- m[l] = c } return string(m) } func main() { str := "the quick brown 狐 jumped over the lazy 犬" fmt.Printf("reverse(%s): [%s]\n", str, reverse(str)) }
__lb__lang-java private String readStream(InputStream iStream) throws IOException { InputStreamReader iStreamReader = new InputStreamReader(iStream); BufferedReader bReader = new BufferedReader(iStreamReader); String line = null; StringBuilder builder = new StringBuilder(); while((line = bReader.readLine()) != null) { builder.append(line); builder.append("\n"); } bReader.close(); iStreamReader.close(); return builder.toString(); }
__lb__lang-hs [1 .. 10] >>= (\ a -> [1 .. 10] >>= (\ b -> let p = a * b in guard (even p) >> return p ) )
__lb__lang-java android.text.TextUtils.isDigitsOnly(CharSequence str)
__lb__lang-php <script> var myvar = "<?php echo $myVarValue;?>"; </script>
__lb__lang-cs public class Coordinate { public int X { get; set; } = 34; public int Y { get; } = 89; public int Z { get; } public Coordinate() { Z = 42; } }
__lb__lang-cs public static class ObjectCopier { public static T Clone<T>(T source) { if (typeof(T).IsSerializable == true) { return CloneUsingSerializable<T>(source); } if (IsDataContract(typeof(T)) == true) { return CloneUsingDataContracts<T>(source); } throw new ArgumentException("The type must be Serializable or use DataContracts.", "source"); } public static T CloneUsingSerializable<T>(T source) { if (!typeof(T).IsSerializable) { throw new ArgumentException("The type must be serializable.", "source"); } if (Object.ReferenceEquals(source, null)) { return default(T); } IFormatter formatter = new BinaryFormatter(); Stream stream = new MemoryStream(); using (stream) { formatter.Serialize(stream, source); stream.Seek(0, SeekOrigin.Begin); return (T)formatter.Deserialize(stream); } } public static T CloneUsingDataContracts<T>(T source) { if (IsDataContract(typeof(T)) == false) { throw new ArgumentException("The type must be a data contract.", "source"); } if (Object.ReferenceEquals(source, null)) { return default(T); } DataContractSerializer dcs = new DataContractSerializer(typeof(T)); using(Stream stream = new MemoryStream()) { using (XmlDictionaryWriter writer = XmlDictionaryWriter.CreateBinaryWriter(stream)) { dcs.WriteObject(writer, source); writer.Flush(); stream.Seek(0, SeekOrigin.Begin); using (XmlDictionaryReader reader = XmlDictionaryReader.CreateBinaryReader(stream, XmlDictionaryReaderQuotas.Max)) { return (T)dcs.ReadObject(reader); } } } } public static bool IsDataContract(Type type) { object[] attributes = type.GetCustomAttributes(typeof(DataContractAttribute), false); return attributes.Length == 1; } }
__lb__lang-java public static boolean isNumeric(String str) { try { int number = Integer.parseInt(str); return true; } catch (Exception e) { return false; } }
__lb__lang-java using namespace std; typedef unsigned long long int llint; class ISqrt { llint value; llint root; llint residue; llint onebit, x; public: ISqrt(llint v = 2) { Root(v); }; llint Root(llint r) { value = r; residue = value; root = 0; onebit = 1; onebit <<= (8*sizeof(llint)-2); while (onebit > residue) {onebit >>= 2; }; while (onebit > 0) { x = root ^ onebit; if (residue >= x) { residue -= x; root = x + onebit; }; root >>= 1; onebit >>= 2; }; return root; }; llint Residue() { return residue; }; }; int main() { llint big, i, q, r, v, delta; big = 0; big = (big-1); ISqrt b; for ( i = big; i > 0 ; i /= 7 ) { q = b.Root(i); r = b.Residue(); v = q*q+r; delta = v-i; cout << i << ": " << q << " ++ " << r << " V: " << v << " Delta: " << delta << "\n"; }; return 0; };
__lb__lang-sh FP="/hello/world/my/file/path/hello_my_filename.log" echo $FP | grep -oP "$regex" grep -oP "$regex" <<< $FP
__lb__lang-cs public class DefaultValuesTest { public DefaultValuesTest() { foreach (PropertyDescriptor property in TypeDescriptor.GetProperties(this)) { DefaultValueAttribute myAttribute = (DefaultValueAttribute)property.Attributes[typeof(DefaultValueAttribute)]; if (myAttribute != null) { property.SetValue(this, myAttribute.Value); } } } public void DoTest() { var db = DefaultValueBool; var ds = DefaultValueString; var di = DefaultValueInt; } [System.ComponentModel.DefaultValue(true)] public bool DefaultValueBool { get; set; } [System.ComponentModel.DefaultValue("Good")] public string DefaultValueString { get; set; } [System.ComponentModel.DefaultValue(27)] public int DefaultValueInt { get; set; } }
__lb__lang-cpp template<class T, class=void> struct TRAIT_NAME : std::false_type {}; \ template<class T> struct TRAIT_NAME< T, type_sink_t< decltype( __VA_ARGS__ ) > >: std::true_type {};
__lb__lang-php $file = new SplFileInfo($path); $ext = $file->getExtension();
__lb__lang-java d2j-dex2jar.sh -f -o output_jar.jar apk_to_decompile.apk
__lb__lang-java map.put(1, "Kamran"); map.put(2, "Ali"); map.put(5, "From"); map.put(4, "Dir"); map.put(3, "Lower"); for (Map.Entry m : map.entrySet()) { System.out.println(m.getKey() + " " + m.getValue()); }
__lb__lang-cpp class MyFoo { friend void callback(void * data, void * callData); void localCallback(); }
__lb__lang-hs import Control.Monad import Language.Haskell.Interpreter main = do f <- runInterpreter $ loadModules ["Test"] >> setTopLevelModules ["Test"] >> interpret "f" (as :: Int -> Int) case f of Left e -> print e Right r -> mapM_ (print . r) [1..10]
__lb__lang-php public function myContentGetter($sUrl) { ... code above ... return $iResult; }
__lb__lang-html <!DOCTYPE html> <html> <head> <META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE"> <META HTTP-EQUIV="PRAGMA" CONTENT="NO-CACHE"> <META HTTP-EQUIV="EXPIRES" CONTENT="Mon, 22 Jul 2002 11:12:01 GMT"> <style> body { margin: 200px; font: 12pt helvetica; } </style> </head> <body> </body> <script type="text/javascript"> var oldsite = var newSite = "https: var seconds = 20; var path = location.pathname; var srch = location.search; var uniq = Math.floor((Math.random() * 10000) + 1); var newPath = newSite + path + (srch === document.write ( document.write ( document.write ( document.write ( document.write ( function DelayRedirect() { var dvCountDown = document.getElementById("dvCountDown"); var lblCount = document.getElementById("lblCount"); dvCountDown.style.display = "block"; lblCount.innerHTML = seconds; setInterval(function () { seconds--; lblCount.innerHTML = seconds; if (seconds == 0) { dvCountDown.style.display = "none"; window.location = newPath; } }, 1000); } DelayRedirect() </script> </html>
__lb__lang-php $inventory = array(array("type"=>"fruit", "price"=>3.50), array("type"=>"milk", "price"=>2.90), array("type"=>"pork", "price"=>5.43), ); function pricesort($a, $b) { $a = $a[ $b = $b[ if ($a == $b) return 0; return ($a > $b) ? -1 : 1; } usort($inventory, "pricesort"); print("first: ".$inventory[0][ foreach($inventory as $i){ print($i[ }
__lb__lang-cs public static byte[] ToByteArrayFromHex(string hexString) { if (hexString.Length % 2 != 0) throw new ArgumentException("String must have an even length"); var array = new byte[hexString.Length / 2]; for (int i = 0; i < hexString.Length; i += 2) { array[i/2] = ByteFromTwoChars(hexString[i], hexString[i + 1]); } return array; } private static byte ByteFromTwoChars(char p, char p_2) { byte ret; if (p <= { ret = (byte) ((p - } else if (p <= { ret = (byte) ((p - } else if (p <= { ret = (byte) ((p - } else throw new ArgumentException("Char is not a hex digit: " + p,"p"); if (p_2 <= { ret |= (byte) ((p_2 - } else if (p_2 <= { ret |= (byte) ((p_2 - } else if (p_2 <= { ret |= (byte) ((p_2 - } else throw new ArgumentException("Char is not a hex digit: " + p_2, "p_2"); return ret; }
__lb__lang-c MOV r6, r2 CMP r6, r1 MOVLT r2, r1 MOVLT r1, r6 CMP r6, r0 MOVLT r1, r0 MOVLT r0, r6
__lb__lang-java DiskFileItemFactory factory = new DiskFileItemFactory(); factory.setRepository(new File(DataSources.TORRENTS_DIR())); ServletFileUpload fileUpload = new ServletFileUpload(factory); List<FileItem> items = fileUpload.parseRequest(req.raw()); FileItem item = items.stream() .filter(e -> "the_upload_name".equals(e.getFieldName())) .findFirst().get(); String fileName = item.getName(); item.write(new File(dir, fileName)); log.info(fileName);
__lb__lang-cpp char buf[N]; T obj; memcpy(buf, &obj, N); memcpy(&obj, buf, N);
__lb__lang-cpp double to_double(int x) { return x; } struct foo { double x; }; foo to_foo(double x) { foo r; r.x = x; return r; } std::vector<int> is = { 1, 2, 3 }; std::vector<foo> is1 = fmap(std::bind(to_foo, std::bind(to_double, _1)), is); std::vector<foo> is2 = fmap(to_foo, fmap(to_double, is));
__lb__lang-php function insertArrayAtPosition( $array, $insert, $position ) { /* $array : The initial array i want to modify $insert : the new array i want to add, eg array( $position : the position where the new array will be inserted into. Please mind that arrays start at 0 */ return array_slice($array, 0, $position, TRUE) + $insert + array_slice($array, $position, NULL, TRUE); }
__lb__lang-sh found=`find -maxdepth 1 -type d -name "myDirectory"` if [ -n "$found"] then fi
__lb__lang-php $datetime1 = date_create( $datetime2 = date_create( $interval = date_diff($datetime1, $datetime2); echo $interval->format(
__lb__lang-php $object = object; foreach ($arr as $key => $value) { $object->{$key} = $value; }
__lb__lang-java public class ForEachTest { public static void main(String[] args) { List<String> list = new ArrayList<String>(); list.add("111"); list.add("222"); for (String str : list) { System.out.println(str); } } }
__lb__lang-php $myDateTime = DateTime::createFromFormat( $newDateString = $myDateTime->format(
__lb__lang-java class Poly extends My { public static void main(String a[]) { My m = new My() {}; m.myMethod(); } }
__lb__lang-java import java.util.Random; /** Generate random integers in a certain range. */ public final class RandomRange { public static final void main(String... aArgs){ log("Generating random integers in the range 1..10."); int START = 1; int END = 10; Random random = new Random(); for (int idx = 1; idx <= 10; ++idx){ showRandomInteger(START, END, random); } log("Done."); } private static void showRandomInteger(int aStart, int aEnd, Random aRandom){ if ( aStart > aEnd ) { throw new IllegalArgumentException("Start cannot exceed End."); } long range = (long)aEnd - (long)aStart + 1; long fraction = (long)(range * aRandom.nextDouble()); int randomNumber = (int)(fraction + aStart); log("Generated : " + randomNumber); } private static void log(String aMessage){ System.out.println(aMessage); } }
__lb__lang-cpp template<class T> class scoped_ptr { T* ptr; public: explicit scoped_ptr(T* p=0) : ptr(p) {} ~scoped_ptr(); scoped_ptr(scoped_ptr const&) = delete; scoped_ptr& operator=(scoped_ptr const&) = delete; };
__lb__lang-java Mockito.doThrow(new Exception()).doNothing().when(instance).methodName();
__lb__lang-java public void myFunction(int a, int b, string c) { ... } public void myFunction(int a, int b) { myFunction(a, b, "test"); } public void myFunction(int a) { myFunction(a, 5); }
__lb__lang-hs do let printBoth s = putStrLn s >> hPutStrLn stderr s printBoth "Hello" -- Some other code printBoth "Goodbye"
__lb__lang-java System.out.println(Arrays.deepToString(table).replaceAll("],", "]," + System.getProperty("line.separator")));
__lb__lang-cs [HttpPost] public ActionResult Index(MyViewModel viewModel) { if (Request.Files.Count != 1 || Request.Files[0].ContentLength == 0) { ModelState.AddModelError("uploadError", "File return View(viewModel); } if (Request.Files[0].ContentLength > 1024 * 1024 * 4) { ModelState.AddModelError("uploadError", "File size can return View(viewModel); } if (Request.Files[0].ContentLength < 100) { ModelState.AddModelError("uploadError", "File size is too small"); return View(viewModel); } string extension = Path.GetExtension(Request.Files[0].FileName).ToLower(); if (extension != ".pdf" && extension != ".doc" && extension != ".docx" && extension != ".rtf" && extension != ".txt") { ModelState.AddModelError("uploadError", "Supported file extensions: pdf, doc, docx, rtf, txt"); return View(viewModel); } var fileName = Path.GetFileName(Request.Files[0].FileName); var path = Path.Combine(Server.MapPath("~/App_Data/uploads"), fileName); try { if (System.IO.File.Exists(path)) System.IO.File.Delete(path); Request.Files[0].SaveAs(path); } catch (Exception) { ModelState.AddModelError("uploadError", "Can } if(ModelState.IsValid) { return View("Success"); } return View(viewModel); }
__lb__lang-java import java.util.*; public class Main { public static void main(String[] args) { int size = 3; String[] array = new String[size]; Arrays.fill(array, ""); for(int i = 0; i <= 100; ) { array[i++%size] += i + " "; } for(String element: array) { System.out.println(element); } } }
__lb__lang-java String myvalue= getIntent().getExtras("passingkey");
__lb__lang-java String[] places = {"Buenos Aires", "Córdoba", "La Plata"};
__lb__lang-css .container::after { content: ""; display: block; clear: both; }
__lb__lang-c double var_f(f_args in){ int i_out = in.i ? in.i : 8; double x_out = in.x ? in.x : 3.14; return f_base(i_out, x_out); }
__lb__lang-cs private List<SimpleLogType> GetLogType() { List<SimpleLogType> logList = new List<SimpleLogType>(); SimpleLogType internalLogType; foreach (var logtype in Enum.GetValues(typeof(Log))) { internalLogType = new SimpleLogType(); internalLogType.Id = (int) (Log) Enum.Parse(typeof (Log), logtype.ToString(), true); internalLogType.Name = (Log)Enum.Parse(typeof(Log), logtype.ToString(), true); logList.Add(internalLogType); } return logList; }
__lb__lang-cpp std::vector<std::string> split(const std::string &text, char sep) { std::vector<std::string> tokens; std::size_t start = 0, end = 0; while ((end = text.find(sep, start)) != std::string::npos) { tokens.push_back(text.substr(start, end - start)); start = end + 1; } tokens.push_back(text.substr(start)); return tokens; }
__lb__lang-c typedef enum { myfalse = 0, mytrue = !myfalse } mybool;
__lb__lang-cs public static class StringExtensions { public static string ToAlphaNumeric(this string self, params char[] allowedCharacters) { return new string(Array.FindAll(self.ToCharArray(), c => char.IsLetterOrDigit(c) || allowedCharacters.Contains(c))); } }
__lb__lang-cs public static int CountOccurrences(this string s, string substring, bool aggressiveSearch = false) { if (string.IsNullOrEmpty(s) || string.IsNullOrEmpty(substring)) return 0; if (substring.Length > s.Length) return 0; int count = 0, n = 0; while ((n = s.IndexOf(substring, n, StringComparison.InvariantCulture)) != -1) { if (aggressiveSearch) n++; else n += substring.Length; count++; } return count; }
__lb__lang-c C11 - <stdalign.h> C11 - <stdatomic.h> C11 - <stdnoreturn.h> C99 - <tgmath.h> C11 - <threads.h>
__lb__lang-cs var results = from myRow in myDataTable.AsEnumerable() where myRow.Field<int>("RowNo") == 1 select myRow;
__lb__lang-golang myTypeInstance := MyType{ 7 } ... maybe some code doing other stuff ... var f interface{} = myTypeInstance _, ok := f.(GetterSetter) if !ok { t.Fail() }
__lb__lang-perl print "$_ => $my_hash{$_}\n" for (sort keys %my_hash);
__lb__lang-sh ./test-export.sh round 1 HELLO THERE HI THERE round 2 .
__lb__lang-cs public static IEnumerable<string> SplitToLines(this string input) { if (input == null) { yield break; } using (System.IO.StringReader reader = new System.IO.StringReader(input)) { string line; while( (line = reader.ReadLine()) != null) { yield return line; } } }
__lb__lang-cs public static IEnumerable<Product> GetAllProducts() { using (AdventureWorksEntities db = new AdventureWorksEntities()) { var products = from product in db.Product select product; foreach (Product product in products) { yield return product; } } }
__lb__lang-cs public class Grammar { public string JustNow { get; set; } public string MinutesAgo { get; set; } public string OneHourAgo { get; set; } public string HoursAgo { get; set; } public string Yesterday { get; set; } public string DaysAgo { get; set; } public string LastMonth { get; set; } public string MonthsAgo { get; set; } public string LastYear { get; set; } public string YearsAgo { get; set; } public string AgesAgo { get; set; } public TimeSpan AgesAgoThreshold { get; set; } private void Initialise(string justNow, string minutesAgo, string oneHourAgo, string hoursAgo, string yesterday, string daysAgo, string lastMonth, string monthsAgo, string lastYear, string yearsAgo, string agesAgo, TimeSpan agesAgoThreshold) { ... } }
__lb__lang-java public final static String[] mySplit(final String s)
__lb__lang-java List<String> newList = new ArrayList<String>(Arrays.asList((listOne.toString().subString(1, listOne.length() - 1) + ", " + listTwo.toString().subString(1, listTwo.length() - 1)).split(", ")));
__lb__lang-golang (main.Project) { Id: (int64) 0, Title: (string) (len=5) "world", Name: (string) (len=5) "hello", Data: (string) "", Commits: (string) "" }
__lb__lang-cs if(results != null) var foo = results["ColName"].ToString()
__lb__lang-c template<class T> T reverse_bits(T in) { T bit = static_cast<T>(1) << (sizeof(T) * 8 - 1); T out; for (out = 0; bit && in; bit >>= 1, in >>= 1) { if (in & 1) { out |= bit; } } return out; }
__lb__lang-java JFileChooser chooser = new JFileChooser(); int returnVal = chooser.showSaveDialog(this); if (returnVal == JFileChooser.APPROVE_OPTION) { FileOutputStream stream = null; PrintStream out = null; try { File file = chooser.getSelectedFile(); stream = new FileOutputStream(file); String text = "Your String goes here"; out = new PrintStream(stream); out.print(text); } catch (Exception ex) { } finally { try { if(stream!=null) stream.close(); if(out!=null) out.close(); } catch (Exception ex) { } } }
__lb__lang-cs MarketDevEntities db = new MarketDevEntities(); IEnumerable<WebLog> first = db.WebLogs; var second = first.Where(c => c.DurationSeconds > 10); var third = second.Where(c => c.WebLogID > 100); var result = third.Where(c => c.EmailAddress.Length > 11); Console.Write(result.First().UserName);
__lb__lang-cs private unsafe static bool EqualsHelper(String strA, String strB) { Contract.Requires(strA != null); Contract.Requires(strB != null); Contract.Requires(strA.Length == strB.Length); int length = strA.Length; fixed (char* ap = &strA.m_firstChar) fixed (char* bp = &strB.m_firstChar) { char* a = ap; char* b = bp; while (length >= 12) { if (*(long*)a != *(long*)b) return false; if (*(long*)(a+4) != *(long*)(b+4)) return false; if (*(long*)(a+8) != *(long*)(b+8)) return false; a += 12; b += 12; length -= 12; } while (length >= 10) { if (*(int*)a != *(int*)b) return false; if (*(int*)(a+2) != *(int*)(b+2)) return false; if (*(int*)(a+4) != *(int*)(b+4)) return false; if (*(int*)(a+6) != *(int*)(b+6)) return false; if (*(int*)(a+8) != *(int*)(b+8)) return false; a += 10; b += 10; length -= 10; } while (length > 0) { if (*(int*)a != *(int*)b) break; a += 2; b += 2; length -= 2; } return (length <= 0); } }
__lb__lang-css .container { overflow: hidden; _overflow: visible; _zoom: 1; }
__lb__lang-css .clearFix:after { content: ""; display: table; clear: both; }
__lb__lang-golang func Exists(name string) (bool, error) { err := os.Stat(name) if os.IsNotExist(err) { return false, nil } return err != nil, err }
__lb__lang-cpp std::string ssystem (const char *command) { char tmpname [L_tmpnam]; std::tmpnam ( tmpname ); std::string scommand = command; std::string cmd = scommand + " >> " + tmpname; std::system(cmd.c_str()); std::ifstream file(tmpname, std::ios::in ); std::string result; if (file) { while (!file.eof()) result.push_back(file.get()) ; file.close(); } remove(tmpname); return result; } int main(int argc, char *argv[]) { std::string bash = "FILETWO=/cygdrive/c/*\nfor f in $FILETWO\ndo\necho \"$f\"\ndone "; std::string in; std::string s = ssystem(bash.c_str()); std::istringstream iss(s); std::string line; while (std::getline(iss, line)) { std::cout << "LINE-> " + line + " length: " << line.length() << std::endl; } std::cin >> in; return 0; }
__lb__lang-java su - echo "deb http: echo "deb-src http: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 apt-get update apt-get install --yes oracle-java7-installer exit
__lb__lang-css input[type="checkbox"] { width: 24px; height: 24px; vertical-align: bottom; } label.checkbox { vertical-align: top; line-height: 24px; margin: 2px 0; display: block; height: 24px; }
__lb__lang-cs public enum time_zone_enum { [EnumMember(Value = "Europe/London")] EuropeLondon, [EnumMember(Value = "US/Alaska")] USAlaska }
__lb__lang-golang package main import ( "fmt" "reflect" ) func main() { b := true s := "" n := 1 f := 1.0 a := []string{"foo", "bar", "baz"} fmt.Println(reflect.TypeOf(b)) fmt.Println(reflect.TypeOf(s)) fmt.Println(reflect.TypeOf(n)) fmt.Println(reflect.TypeOf(f)) fmt.Println(reflect.TypeOf(a)) }
__lb__lang-cs private static int InternalInStrText(int lStartPos, string sSrc, string sFind) { int num = sSrc == null ? 0 : sSrc.Length; if (lStartPos > num || num == 0) return -1; if (sFind == null || sFind.Length == 0) return lStartPos; else return Utils.GetCultureInfo().CompareInfo.IndexOf(sSrc, sFind, lStartPos, CompareOptions.IgnoreCase | CompareOptions.IgnoreKanaType | CompareOptions.IgnoreWidth); }
__lb__lang-php array (size=3) array (size=3) 0 => string 1 => string 2 => string array (size=3) 0 => string 1 => string 2 => string array (size=3) 0 => string 1 => string 2 => string
__lb__lang-php ; Default Value: On ; Development Value: Off ; Production Value: Off ; http: ;short_open_tag=Off <--Comment this out ; XAMPP for Linux is currently old fashioned short_open_tag = On <--Uncomment this
__lb__lang-java public static boolean isJsonDate( char[] charArray, int start, int to ) { boolean valid = true; final int length = to -start; if (length != JSON_TIME_LENGTH) { return false; } valid &= (charArray [ start + 19 ] == if (!valid) { return false; } valid &= (charArray[ start +4 ] == (charArray[ start +7 ] == (charArray[ start +10 ] == (charArray[ start +13 ] == (charArray[ start +16 ] == return valid; }
__lb__lang-cs static class Extensions { public static IList<T> Clone<T>(this IList<T> listToClone) where T: ICloneable { return listToClone.Select(item => (T)item.Clone()).ToList(); } }
__lb__lang-html <select> <option value="" selected disabled hidden>Choose here</option> <option value="1">One</option> <option value="2">Two</option> <option value="3">Three</option> <option value="4">Four</option> <option value="5">Five</option> </select>
__lb__lang-java public class SomeClass{ int number; String someString; public SomeClass(){ number = 0; } public SomeClass(int number){ this(); this.setNumber(number); } public SomeClass(int number, String someString){ this(number); } public void setNumber(int number){ this.number = number; } public void setString(String someString){ this.someString = someString; } }
__lb__lang-java private void foo(Object bar) { bar = null; } public static void main(String[] args) { String baz = "Hah!"; foo(baz); System.out.println(baz); }
__lb__lang-cs public class Color { public static readonly Color Black = new Color(0, 0, 0); public static readonly Color White = new Color(255, 255, 255); public static readonly Color Red = new Color(255, 0, 0); public static readonly Color Green = new Color(0, 255, 0); public static readonly Color Blue = new Color(0, 0, 255); private byte red, green, blue; public Color(byte r, byte g, byte b) { red = r; green = g; blue = b; } }
__lb__lang-java { "id" : "junk", "stuff" : "things" } MyClass instance = objectMapper.readValue(json, MyClass.class);
__lb__lang-hs vV :: Vary v -> Z b v x y -> V v (Z b X x y) (Z b Y x y) vV VX z = XX z vV VY z = YY z
__lb__lang-java public class Rectangle { private int x, y; private int width, height; public Rectangle() { this(1, 1); } public Rectangle(int width, int height) { this( 0,0,width, height); } public Rectangle(int x, int y, int width, int height) { this.x = x; this.y = y; this.width = width; this.height = height; } }
__lb__lang-sh START=$(date +%s) zcat $1 | wc -L END=$(date +%s) DIFF=$(( $END - $START )) echo "It took $DIFF seconds" START=$(date +%s) zcat $1 | awk END=$(date +%s) DIFF=$(( $END - $START )) echo "It took $DIFF seconds"
__lb__lang-hs {- TypeOperators, FlexibleInstances, RankNTypes, ScopedTypeVariables, StandaloneDeriving, UndecidableInstances
__lb__lang-cpp std::map <int, int> mymap = { std::pair <int, int> (1, 1), std::pair <int, int> (2, 2), std::pair <int, int> (2, 2) };
__lb__lang-cpp using namespace std; string replace(string word, string target, string replacement){ int len, loop=0; string nword="", let; len=word.length(); len--; while(loop<=len){ let=word.substr(loop, 1); if(let==target){ nword=nword+replacement; }else{ nword=nword+let; } loop++; } return nword; } int main() { string word; cout<<"Enter Word: "; cin>>word; cout<<replace(word, "x", "y")<<endl; return 0; }
__lb__lang-cpp $ g++ src1.o src2.o -o prog src2.o: In function `print() src2.cpp:(.text+0x6): undefined reference to `local_var_name' collect2: error: ld returned 1 exit status
__lb__lang-c int arr[10]; ... foo(arr); ... void foo(int *arr) { ... }
__lb__lang-cs private int _quantity; private int _price; public int Quantity { get { return _quantity; } set { SetField(ref _quantity, value, () => Quantity, () => Total); } } public int Price { get { return _price; } set { SetField(ref _price, value, () => Price, () => Total); } } public int Total { get { return _price * _quantity; } }
__lb__lang-java int random = minimum + Double.valueOf(Math.random()*(maximum-minimum )).intValue();
__lb__lang-golang { "lastname": "Three", "name": { "firstname": "One", "inside": { "a": { "b": { "c": "goo" } } }, "lastname": "Two" }, "opt1": "var" }
__lb__lang-cs JsonConvert.DefaultSettings = (() => { var settings = new JsonSerializerSettings(); settings.Converters.Add(new StringEnumConverter { CamelCaseText = true }); return settings; });
__lb__lang-c struct timespec nanos; clock_gettime(CLOCK_MONOTONIC, &nanos) srand(nanos.tv_nsec | getHashOfString(outputName));
__lb__lang-sh if [ -d "$DIRECTORY" ] && [ -x "$DIRECTORY" ] ; then cd $DIRECTORY pwd fi
__lb__lang-perl use strict; use warnings; use Time::HiRes qw(usleep nanosleep); usleep(1000); nanosleep(1000000);
__lb__lang-java List<Person> beerDrinkers = select(persons, having(on(Person.class).getAge(), greaterThan(16)));
__lb__lang-sh find dir -not \( -path "dir1" -o -path "dir2" -prune \) -type f
__lb__lang-cpp class SingletonClass { public: static SingletonClass* Instance() { static SingletonClass* instance = new SingletonClass(); return instance; } void Relocate(int X, int Y, int Z); private: SingletonClass(); ~SingletonClass(); };
__lb__lang-cs public Session CreateSession() { var session = new Session(); _accountSessionDataModel.Sessions.Add(session); _accountSessionDataModel.SaveChanges(); }
__lb__lang-java public void test() { Set<String> flavors = new HashSet<String>() { { add("vanilla"); add("strawberry"); add("chocolate"); add("butter pecan"); } }; }
__lb__lang-c void print_ulong_bin(const unsigned long * const var, int bits) { int i; if( (bits > 64) || (bits <= 0) ) if( (bits > 32) || (bits <= 0) ) return; for(i = 0; i < bits; i++) { printf("%lu", (*var >> (bits - 1 - i)) & 0x01); } }
__lb__lang-java Substrings length:17 Str[0]: Str[1]:String Str[2]: String Str[3]: String Str[4]: String Str[5]: String Str[6]: String Str[7]: Str[8]:String Str[9]:String Str[10]: String Str[11]: String Str[12]: Str[13]:String Str[14]:String Str[15]:String Str[16]:String
__lb__lang-sh ... find: ‘/mnt/Backups/rsnapshot_backups/monthly.0/snapshot_root/var/lib/udisks2’: Permission denied ...
__lb__lang-java URL resource = contextClassLoader.getResource("res");
__lb__lang-cpp int i; i = 2; switch(i) { case 1: int k; break; case 2: k = 1; cout<<k<<endl; break; }
__lb__lang-php <?php error_reporting(E_ALL); ini_set( echo "Testing ?>
__lb__lang-perl my $boolean = 0; if ( $boolean ) { print "$boolean evaluates to true\n"; } else { print "$boolean evaluates to false\n"; }
__lb__lang-cs StatusEnum MyStatus = "Active".ToEnum(StatusEnum.None);
__lb__lang-golang type A struct { FooBar string FooBaz string More string `json:"more"` } func (a *A) UnmarshalJSON(b []byte) error { var f interface{} json.Unmarshal(b, &f) m := f.(map[string]interface{}) foomap := m["foo"] v := foomap.(map[string]interface{}) a.FooBar = v["bar"].(string) a.FooBaz = v["baz"].(string) return nil }
__lb__lang-java @java.lang.annotation.Documented @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) @java.lang.annotation.Target({java.lang.annotation.ElementType.FIELD, java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.PARAMETER, java.lang.annotation.ElementType.LOCAL_VARIABLE}) public @interface Nullable { }
__lb__lang-cpp template<typename T> typename std::remove_reference<T>::type&& move(T&& t) { return static_cast<typename std::remove_reference<T>::type&&>(t); }
__lb__lang-perl <table name="content_analyzer" primary-key="id"> <type="global" /> </table> <table name="content_analyzer2" primary-key="id"> <type="global" /> </table> <table name="content_analyzer_items" primary-key="id"> <type="global" /> </table>
__lb__lang-php function get_query_string(){ $arr = explode("?",$_SERVER[ if (count($arr) == 2){ return ""; }else{ return "?".end($arr)."<br>"; } } $query_string = get_query_string();
__lb__lang-sh find . -name *.php -or -path "./vendor" -prune -or -path "./app/cache" -prune
__lb__lang-php <?php /** * Comparison of two PHP objects == === * Checks for * 1. References yes yes * 2. Instances with matching attributes and its values yes no * 3. Instances with different attributes yes no **/ // class Foo { public $foobar = 1; public function createNewProperty($name, $value) { $this->{$name} = $value; } } class Bar { } // echo "1. Object handles or references (both == and ===) <br />"; $bar = new Foo(); $bar2 = new Foo(); $baz = clone $bar; $qux = $bar; $norf = new Bar(); echo "bar"; var_dump($bar); echo "baz"; var_dump($baz); echo "qux"; var_dump($qux); echo "bar2"; var_dump($bar2); echo "norf"; var_dump($norf); echo var_dump($bar == $bar2); echo var_dump($bar === $bar2); echo var_dump($bar == $baz); echo var_dump($bar === $baz); echo var_dump($bar == $qux); echo var_dump($bar === $qux); echo var_dump($bar == $norf); echo var_dump($bar === $norf); echo "2. Instances with matching attributes and its values (only ==) <br />"; $baz->foobar = 2; echo echo echo echo var_dump($bar == $baz); $baz->foobar = 1; echo echo echo echo var_dump($bar == $baz); $qux->foobar = 2; echo echo echo echo var_dump($bar == $qux); echo "3. Instances with different attributes (only ==) <br />"; $name = $value = null; $baz->createNewProperty($name, $value); echo var_dump($baz); $baz->foobar = 2; echo echo echo echo var_dump($bar == $baz); var_dump($bar); var_dump($baz); ?>
__lb__lang-css div.cn { position: relative; width: 200px; height: 200px; background: gray; text-align: center; } div.inner { position: absolute; top: 50%; left: 50%; width: 100px; height: 100px; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); background: red; }
__lb__lang-java export JAVA_HOME=/Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin/Contents/Home;
__lb__lang-c double _pow(double a, double b) { double c = 1; for (int i=0; i<b; i++) c *= a; return c; } double _fact(double x) { double ret = 1; for (int i=1; i<=x; i++) ret *= i; return ret; } double _sin(double x) { double y = x; double s = -1; for (int i=3; i<=100; i+=2) { y+=s*(_pow(x,i)/_fact(i)); s *= -1; } return y; } double _cos(double x) { double y = 1; double s = -1; for (int i=2; i<=100; i+=2) { y+=s*(_pow(x,i)/_fact(i)); s *= -1; } return y; } double _tan(double x) { return (_sin(x)/_cos(x)); }
__lb__lang-hs Prelude> import Data.List Prelude Data.List> concat (intersperse " " ["is","there","such","a","function","?"]) "is there such a function ?"
__lb__lang-css nav { display: inline-block; text-align: left; } ul { display: inline; } ul { padding: 0; } body { width: 420px; } body { background: margin: 1em auto; } button { display: block; } nav { background: margin: 1rem auto; padding: 0.5rem; } li { display: inline-block; width: 40px; height: 20px; border: solid thin margin: 4px; background: text-align: center; }
__lb__lang-php i) $Array = array("test1","test2","test3","test3"); unset($Array[2]); ii) $Array = array("test1","test2","test3","test3"); array_pop($Array); iii) $Array = array("test1","test2","test3","test3"); array_splice($Array,1,2); iv) $Array = array("test1","test2","test3","test3"); array_shift($Array);
__lb__lang-c for (;;) { size_t n = fread(buf, 1, bufsize, infile); consume(buf, n); if (n < bufsize) { break; } }
__lb__lang-hs -- pseudo types ($) :: forall a (b :: TYPE Lifted). (a -> b) -> a -> b ($) :: forall a (b :: TYPE Unlifted). (a -> b) -> a -> b
__lb__lang-cs public List<string> GetPropertiesNameOfClass(object pObject) { List<string> propertyList = new List<string>(); if (pObject != null) { foreach (var prop in pObject.GetType().GetProperties()) { propertyList.Add(prop.Name); } } return propertyList; }
__lb__lang-java public class Stopwatch { static long startTime; static long splitTime; static long endTime; public Stopwatch() { start(); } public void start() { startTime = System.currentTimeMillis(); splitTime = System.currentTimeMillis(); endTime = System.currentTimeMillis(); } public void split() { split(""); } public void split(String tag) { endTime = System.currentTimeMillis(); System.out.println("Split time for [" + tag + "]: " + (endTime - splitTime) + " ms"); splitTime = endTime; } public void end() { end(""); } public void end(String tag) { endTime = System.currentTimeMillis(); System.out.println("Final time for [" + tag + "]: " + (endTime - startTime) + " ms"); } }
__lb__lang-c gcc -std=c90 -pedantic ... gcc -std=c99 -pedantic gcc -std=c11 -pedantic
__lb__lang-cs your_contorl.Color = DirectCast(ColorConverter.ConvertFromString("
__lb__lang-hs feed(f, <x, messages>) := let <y, message> = f(x) in <y, messages message>
__lb__lang-sh yournumber=1120 if [ $(echo "$yournumber" | grep -qE echo "Error: not a number." else echo "Valid number." fi
__lb__lang-sh template= repo forall -c $(printf "${template}" "${variable}")
__lb__lang-cpp template<class T> void serialize_imp(std::ostream& os, T const& obj, int, int(*)[sizeof((os << obj),0)] = 0) { os << obj; }
__lb__lang-php function objectToArray($d) { if (is_object($d)) { $d = get_object_vars($d); } if (is_array($d)) { /* * Return array converted to object * Using __FUNCTION__ (Magic constant) * for recursive call */ return array_map(__FUNCTION__, $d); } else { return $d; } }
__lb__lang-cs MyType source = new MyType(); Mapper.CreateMap<MyType, MyType>(); MyType target = Mapper.Map<MyType, MyType>(source);
__lb__lang-java Map<Integer,Item> map = IntStream.range(0,items.size()) .boxed() .collect(Collectors.toMap (i -> i, i -> items.get(i)));
__lb__lang-java String content = new String(Files.readAllBytes(Paths.get(filename)), "UTF-8");
__lb__lang-c template<typename T, size_t SIZE> size_t getSize(T (&)[SIZE]) { return SIZE; }
__lb__lang-java public class Fruit{} public class Melon extends Fruit{} public class WaterMelon extends Melon{}
__lb__lang-hs data Pipe a b r = Pure r | Await (a -> Pipe a b r) | Yield !b (Pipe a b r)
__lb__lang-cs public class TempVM : BaseViewModel { private int _intP; public int IntP { get { return _intP; } set { Set<int>(ref _intP, value); } } }
__lb__lang-css div { background-color: blue; width: 10%; transition: background-color 0.5s, width 0.5s; font-size: 0; } div:hover { width: 20%; background-color: red; } img { width: 100%; height: auto; visibility: hidden; }
__lb__lang-java creating bean B: com.xxx.B@5e5a50 creating bean C: com.xxx.C@54a328 creating bean A: com.yyy.A@a3d4cf
__lb__lang-c char *strcat_const(const char *str1,const char *str2){ static char buffer[MAX_STRING_LENGTH]; strncpy(buffer,str1,MAX_STRING_LENGTH); if(strlen(str1) < MAX_STRING_LENGTH){ strncat(buffer,str2,MAX_STRING_LENGTH - strlen(buffer)); } buffer[MAX_STRING_LENGTH - 1] = return buffer; } int main(int argc,char *argv[]){ printf("%s",strcat_const("Hello ","world")); return 0; }
__lb__lang-cs class Genre{ private string genre; public string getGenre() { return this.genre; } public void setGenre(string theGenre) { this.genre = theGenre; } } genre g1 = new Genre(); g1.setGenre("Female"); g1.getGenre();
__lb__lang-golang func Reverse(s string) string { size := len(s) buf := make([]byte, size) for start := 0; start < size; { r, n := utf8.DecodeRuneInString(s[start:]) start += n utf8.EncodeRune(buf[size-start:], r) } return string(buf) } const ( s = "The quick brown 狐 jumped over the lazy 犬" reverse = "犬 yzal eht revo depmuj 狐 nworb kciuq ehT" ) func TestReverse(t *testing.T) { if Reverse(s) != reverse { t.Error(s) } } func BenchmarkReverse(b *testing.B) { for i := 0; i < b.N; i++ { Reverse(s) } }
__lb__lang-c 1) NSLog(@"NSStringFromCGPoint = %@", NSStringFromCGRect(cgPointValue));
__lb__lang-java org.apache.commons.lang3.time.StopWatch sw = new StopWatch(); sw.start(); Thread.sleep(1000 * 4); sw.stop(); System.out.println("Apache StopWatch : "+ millisToShortDHMS(sw.getTime()) );
__lb__lang-cpp TextureHandle htex = CreateTexture(128, 128, A8R8G8B8, string("Checkerboard"));
__lb__lang-php function random_string($length){ return substr(str_repeat(md5(rand()), ceil($length/32)), 0, $length); }
__lb__lang-golang GOPATH=/home/user/go /home/user/go/ src/ foo/ bar/ (go code in package bar) x.go quux/ (go code in package main) y.go bin/ quux (installed command) pkg/ linux_amd64/ foo/ bar.a (installed package object)
__lb__lang-html var height = $(" var width = $(" var docHeight = $(document).height(); var docWidth = $(document).width();
__lb__lang-cs var myString = String.Format( "hello " + "world" + " i am {0}" + " and I like {1}.", animalType, animalPreferenceType );
__lb__lang-cpp std::vector<int> v(10); std::vector<int>::iterator it = v.begin() + 5; std::insert_iterator<std::vector<int> > it_ins(v, it); for (unsigned n = 20; n > 0; --n) *it_ins++ = rand();
__lb__lang-sh SUDO= if (( $EUID != 0 )); then SUDO= fi $SUDO a_command
__lb__lang-sh TIME=10 echo "Time taken = $TIMEsecs" echo "Time taken = ${TIME}secs"
__lb__lang-golang package main import ( "io/ioutil"; ) func main() { contents,_ := ioutil.ReadFile("plikTekstowy.txt") println(string(contents)) ioutil.WriteFile("filename", contents, 0644) }
__lb__lang-sh commondirpart () { result="" while test ${ if test "${1%${1 break fi result="$result${1%${1 set -- "${1 done case "$result" in (""|*/) ;; (*) result="${result%/*}/";; esac } # dir2dotdot () { OLDIFS="$IFS" IFS="/" result="" for dir in $1; do result="$result../" done result="${result%/}" IFS="$OLDIFS" } relativepath () { case "$1" in (* printf (/*) from="${1 (*) printf esac case "$2" in (* printf (/*) to="${2 (*) printf esac case "$to" in ("$from") result=".";; ("$from"/*) result="${to ("") dir2dotdot "$from";; (*) case "$from" in ("$to"/*) dir2dotdot "${from (*) commondirpart "$from" "$to" common="$result" dir2dotdot "${from result="$result/${to esac ;; esac } set -f set -x cat <<EOF | / / . /- /- . /? /? . /?? /?? . /??? /??? . /?* /?* . /* /* . /* /** ../** /* /*** ../*** /*.* /*.** ../*.** /*.??? /*.?? ../*.?? /[] /[] . /[a-z]* /[0-9]* ../[0-9]* /foo /foo . /foo / .. /foo/bar / ../.. /foo/bar /foo .. /foo/bar /foo/baz ../baz /foo/bar /bar/foo ../../bar/foo /foo/bar/baz /gnarf/blurfl/blubb ../../../gnarf/blurfl/blubb /foo/bar/baz /gnarf ../../../gnarf /foo/bar/baz /foo/baz ../../baz /foo. /bar. ../bar. EOF while read FROM TO VIA; do relativepath "$FROM" "$TO" printf if test "$result" != "$VIA"; then printf fi done
__lb__lang-golang import ( "fmt" "log" ) var i, j, k int if _, err := fmt.Scan(&i, &j, &k); err != nil { log.Print(" Scan for i, j & k failed, due to ", err) return } fmt.Println(i, j, k)
__lb__lang-perl $ nc -l 7234 Loading DB routines from perl5db.pl version 1.32 Editor support available. Enter h or `h h main::(-e:1): do DB<1> r main::(./test.pl:29): $b = DB<1>
__lb__lang-c CGPoint cgPoint = CGPointMake(0,0); NSLog(@"%@",cgPoint);
__lb__lang-c int main() { int number = 8; int temp = 3, result = 0; while(temp <= number){ temp = fma(temp, 1, 3); result = fma(result, 1, 1); } printf("\n\n%d divided by 3 = %d\n", number, result); }
__lb__lang-cpp using namespace std; int main(){ string str; getline(cin,str); transform(str.begin(), str.end(), str.begin(), ::tolower); cout<<str; return 0; }
__lb__lang-cs FormsAuth = formsAuth ?? new FormsAuthenticationWrapper();
__lb__lang-sh wc -L <"${SourceFile}" expand --tabs=1 "${SourceFile}" | awk
__lb__lang-c int main (void) { int status; tCommClass commTcp, commHttp; tcpInit (&commTcp); httpInit (&commHttp); status = (commTcp.open)(&commTcp, "bigiron.box.com:5000"); status = (commHttp.open)(&commHttp, "http: return 0; }
__lb__lang-java String[] myNewArray3 = myNewStream.toArray(String[]::new);
__lb__lang-perl use feature qw( say ); use strict; use warnings; my $name; say say "
__lb__lang-golang for i, v := range slice {} for i := range slice {} for _, v := range slice {}
__lb__lang-cs public class Animal:Concept { protected Animal(){} public virtual string Name { get; set; } public virtual int Age { get; set; } }
__lb__lang-hs class Functor f class Functor p => Applicative p class Applicative m => Monad m
__lb__lang-sh find <directory_path> -type f -name "<wildcard-match>"
__lb__lang-java Set<String> h = new HashSet<String>(); Collections.addAll(h, "a", "b");
__lb__lang-cs public class Class1 { public int Method1(string input) { return 0; } public int Method2(string input) { return 1; } public bool RunTheMethod(Func<string, int> myMethodName) { int i = myMethodName("My String"); return true; } public bool Test() { return RunTheMethod(Method1); } }
__lb__lang-sh while IFS=: read -a line ; do [ "$line" = "$USER" ] && shell=${line[6]} done </etc/passwd echo $shell /bin/bash
__lb__lang-cs public class MyClass : MyBaseClass { public sealed override void MyFinalMethod() {...} }
__lb__lang-cs enum Sides { Left, Right, Top, Bottom } Sides side = Sides.Bottom; object val = Convert.ChangeType(side, side.GetTypeCode()); Console.WriteLine(val);
__lb__lang-java public StringBuilder(String str) { super(str.length() + 16); append(str); } public StringBuilder append(Object obj) { return append(String.valueOf(obj)); } public StringBuilder append(String str) { super.append(str); return this; }
__lb__lang-php $newDateString = date_format(date_create_from_format(
__lb__lang-cs private void textBox1_KeyPress(object sender, KeyPressEventArgs e) { e.Handled = !char.IsDigit(e.KeyChar) && !char.IsControl(e.KeyChar); }
__lb__lang-css input[type="checkbox"] { position: absolute; opacity: 0; z-index: -1; } input[type="checkbox"] + span { font: 16pt sans-serif; color: } input[type="checkbox"] + span:before { font: 16pt FontAwesome; content: display: inline-block; width: 16pt; padding: 2px 0 0 3px; margin-right: 0.5em; } input[type="checkbox"]:checked + span:before { content: } input[type="checkbox"]:focus + span:before { outline: 1px dotted } input[type="checkbox"]:disabled + span { color: } input[type="checkbox"]:not(:disabled) + span:hover:before { text-shadow: 0 1px 2px }
__lb__lang-perl nohup yourScript.sh script args >script.out 2>script.error&
__lb__lang-golang func (file *File) Read(b []byte) (n int, err Error)
__lb__lang-java def isexactsqrt(v) value = v.abs residue = value root = 0 onebit = 1 onebit <<= 8 while (onebit < residue) onebit >>= 2 while (onebit > residue) while (onebit > 0) x = root + onebit if (residue >= x) then residue -= x root = x + onebit end root >>= 1 onebit >>= 2 end return (residue == 0) end
__lb__lang-java Gson gson = new Gson(); YourObject ob = gson.fromJson(getIntent().getStringExtra("myjson"), YourObject.class);
__lb__lang-cs public static void TryToDoWithFileStream(string file, Action<FileStream> action, int count, int msecTimeOut) { FileStream stream = null; for (var i = 0; i < count; ++i) { try { stream = File.OpenRead(file); break; } catch (IOException) { Thread.Sleep(msecTimeOut); } } action(stream); }
__lb__lang-cs using System; using System.Collections.Generic; using Common.FluentValidation; using NUnit.Framework; namespace UnitTests.Common.Fluent_Validations { [TestFixture] public class IsAnyOf_Tests { [Test, ExpectedException(typeof(ArgumentNullException))] public void IsAnyOf_ArgumentNullException_ShouldNotMatch_ArgumentException_Test() { Action TestMethod = () => { throw new ArgumentNullException(); }; try { TestMethod(); } catch (Exception ex) { if (ex.GetType().IsAnyOf( typeof(ArgumentException), typeof(FormatException), typeof(KeyNotFoundException))) { return; } throw; } } [Test, ExpectedException(typeof(OutOfMemoryException))] public void IsAnyOf_OutOfMemoryException_ShouldMatch_OutOfMemoryException_Test() { Action TestMethod = () => { throw new OutOfMemoryException(); }; try { TestMethod(); } catch (Exception ex) { if (ex.GetType().IsAnyOf( typeof(OutOfMemoryException), typeof(StackOverflowException))) throw; } } } }
__lb__lang-hs instance Functor Tree where fmap f Empty = Empty fmap f (Leaf x) = Leaf (f x) fmap f (Node l k r) = Node (fmap f l) (f k) (fmap f r)
__lb__lang-sh while [ -z $prompt ]; do read -p "Continue (y/n)?" choice; case "$choice" in y|Y ) prompt=true; break;; n|N ) exit 0;; esac; done; prompt=;
__lb__lang-cpp std::size_t size = compute_size_at_runtime(); int* p = new int[size];
__lb__lang-java String [] both = new ArrayList<String>(){{addAll(Arrays.asList(first)); addAll(Arrays.asList(second));}}.toArray(new String[0]);
__lb__lang-cpp header-name: < h-char-sequence > " q-char-sequence " h-char-sequence: h-char h-char-sequence h-char h-char: any member of the source character set except new-line and > q-char-sequence: q-char q-char-sequence q-char q-char: any member of the source character set except new-line and "
__lb__lang-java abstract class Figure { double dim1; double dim2; Figure(double a, double b) { dim1 = a; dim2 = b; } abstract double area(); } class Rectangle extends Figure { Rectangle(double a, double b) { super(a, b); } double area() { System.out.println("Inside Area for Rectangle."); return dim1 * dim2; } } class Triangle extends Figure { Triangle(double a, double b) { super(a, b); } double area() { System.out.println("Inside Area for Triangle."); return dim1 * dim2 / 2; } } class AbstractAreas { public static void main(String args[]) { Rectangle r = new Rectangle(9, 5); Triangle t = new Triangle(10, 8); Figure figref; figref = r; System.out.println("Area is " + figref.area()); figref = t; System.out.println("Area is " + figref.area()); } }
__lb__lang-hs map = (=<<) . ((:[]) <$>) map = (=<<) <$> ((:[]) <$>) map = (<$> ((:[]) <$>)) (=<<)
__lb__lang-cs public class B { static void Main() => Console.WriteLine(A.C); }
__lb__lang-php class Util { static function arrayToObject($array, $class = if (!is_array($array)) { return $array; } $object = unserialize( sprintf( ) ); if (is_array($array) && count($array) > 0) { foreach ($array as $name => $value) { $name = strtolower(trim($name)); if (!empty($name)) { if(method_exists($object, $object->{ }else{ if(($strict)){ if(property_exists($class, $name)){ $object->$name = Util::arrayToObject($value); } }else{ $object->$name = Util::arrayToObject($value); } } } } return $object; } else { return FALSE; } } }
__lb__lang-cs public void SetLabeTextTo(string value) { _threadSafeGuiCommand.Execute(this, delegate { Label1.Text = value; }); }
__lb__lang-cs namespace Example { using System; using System.Text; public static class StringExtensions { public static int CountSubstr(this string str, string substr) { return (str.Length - str.Replace(substr, "").Length) / substr.Length; } public static int CountSubstr(this string str, char substr) { return (str.Length - str.Replace(substr.ToString(), "").Length); } public static int CountSubstr2(this string str, string substr) { int substrlen = substr.Length; int lastIndex = str.IndexOf(substr, 0, StringComparison.Ordinal); int count = 0; while (lastIndex != -1) { ++count; lastIndex = str.IndexOf(substr, lastIndex + substrlen, StringComparison.Ordinal); } return count; } public static int CountSubstr2(this string str, char substr) { int lastIndex = str.IndexOf(substr, 0); int count = 0; while (lastIndex != -1) { ++count; lastIndex = str.IndexOf(substr, lastIndex + 1); } return count; } public static int CountChar(this string str, char substr) { int length = str.Length; int count = 0; for (int i = 0; i < length; ++i) if (str[i] == substr) ++count; return count; } public static int CountChar2(this string str, char substr) { int count = 0; foreach (var c in str) if (c == substr) ++count; return count; } public static unsafe int CountChar3(this string str, char substr) { int length = str.Length; int count = 0; fixed (char* chars = str) { for (int i = 0; i < length; ++i) if (*(chars + i) == substr) ++count; } return count; } public static unsafe int CountChar4(this string str, char substr) { int length = str.Length; int count = 0; fixed (char* chars = str) { for (int i = length - 1; i >= 0; --i) if (*(chars + i) == substr) ++count; } return count; } public static unsafe int CountSubstr3(this string str, string substr) { int length = str.Length; int substrlen = substr.Length; int count = 0; fixed (char* strc = str) { fixed (char* substrc = substr) { int n = 0; for (int i = 0; i < length; ++i) { if (*(strc + i) == *(substrc + n)) { ++n; if (n == substrlen) { ++count; n = 0; } } else n = 0; } } } return count; } public static int CountSubstr3(this string str, char substr) { return CountSubstr3(str, substr.ToString()); } public static unsafe int CountSubstr4(this string str, string substr) { int length = str.Length; int substrLastIndex = substr.Length - 1; int count = 0; fixed (char* strc = str) { fixed (char* substrc = substr) { int n = substrLastIndex; for (int i = length - 1; i >= 0; --i) { if (*(strc + i) == *(substrc + n)) { if (--n == -1) { ++count; n = substrLastIndex; } } else n = substrLastIndex; } } } return count; } public static int CountSubstr4(this string str, char substr) { return CountSubstr4(str, substr.ToString()); } } }
__lb__lang-golang source := rand.NewSource(time.Now().UnixNano()) array := []interface{}{"a", "b", "c"} Shuffle(array, source)
__lb__lang-php xdebug.var_display_max_children xdebug.var_display_max_data xdebug.var_display_max_depth
__lb__lang-php CREATE TABLE IF NOT EXISTS `tweets` ( `tweet_id` int(11) NOT NULL auto_increment, `id_tweet` bigint(20) NOT NULL, `text_tweet` char(144) NOT NULL, `datetime_tweet` datetime NOT NULL, `dayofweek_tweet` char(3) NOT NULL, `GMT_tweet` char(5) NOT NULL, `shorturl_tweet` char(23) NOT NULL, PRIMARY KEY (`tweet_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=83 ;
__lb__lang-sh a+=(one word "hello world"! declare -p a declare -a a= ello world!" [6]="hello world!")'
__lb__lang-php class HTTPRequester { /** * @description Make HTTP-GET call * @param $url * @param array $params * @return HTTP-Response body or an empty string if the request fails or is empty */ public static function HTTPGet($url, array $params) { $query = http_build_query($params); $ch = curl_init($url. curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_HEADER, false); $response = curl_exec($ch); curl_close($ch); return $response; } /** * @description Make HTTP-POST call * @param $url * @param array $params * @return HTTP-Response body or an empty string if the request fails or is empty */ public static function HTTPPost($url, array $params) { $query = http_build_query($params); $ch = curl_init(); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_HEADER, false); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, $query); $response = curl_exec($ch); curl_close($ch); return $response; } /** * @description Make HTTP-PUT call * @param $url * @param array $params * @return HTTP-Response body or an empty string if the request fails or is empty */ public static function HTTPPut($url, array $params) { $query = \http_build_query($params); $ch = \curl_init(); \curl_setopt($ch, \CURLOPT_RETURNTRANSFER, true); \curl_setopt($ch, \CURLOPT_HEADER, false); \curl_setopt($ch, \CURLOPT_URL, $url); \curl_setopt($ch, \CURLOPT_CUSTOMREQUEST, \curl_setopt($ch, \CURLOPT_POSTFIELDS, $query); $response = \curl_exec($ch); \curl_close($ch); return $response; } /** * @category Make HTTP-DELETE call * @param $url * @param array $params * @return HTTP-Response body or an empty string if the request fails or is empty */ public static function HTTPDelete($url, array $params) { $query = \http_build_query($params); $ch = \curl_init(); \curl_setopt($ch, \CURLOPT_RETURNTRANSFER, true); \curl_setopt($ch, \CURLOPT_HEADER, false); \curl_setopt($ch, \CURLOPT_URL, $url); \curl_setopt($ch, \CURLOPT_CUSTOMREQUEST, \curl_setopt($ch, \CURLOPT_POSTFIELDS, $query); $response = \curl_exec($ch); \curl_close($ch); return $response; } }
__lb__lang-cs public class BetterBaseClass { protected string state; public BetterBaseClass() { this.state = "BetterBaseClass"; this.Initialize(); } public void Initialize() { this.DisplayState(); } public virtual void DisplayState() { } } public class DerivedFromBetter : BetterBaseClass { public DerivedFromBetter() { this.state = "DerivedFromBetter"; } public override void DisplayState() { Console.WriteLine(this.state); } }
__lb__lang-php function register($username, $password) { $lib = new PasswordLib\PasswordLib(); $hash = $lib->createPasswordHash($password, save($user, $hash); } function login($username, $password) { $hash = loadHashByUsername($username); $lib = new PasswordLib\PasswordLib(); if ($lib->verifyPasswordHash($password, $hash)) { } else { } }
__lb__lang-java private static String getTwoDecimals(double value){ DecimalFormat df = new DecimalFormat("0.00"); return df.format(value); }
__lb__lang-cpp void TrimString(std::string & str) { if(str.empty()) return; const auto pStr = str.c_str(); size_t front = 0; while(front < str.length() && std::isspace(int(pStr[front]))) {++front;} size_t back = str.length(); while(back > front && std::isspace(int(pStr[back-1]))) {--back;} if(0 == front) { if(back < str.length()) { str.resize(back - front); } } else if(back <= front) { str.clear(); } else { str = std::move(std::string(str.begin()+front, str.begin()+back)); } }
__lb__lang-sh port = 27000 username = "abc" , remote server username path-to-folder = tmp/hotel_dump . = current local directory
__lb__lang-java public static void main(String[] args) { int count = 0, errors = 0; int scale = 2; double factor = Math.pow(10, scale); MathContext mc = new MathContext(16, RoundingMode.DOWN); for (double x = 0.0; x < 1; x += 0.0001) { count++; double d = x; d = Math.round(d * factor) / factor; BigDecimal bd = new BigDecimal(d, mc); bd = bd.remainder(new BigDecimal("0.01"), mc); if (bd.multiply(BigDecimal.valueOf(100)).remainder(BigDecimal.ONE, mc).compareTo(BigDecimal.ZERO) != 0) { System.out.println(d + " " + bd); errors++; } } System.out.println(count + " trials " + errors + " errors"); }
__lb__lang-cpp struct X { int a, b; }; std::vector<X> xs; xs.emplace_back(1, 2);
__lb__lang-php <script> var myvar = decodeURIComponent("<?php echo rawurlencode($myVarValue); ?>"); </script>
__lb__lang-perl use v5.20; use feature qw(signatures); no warnings qw(experimental::signatures); animals( sub animals ($cat, $dog, $lizard = say "The cat is $cat"; say "The dog is $dog"; say "The lizard is $lizard"; }
__lb__lang-css .parent { width: 200px; } .button { background: color: padding: 20px; border: 5px solid border-left-width: 20px; box-sizing: border-box; }
__lb__lang-c ./bin/tis-kernel -sa example1.c ... example1.c:9:[sa] warning: The pointer (short *)(& a) has type short *. It violates strict aliasing rules by accessing a cell with effective type int. ... example1.c:10:[sa] warning: The pointer (int *)(& f) has type int *. It violates strict aliasing rules by accessing a cell with effective type float. Callstack: main ... example1.c:15:[sa] warning: The pointer (short *)p has type short *. It violates strict aliasing rules by accessing a cell with effective type int.
__lb__lang-cs public static string BytesToHex(this byte[] barray, bool toLowerCase = true) { byte addByte = 0x37; if (toLowerCase) addByte = 0x57; char[] c = new char[barray.Length * 2]; byte b; for (int i = 0; i < barray.Length; ++i) { b = ((byte)(barray[i] >> 4)); c[i * 2] = (char)(b > 9 ? b + addByte : b + 0x30); b = ((byte)(barray[i] & 0xF)); c[i * 2 + 1] = (char)(b > 9 ? b + addByte : b + 0x30); } return new string(c); }
__lb__lang-cs try { throw new ArgumentOutOfRangeException(); } catch (ArgumentOutOfRangeException e) { goto theOtherHandler; } catch (IndexOutOfRangeException e) { theOtherHandler: Console.WriteLine("Handle!"); }
__lb__lang-css body { background-image: url("http: background-image: url("http: background-image: url("http: }
__lb__lang-golang package customlogger import ( "log" "os" "sync" ) type logger struct { filename string *log.Logger } var logger *logger var once sync.Once func GetInstance() *logger { once.Do(func() { logger = createLogger("mylogger.log") }) return logger } func createLogger(fname string) *logger { file, _ := os.OpenFile(fname, os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777) return &logger{ filename: fname, Logger: log.New(file, "My app Name ", log.Lshortfile), } }
__lb__lang-cs public int CalculateAgeWrong1(DateTime birthDate, DateTime now) { return new DateTime(now.Subtract(birthDate).Ticks).Year - 1; } public int CalculateAgeWrong2(DateTime birthDate, DateTime now) { int age = now.Year - birthDate.Year; if (now < birthDate.AddYears(age)) age--; return age; } public int CalculateAgeCorrect(DateTime birthDate, DateTime now) { int age = now.Year - birthDate.Year; if (now.Month < birthDate.Month || (now.Month == birthDate.Month && now.Day < birthDate.Day)) age--; return age; }
__lb__lang-hs List = Mu (K () :++: (V Y :**: V X)) Bin = Mu (V Y :**: (K () :++: (V X :**: V X)))
__lb__lang-hs divisors :: Integral t => t -> [t] divisors n = filter (`divides` n) [2 .. n - 1] divides :: Integral t => t -> t -> Bool (`divides` n) = (== 0) . (n `rem`)
__lb__lang-java android { ... defaultConfig { ... jackOptions { enabled true } } compileOptions { sourceCompatibility JavaVersion.VERSION_1_8 targetCompatibility JavaVersion.VERSION_1_8 } }
__lb__lang-java public class Predicate { public static Object predicateParams; public static <T> Collection<T> filter(Collection<T> target, IPredicate<T> predicate) { Collection<T> result = new ArrayList<T>(); for (T element : target) { if (predicate.apply(element)) { result.add(element); } } return result; } public static <T> T select(Collection<T> target, IPredicate<T> predicate) { T result = null; for (T element : target) { if (!predicate.apply(element)) continue; result = element; break; } return result; } public static <T> T select(Collection<T> target, IPredicate<T> predicate, T defaultValue) { T result = defaultValue; for (T element : target) { if (!predicate.apply(element)) continue; result = element; break; } return result; } }
__lb__lang-cs return new string(Enumerable.Range(0, indentSize*indent).Select( n => n%4 == 0 ?
__lb__lang-cs public static IEnumerable<T> OrderBy( this IEnumerable<T> input, string queryString) { foreach( string propname in queryString.Split( input.OrderBy( x => GetPropertyValue( x, propname ) ); }
__lb__lang-sh $ K=1 $ export K $ K=2 $ bash -c 2 $ export -n K $ bash -c unset
__lb__lang-hs swapEither :: IO (Either e a) -> Either e (IO a) swapWriter :: (Monoid e) => IO (Writer e a) -> Writer e (IO a) swapState :: IO (State e a) -> State e (IO a) ...
__lb__lang-cs public class MyExceptionClass : Exception { public MyExceptionClass(string message, string extrainfo) : base(message) { } }
__lb__lang-cs public interface IFoo { void Initialize(int a); } public class ConcreteFoo : IFoo { private bool _init = false; public int b; public ConcreteFoo() { Initialize(42); } public ConcreteFoo(int a) { Initialize(a); } public void Initialize(int a) { if (_init) throw new InvalidOperationException(); _init = true; b = a; } }
__lb__lang-java catch (Exception e) { StackTraceElement[] stack = e.getStackTrace(); String exception = ""; for (StackTraceElement s : stack) { exception = exception + s.toString() + "\n\t\t"; } System.out.println(exception); }
__lb__lang-php if (is_numeric($var)) $var = (isset($var)) ? $var : 0; else $var = 0;
__lb__lang-cpp class Foo { public: Foo(char x); Foo(char x, int y); private: void init(char x, int y); }; Foo::Foo(char x) { init(x, int(x) + 7); } Foo::Foo(char x, int y) { init(x, y); } void Foo::init(char x, int y) { }
__lb__lang-cs UserContrl1_LoadDataMethod() { if (InvokeRequired) { this.Invoke(new MethodInvoker(UserContrl1_LoadDataMethod)); return; } if (textbox1.text == "MyName") { } }
__lb__lang-sh ps aux | grep -ie amarok | awk Output: kill -9 3052 kill -9 3071 kill -9 3076 kill -9 3077 kill -9 3079 kill -9 3080 kill -9 3082 kill -9 3083 kill -9 3084 kill -9 3085 kill -9 3086 kill -9 3087 kill -9 3088 kill -9 3089 kill -9 4031
__lb__lang-php class App_Sandbox_String_Util { /** * Usage: App_Sandbox_String_Util::getDateDiff(); * @param int $your_date timestamp * @param bool $hr human readable. e.g. 1 year(s) 2 day(s) * @see http: * @see http: */ static public function getDateDiff($your_date, $hr = 0) { $now = time(); $datediff = $now - $your_date; $days = floor( $datediff / ( 3600 * 24 ) ); $label = if ($hr) { if ($days >= 365) { $years = floor($days / 365); $label .= $years . $days -= 365 * $years; } if ($days) { $months = floor( $days / 30 ); $label .= $days -= 30 * $months; } if ($days) { $label .= } } else { $label = $days; } return $label; } }
__lb__lang-java assert value == null || value.equals("Y") || value.equals("N") : value;
__lb__lang-golang func readFileLines() { f, err := os.OpenFile(logfile, os.O_RDONLY, os.ModePerm) if err != nil { log.Fatalf("open file error: %v", err) return } defer f.Close() rd := bufio.NewReader(f) for { line, err := rd.ReadString( if err != nil { if err == io.EOF { break } log.Fatalf("read file line error: %v", err) return } _ = line } }
__lb__lang-cs catch (Exception ex) { if (ex is FormatException || ex is OverflowException) { WebId = Guid.Empty; } throw; }
__lb__lang-golang import strings fileSlice := strings.Split(stringFiles, ",")
__lb__lang-php <?php class Constant { private $data = []; public function define($constant, $value) { if (!isset($this->data[$constant])) { $this->data[$constant] = $value; } else { trigger_error("Cannot redefine constant $constant", E_USER_WARNING); } } public function __get($constant) { if (isset($this->data[$constant])) { return $this->data[$constant]; } else { trigger_error("Use of undefined constant $constant - assumed return $constant; } } public function __set($constant,$value) { $this->define($constant, $value); } } $const = new Constant;
__lb__lang-java Map<String,Choice> map= list1.stream().collect(()-> new HashMap<String,Choice>(), (r,s) -> r.put(s.getString(),s),(r,s) -> r.putAll(s));
__lb__lang-cpp string a(x); string b(x + y); string c(some_function_returning_a_string());
__lb__lang-php $needle = $haystack = $pos = strpos($haystack, $needle); if ($pos === false) { echo $needle . } else { echo $needle . }
__lb__lang-java val gson = Gson() val intent = Intent(this, YourActivity::class.java) intent.putExtra("identifier", gson.toJson(your_object)) startActivity(intent)
__lb__lang-php <?php $array = array( 4 => $result = $array[4]; assert( ?>
__lb__lang-sh import sys import os.path if len(sys.argv)>1: for i in range(1,len(sys.argv)): print os.path.abspath( sys.argv[i] ) sys.exit(0) else: print >> sys.stderr, "Usage: ",sys.argv[0]," PATH." sys.exit(1)
__lb__lang-cpp class SuperClass { public: SuperClass(int foo) { } }; class SubClass : public SuperClass { public: SubClass(int foo, int bar) : SuperClass(foo) { } };
__lb__lang-php usort($your_data, function($a, $b) { return strcmp($a->name, $b->name); });
__lb__lang-java OuterClass.InnerClass inner = new OuterClass.InnerClass();
__lb__lang-cs int i = 24; string str = String.Format("{{{0:N}}}", i);
__lb__lang-hs getChar :: IO Char putChar :: Char -> IO () readFile :: FilePath -> IO String writeFile :: FilePath -> String -> IO () hSetBuffering :: Handle -> BufferMode -> IO () hTell :: Handle -> IO Integer . . . . . .
__lb__lang-golang package main import ( "fmt" "os" "os/signal" "syscall" ) func main() { _,done1:=doSomething1() _,done2:=doSomething2() println("wait for finish") <-done1 <-done2 fmt.Print("clean up done, can exit safely") } func doSomething1() (error, chan bool) { done:=make(chan bool) c := make(chan os.Signal, 2) signal.Notify(c, os.Interrupt, syscall.SIGTERM) go func() { <-c done<-true }() return nil,done } func doSomething2() (error, chan bool) { done:=make(chan bool) c := make(chan os.Signal, 2) signal.Notify(c, os.Interrupt, syscall.SIGTERM) go func() { <-c done<-true }() return nil,done }
__lb__lang-cs private string FixString(string str) { return string.IsNullOrEmpty(str) ? str : Regex.Replace(str, "[\\D]", ""); }
__lb__lang-java Map<Integer,List<Person>> mapPersons = persons.stream().collect(Collectors.groupingBy(Person::getAge));
__lb__lang-java public class Singleton{ private static Singleton _instance; public static Singleton getInstance(){ if(_instance == null){ synchronized(Singleton.class){ if(_instance == null) _instance = new Singleton(); } } return _instance; }
__lb__lang-java private fun showFacebookStylePlus1NewsFeedOnPushReceived(){ A35Log.v(TAG, "showFacebookStylePlus1NewsFeedOnPushReceived") if(activity != null && activity?.isFinishing == false){ txtNewInfo.visibility = View.VISIBLE mHandler.postDelayed({ if(activity != null && activity?.isFinishing == false){ txtNewInfo.visibility = View.GONE } }, NEW_INFO_SHOW_TIMEOUT_MS) } }
__lb__lang-css div{ margin:5px; text-align:center; display:inline-block; } .vcenter{ background: width: 150px; height: 150px; } .vcenter:before { content: " "; display: inline-block; height: 100%; vertical-align: middle; max-width: 0.001%; } .vcenter :first-child { display:inline-block; vertical-align:middle; max-width: 99.999%; }
__lb__lang-java if (android.os.Build.VERSION.SDK_INT > 9) { StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build(); StrictMode.setThreadPolicy(policy); }
__lb__lang-cs while (Directory.GetDirectories(dirpath).Length > 0) { while (Directory.GetFiles(Directory.GetDirectories(dirpath)[0]).Length > 0) { File.Delete(Directory.GetFiles(dirpath)[0]); } Directory.Delete(Directory.GetDirectories(dirpath)[0]); }
__lb__lang-java import java.math.BigInteger; import java.security.MessageDigest; import java.security.NoSuchAlgorithmException; /** * MD5 encryption * * @author Hongten * */ public class MD5 { public static void main(String[] args) { System.out.println(MD5.getMD5("123456")); } /** * Use md5 encoded code value * * @param sInput * clearly * @ return md5 encrypted password */ public static String getMD5(String sInput) { String algorithm = ""; if (sInput == null) { return "null"; } try { algorithm = System.getProperty("MD5.algorithm", "MD5"); } catch (SecurityException se) { } MessageDigest md = null; try { md = MessageDigest.getInstance(algorithm); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } byte buffer[] = sInput.getBytes(); for (int count = 0; count < sInput.length(); count++) { md.update(buffer, 0, count); } byte bDigest[] = md.digest(); BigInteger bi = new BigInteger(bDigest); return (bi.toString(16)); } }
__lb__lang-cpp class A {..}; class B : public A {...}; class C { include A.cpp; include B.cpp; ..... };
__lb__lang-java Path file = ...; try (BufferedWriter writer = Files.newBufferedWriter(file, Charset.forName("desired charset"), StandardOpenOption.CREATE, StandardOpenOption.APPEND, StandardOpenOption.WRITE)) { writer.write("----------"); [...] }
__lb__lang-php $result = @json_decode($json,true); if (is_array($result)) { echo }else{ echo }
__lb__lang-cs <requestedExecutionLevel level="requireAdministrator" uiAccess="false" />
__lb__lang-java boolean useLoop(String[] arr, String targetValue) { for(String s: arr){ if(s.equals(targetValue)) return true; } return false; }
__lb__lang-java package fatherpackage; public class Father { public void fatherMethod(Father f) { f.foo(); } } ------------------------------------------- package sonpackage; public class Son extends Father { public void sonMethod(Son s) { s.foo(); } }
__lb__lang-cpp auto instance = std::make_unique<Class>(); legacyFunction(instance.release()); auto instance = std::unique_ptr<Class>{legacyFunction()};
__lb__lang-cs public class MyException : Exception { public MyException(string message, string extraInfo) { this.Message = $"{message} Extra info: {extraInfo}"; } }
__lb__lang-cs if (formsAuth != null) { FormsAuth = formsAuth; } else { FormsAuth = new FormsAuthenticationWrapper(); }
__lb__lang-cs public class Dog : INotifyPropertyChanged { public event PropertyChangedEventHandler PropertyChanged; string _name; public string Name { get { return _name; } set { this.SetPropertyAndNotify(PropertyChanged, ref _name, value); } } }
__lb__lang-golang package reverseString import ( "fmt" "strings" "testing" ) func TestReverseString(t *testing.T) { s := "GO je úžasné!" r := ReverseString(s) fmt.Printf("Input: %s\nOutput: %s", s, r) revR := ReverseString(r) if strings.Compare(s, revR) != 0 { t.Errorf("Expecting: %s\n. Got: %s\n", s, revR) } }
__lb__lang-java public class DaemonThread extends Thread { public void run() { System.out.println("Entering run method"); try { System.out.println("In run Method: currentThread() is" + Thread.currentThread()); while (true) { try { Thread.sleep(500); } catch (InterruptedException x) {} System.out.println("In run method: woke up again"); } } finally { System.out.println("Leaving run Method"); } } public static void main(String[] args) { System.out.println("Entering main Method"); DaemonThread t = new DaemonThread(); t.setDaemon(true); t.start(); try { Thread.sleep(3000); } catch (InterruptedException x) {} System.out.println("Leaving main method"); } }
__lb__lang-css *,*:after,*:before { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; padding: 0; margin: 0; } .switch { margin: 50px auto; position: relative; } .switch label { width: 100%; height: 100%; position: relative; display: block; } .switch input { top: 0; right: 0; bottom: 0; left: 0; opacity: 0; z-index: 100; position: absolute; width: 100%; height: 100%; cursor: pointer; } .switch.demo3 { width: 180px; height: 50px; } .switch.demo3 label { display: block; width: 100%; height: 100%; background: border-radius: 40px; box-shadow: inset 0 3px 8px 1px rgba(0,0,0,0.2), 0 1px 0 rgba(255,255,255,0.5); } .switch.demo3 label:after { content: ""; position: absolute; z-index: -1; top: -8px; right: -8px; bottom: -8px; left: -8px; border-radius: inherit; background: background: -moz-linear-gradient( background: -ms-linear-gradient( background: -o-linear-gradient( background: -webkit-gradient(linear, 0 0, 0 100%, from( background: -webkit-linear-gradient( background: linear-gradient( box-shadow: 0 0 10px rgba(0,0,0,0.3), 0 1px 1px rgba(0,0,0,0.25); } .switch.demo3 label:before { content: ""; position: absolute; z-index: -1; top: -18px; right: -18px; bottom: -18px; left: -18px; border-radius: inherit; background: background: -moz-linear-gradient( background: -ms-linear-gradient( background: -o-linear-gradient( background: -webkit-gradient(linear, 0 0, 0 100%, from( background: -webkit-linear-gradient( background: linear-gradient( box-shadow: 0 1px 0 rgba(255,255,255,0.5); -webkit-filter: blur(1px); -moz-filter: blur(1px); -ms-filter: blur(1px); -o-filter: blur(1px); filter: blur(1px); } .switch.demo3 label i { display: block; height: 100%; width: 60%; border-radius: inherit; background: silver; position: absolute; z-index: 2; right: 40%; top: 0; background: background: -moz-linear-gradient( background: -ms-linear-gradient( background: -o-linear-gradient( background: -webkit-gradient(linear, 0 0, 0 100%, from( background: -webkit-linear-gradient( background: linear-gradient( box-shadow: inset 0 1px 0 white, 0 0 8px rgba(0,0,0,0.3), 0 5px 5px rgba(0,0,0,0.2); } .switch.demo3 label i:after { content: ""; position: absolute; left: 15%; top: 25%; width: 70%; height: 50%; background: background: -moz-linear-gradient( background: -ms-linear-gradient( background: -o-linear-gradient( background: -webkit-gradient(linear, 0 0, 0 100%, from( background: -webkit-linear-gradient( background: linear-gradient( border-radius: inherit; } .switch.demo3 label i:before { content: "off"; text-transform: uppercase; font-style: normal; font-weight: bold; color: rgba(0,0,0,0.4); text-shadow: 0 1px 0 font-family: Helvetica, Arial, sans-serif; font-size: 24px; position: absolute; top: 50%; margin-top: -12px; right: -50%; } .switch.demo3 input:checked ~ label { background: } .switch.demo3 input:checked ~ label i { right: -1%; } .switch.demo3 input:checked ~ label i:before { content: "on"; right: 115%; color: text-shadow: 0 1px 0 0 -1px 0 }
__lb__lang-sh complete -o bashdefault -o default -o nospace -F __git_wrap__git_main g _completion_loader git
__lb__lang-hs (<*>) :: Applicative a => a (s -> t) -> a s -> a t (>>=) :: Monad m => m s -> (s -> m t) -> m t
__lb__lang-java <uses-permission android:name="android.permission.INTERNET" />
__lb__lang-java override fun onPause() { super.onPause() if(mDelayedJob != null && mDelayedJob!!.isActive) { A35Log.v(mClassTag, "canceling delayed job") mDelayedJob?.cancel() } }
__lb__lang-java /** * Singleton pattern example with Double checked Locking */ public class DoubleCheckedLockingSingleton{ private static volatile DoubleCheckedLockingSingleton INSTANCE; private DoubleCheckedLockingSingleton(){} public static DoubleCheckedLockingSingleton getInstance(){ if(INSTANCE == null){ synchronized(DoubleCheckedLockingSingleton.class){ if(INSTANCE == null){ INSTANCE = new DoubleCheckedLockingSingleton(); } } } return INSTANCE; } }
__lb__lang-cs private byte[] EncryptBytes(byte[] key, byte[] plaintext) { using (var cipher = new RijndaelManaged { Key = key }) { using (var encryptor = cipher.CreateEncryptor()) { var ciphertext = encryptor.TransformFinalBlock(plaintext, 0, plaintext.Length); return cipher.IV.Concat(ciphertext).ToArray(); } } } private byte[] DecryptBytes(byte[] key, byte[] packed) { using (var cipher = new RijndaelManaged { Key = key }) { int ivSize = cipher.BlockSize / 8; cipher.IV = packed.Take(ivSize).ToArray(); using (var encryptor = cipher.CreateDecryptor()) { return encryptor.TransformFinalBlock(packed, ivSize, packed.Length - ivSize); } } } private byte[] AddMac(byte[] key, byte[] data) { using (var hmac = new HMACSHA256(key)) { var macBytes = hmac.ComputeHash(data); return data.Concat(macBytes).ToArray(); } } private bool BadMac(byte[] found, byte[] computed) { int mismatch = 0; for (int i = 0; i < found.Length; i++) { mismatch += found[i] == computed[i] ? 0 : 1; } return mismatch != 0; } private byte[] RemoveMac(byte[] key, byte[] data) { using (var hmac = new HMACSHA256(key)) { int macSize = hmac.HashSize / 8; var packed = data.Take(data.Length - macSize).ToArray(); var foundMac = data.Skip(packed.Length).ToArray(); var computedMac = hmac.ComputeHash(packed); if (this.BadMac(foundMac, computedMac)) { throw new Exception("Bad MAC"); } return packed; } } private List<byte[]> DeriveTwoKeys(string password) { var salt = new byte[] { 1, 2, 3, 4, 5, 6, 7, 8 }; var kdf = new Rfc2898DeriveBytes(password, salt, 10000); var bytes = kdf.GetBytes(32); return new List<byte[]> { bytes.Take(16).ToArray(), bytes.Skip(16).ToArray() }; } public byte[] EncryptString(string password, String message) { var keys = this.DeriveTwoKeys(password); var plaintext = Encoding.UTF8.GetBytes(message); var packed = this.EncryptBytes(keys[0], plaintext); return this.AddMac(keys[1], packed); } public String DecryptString(string password, byte[] secret) { var keys = this.DeriveTwoKeys(password); var packed = this.RemoveMac(keys[1], secret); var plaintext = this.DecryptBytes(keys[0], packed); return Encoding.UTF8.GetString(plaintext); } public void Example() { var password = "correcthorsebatterystaple"; var secret = this.EncryptString(password, "Hello World"); Console.WriteLine("secret: " + BitConverter.ToString(secret)); var recovered = this.DecryptString(password, secret); Console.WriteLine(recovered); }
__lb__lang-c void use_array(int *array); int main() { int array[10],i; for (i = 0; i <=10 ; i++) { array[i]=0; printf("test \n"); } printf("%zd \n", sizeof(array)/sizeof(int)); use_array(array); return 0; }
__lb__lang-hs newtype Fd = Fd CInt -- data Fd = Fd CInt would also be valid -- newtypes can have deriving clauses just like normal types newtype Identity a = Identity a deriving (Eq, Ord, Read, Show) -- record syntax is still allowed, but only for one field newtype State s a = State { runState :: s -> (s, a) } -- this is *not* allowed: -- newtype Pair a b = Pair { pairFst :: a, pairSnd :: b } -- but this is: data Pair a b = Pair { pairFst :: a, pairSnd :: b } -- and so is this: newtype Pair
__lb__lang-css height: 0px; transition: height 0.3s ease; background: overflow: hidden; }
__lb__lang-php function shutDownFunction() { $error = error_get_last(); if ($error[ } } register_shutdown_function(
__lb__lang-cs private string name; public string Name { get { return name; } set { SetField(ref name, value, "Name"); } }
__lb__lang-cs using System.IO; using System.Linq; … var directory = Directory.GetParent(TestContext.TestDir); directory.EnumerateFiles() .ForEachInEnumerable(f => f.Delete()); directory.EnumerateDirectories() .ForEachInEnumerable(d => d.Delete(true));
__lb__lang-java import java.util.Arrays; import java.util.List; public class ArrayContainsElement { public static final List<String> VALUES = Arrays.asList("AB", "BC", "CD", "AE"); public static void main(String args[]) { if (VALUES.contains("AB")) { System.out.println("Contains"); } else { System.out.println("Not contains"); } } }
__lb__lang-golang func Ternary(statement bool, a, b interface{}) interface{} { if statement { return a } return b } func Abs(n int) int { return Ternary(n >= 0, n, -n).(int) }
__lb__lang-cs unsafe byte[] GetRawBytes(String s) { if (s == null) return null; var codeunitCount = s.Length; var byteCount = codeunitCount * 2; var bytes = new byte[byteCount]; fixed(void* pRaw = s) { Marshal.Copy((IntPtr)pRaw, bytes, 0, byteCount); } return bytes; }
__lb__lang-perl SKIP: { skip() if $something; print "Never printed"; } sub skip { no warnings "exiting"; last SKIP; }
__lb__lang-cs MethodInfo method = typeof(Sample).GetMethod("GenericMethod"); MethodInfo generic = method.MakeGenericMethod(myType); generic.Invoke(this, null);
__lb__lang-sh seq 1 10 | sort -R | tee /tmp/lst |cat <(cat /tmp/lst) <(echo <(python -c "import sys; print(
__lb__lang-perl use strict; use warnings; print "uid:", (getpwuid 501)[7], "\n", "name:", (getpwnam "cowens")[7], "\n";
__lb__lang-cs var thisPath = System.IO.Directory.GetCurrentDirectory();
__lb__lang-hs (flip run) 34 (do modify (+ 1) n <- gets (* 12) modify (+ 7) return (show n) )
__lb__lang-hs foldl f v xs = g xs v where g [] = \v -> v g (x:xs) = \v -> g xs (f v x)
__lb__lang-php /** * Start session * Fall back to ukrainian language */ function valid_session() { if(session_id()== session_start(); $_SESSION[ $_SESSION[ } return true; }
__lb__lang-c /* * demo.c * * Created on: 2017-09-14 * Author: sboehler */ void foo_void(void) { puts("void"); } void foo_int(int c) { printf("int: %d\n", c); } void foo_char(char c) { printf("char: %c\n", c); } void foo_double(double c) { printf("double: %.2f\n", c); } void foo_double_int(double c, int d) { printf("double: %.2f, int: %d\n", c, d); } int: foo_int, \ char: foo_char, \ double: foo_double \ ) double: _Generic((_2), \ int: foo_double_int \ ) \ ) ( \ HAS_COMMA(__VA_ARGS__), \ HAS_COMMA(__VA_ARGS__ ()), \ HAS_COMMA(SET_COMMA __VA_ARGS__), \ HAS_COMMA(SET_COMMA __VA_ARGS__ ()) \ ) int main(int argc, char** argv) { foo(); foo(7); foo(10.12); foo(12.10, 7); foo((char) return 0; }
__lb__lang-java public class NumUtils { /** * Transforms a string to an integer. If no numerical chars returns a String "0". * * @param str * @return retStr */ static String makeToInteger(String str) { String s = str; double d; d = Double.parseDouble(makeToDouble(s)); int i = (int) (d + 0.5D); String retStr = String.valueOf(i); System.out.printf(retStr + " "); return retStr; } /** * Transforms a string to an double. If no numerical chars returns a String "0". * * @param str * @return retStr */ static String makeToDouble(String str) { Boolean dotWasFound = false; String orgStr = str; String retStr; int firstDotPos = 0; Boolean negative = false; if(str.length()==0){ str="0"; } if (str.charAt(0) == negative = true; } if (!str.matches(".*\\d+.*")) { str = "0"; } str = str.replaceAll(",", "."); str = str.replaceAll("[^\\d.]", ""); for (int i_char = 0; i_char < str.length(); i_char++) { if (str.charAt(i_char) == dotWasFound = true; firstDotPos = i_char; break; } } if (dotWasFound) { String befDot = str.substring(0, firstDotPos + 1); String aftDot = str.substring(firstDotPos + 1, str.length()); aftDot = aftDot.replaceAll("\\.", ""); str = befDot + aftDot; } double uglyMethod = Double.parseDouble(str); str = String.valueOf(uglyMethod); str = str.replaceAll("([0-9])\\.0+([^0-9]|$)", "$1$2"); retStr = str; if (negative) { retStr = "-"+retStr; } return retStr; } static boolean isNumeric(String str) { try { double d = Double.parseDouble(str); } catch (NumberFormatException nfe) { return false; } return true; } }
__lb__lang-golang const letterBytes = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" const ( letterIdxBits = 6 letterIdxMask = 1<<letterIdxBits - 1 letterIdxMax = 63 / letterIdxBits ) func RandStringBytesMaskImpr(n int) string { b := make([]byte, n) for i, cache, remain := n-1, rand.Int63(), letterIdxMax; i >= 0; { if remain == 0 { cache, remain = rand.Int63(), letterIdxMax } if idx := int(cache & letterIdxMask); idx < len(letterBytes) { b[i] = letterBytes[idx] i-- } cache >>= letterIdxBits remain-- } return string(b) }
__lb__lang-cpp std::string foo{ "text" }; char * p = nullptr; try { p = new char[foo.size() + 1u]; std::copy(foo.data(), foo.data() + foo.size() + 1u, p); delete[] p; } catch (...) { if (p) { delete[] p; } throw; }
__lb__lang-cs IList<Client> clientList = from a in _dbFeed.Client.Include("Auto") select a; foreach (RivWorks.Model.NegotiationAutos.Client client in clientList) { var companyFeedDetailList = from a in _dbRiv.AutoNegotiationDetails where a.ClientID == client.ClientID select a; }
__lb__lang-cpp void func4(std::vector<double>& v) { std::transform(v.begin(), v.end(), v.begin(), [](double d) { if (d < 0.0001) { return 0; } else { return d; } }); }
__lb__lang-java try (Stream<String> lines = Files.lines (file, StandardCharsets.UTF_8)) { for (String line : (Iterable<String>) lines::iterator) { ; } }
__lb__lang-cs using (var filestream = new VarbinaryStream( "Connection_String", "Table_Name", "Varbinary_Column_name", "Key_Column_Name", keyValueId, true)) { postedFile.InputStream.CopyTo(filestream); }
__lb__lang-sh if command1 then if command2 then do_something else exit fi else exit fi
__lb__lang-c { void *mem = malloc(1024+15); void *ptr = ((uintptr_t)mem+15) & ~ (uintptr_t)0x0F; memset_16aligned(ptr, 0, 1024); free(mem); }
__lb__lang-java StringBuffer sBuffer = new StringBuffer("test"); sBuffer.append(" String Buffer"); System.out.println(sBuffer);
__lb__lang-cs System.Reflection.Assembly assembly = System.Reflection.Assembly.GetExecutingAssembly(); FileVersionInfo fvi = FileVersionInfo.GetVersionInfo(assembly.Location); string version = fvi.FileVersion;
__lb__lang-hs doIf :: Bool -> IO () -> IO () doIf b m = if b then m else nop main3 = do s <- getLine doIf (s == "foo") (putStr "You entered foo")
__lb__lang-c n*n = n^2 n^2*n = n^3 n^3*n^3 = n^6 n^6*n^6 = n^12 n^12*n^3 = n^15
__lb__lang-golang func Reverse(s string) string { runes := []rune(s) for i, j := 0, len(runes)-1; i < j; i, j = i+1, j-1 { runes[i], runes[j] = runes[j], runes[i] } return string(runes) }
__lb__lang-php $name = $_POST[ $email = $_POST[ $message = $_POST[ $from = $to = $subject = $body = "From: $name\n E-Mail: $email\n Message:\n $message";
__lb__lang-cpp template <template <typename, typename> class Container, typename Type> class MyContainer: public Container<Type, std::allocator<Type>> { };
__lb__lang-golang func NewFoobar(options ...func(*Foobar) error) (*Foobar, error){ fb := &Foobar{} for _, op := range options{ err := op(fb) if err != nil { return nil, err } } return fb, nil }
__lb__lang-php from django.views.generic.simple import direct_to_template from lp.msgsrv.views import retmsg urlpatterns = patterns( (r (r )
__lb__lang-cpp array<array<int, 3>, 2> array2d = array<array<int, 3>, 2>();
__lb__lang-php $oVal = new stdClass(); $oVal->key1->var1 = "something"; $oVal->key1->var2 = "something else";
__lb__lang-golang max int64 = 9223372036854775807 max int32 = 2147483647 max int16 = 32767 min int64 = -9223372036854775808 min int32 = -2147483648 max flloat64= 1.7976931348623157e+308 max float32= 3.4028234663852886e+38
__lb__lang-hs *Main> fastest_f 12380192300 67652175206 *Main> fastest_f 12793129379123 120695231674999
__lb__lang-hs $ ldd A libHSOpenGL-2.4.0.1-ghc7.0.3.so => ... libHSTensor-1.0.0.1-ghc7.0.3.so => ... libHSStateVar-1.0.0.0-ghc7.0.3.so =>... libHSObjectName-1.0.0.0-ghc7.0.3.so => ... libHSGLURaw-1.1.0.0-ghc7.0.3.so => ... libHSOpenGLRaw-1.1.0.1-ghc7.0.3.so => ... libHSbase-4.3.1.0-ghc7.0.3.so => ... libHSinteger-gmp-0.2.0.3-ghc7.0.3.so => ... libHSghc-prim-0.2.0.0-ghc7.0.3.so => ... libHSrts-ghc7.0.3.so => ... libm.so.6 => /lib/libm.so.6 (0x00007ffa4ffd6000) librt.so.1 => /lib/librt.so.1 (0x00007ffa4fdce000) libdl.so.2 => /lib/libdl.so.2 (0x00007ffa4fbca000) libHSffi-ghc7.0.3.so => ...
__lb__lang-sh sudo echo > /usr/bin/CP; sudo chmod +x /usr/bin/CP; sudo touch /usr/bin/CP gedit admin:
__lb__lang-html <div class="btnCont"> <div class="txtCont"> Long text that will auto adjust as it grows. The best part is that the width of the container would not go beyond 500px! </div> <div class="subCont"> This column as well as the entire container works like a table. Isn </div> </div>
__lb__lang-hs interp :: Term -> Value interp term = runReader (interp
__lb__lang-java for (int i = 0; i < 1000; i++) { long t1 = System.nanoTime(); System.out.print("BBB......BBB"); \\<-contain 1000 "B" long t2 = System.nanoTime(); System.out.println(t2-t1); System.out.println(""); }
__lb__lang-sh (octal=$(echo -n ☠ | od -t o1 | head -1 | cut -d echo Octal representation is following $octal echo -e "$octal")
__lb__lang-cs class Program { static void Main(string[] args) { RunTest(); } private static void RunTest() { DateTime birthDate = new DateTime(2000, 2, 28); DateTime laterDate = new DateTime(2011, 2, 27); string iso = "yyyy-MM-dd"; for (int i = 0; i < 3; i++) { for (int j = 0; j < 3; j++) { Console.WriteLine("Birth date: " + birthDate.AddDays(i).ToString(iso) + " Later date: " + laterDate.AddDays(j).ToString(iso) + " Age: " + birthDate.AddDays(i).Age(laterDate.AddDays(j)).ToString()); } } Console.ReadKey(); } }
__lb__lang-sh bar --in-file /dev/rmt/1cbn --out-file \ tape-restore.tar --size 2.4g --buffer-size 64k
__lb__lang-java Parent(Child child) { if (child == null) { throw new NullPointerException("child"); } this.child = child; }
__lb__lang-sh tmux new-session \; \ send-keys split-window -v \; \ split-window -h \; \ send-keys select-pane -t 1 \; \ split-window -v \; \ send-keys
__lb__lang-java DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss"); Calendar cal = Calendar.getInstance(); System.out.println(dateFormat.format(cal.getTime()));
__lb__lang-html <textarea rows="4" cols="50" name="foo" id="foo"> Minisoft is the best Website and Software Development company providing various IT services to individual and corporate clients globally. http: </textarea>
__lb__lang-sh if empty "${var}" then echo "empty" else echo "not empty" fi
__lb__lang-sh encodeURIComponent() { awk while (y = substr(ARGV[1], ++j, 1)) q = y ~ /[[:alnum:]_.!~*\47()-]/ ? q y : q sprintf("%%%02X", z[y]) print q} }
__lb__lang-cpp int main() { std::string x = strmake() << "Current time is " << 5+5 << ":" << 5*5 << " GST"; std::cout << x << std::endl; }
__lb__lang-cs public void DoSomething() { var myUpdateObject = GetDrawingObject<Update>(new GraphicsDeviceManager()); var myDrawObject = GetDrawingObject<Draw>(null); }
__lb__lang-sh :~$ echo `alias tmux_s1= :~$ . ~/.bashrc :~$ tmux_s1
__lb__lang-cs string commaSeparatedList = input.Aggregate((a, x) => a + ", " + x)
__lb__lang-sh if [ -r config ]; then echo "" echo "Loading custom file" . config else . config.dist fi tmux start-server window=0 windownumber=-1 for i in "${combo[@]}"; do if [ $((window%2)) == 0 ]; then name=${i} ((windownumber++)) else command=${i} fi if [ ${combo[0]} == "${i}" ]; then tmux new-session -d -s StarTmux -n "${name}" else if [ $((window%2)) == 0 ]; then tmux new-window -tStarTmux:$windownumber -n "${name}" fi fi if [ $((window%2)) == 1 ]; then tmux send-keys -tStarTmux:$windownumber "${command}" C-m fi ((window++)) done tmux select-window -tStarTmux:0 tmux attach-session -d -tStarTmux
__lb__lang-php $ids = array(1,2,3,7,8,9); $db = new PDO(...); $query = FROM table WHERE X = :x AND id IN( $comma = for($i=0; $i<count($ids); $i++){ $query .= $comma. $comma = } $query .= $stmt = $db->prepare($query); $stmt->bindValue( for($i=0; $i<count($ids); $i++){ $stmt->bindValue( } $stmt->execute();
__lb__lang-cs class Utility<T> where T : ICloneable { static public IEnumerable<T> CloneList(List<T> tl) { foreach (T t in tl) { yield return (T)t.Clone(); } } }
__lb__lang-java a&&b || b&&c || a&&c : 394 ms a ? b||c : b&&c : 435 ms a&b | b&c | c&a : 420 ms a + b + c >= 2 : 640 ms a ^ b ? c : a : 571 ms a != b ? c : a : 487 ms DEAD : 170 ms
__lb__lang-css html, body { height: 100%; min-height: 100%; position: absolute; }
__lb__lang-cs A? a = x; B? b = a.HasValue ? new B?(a.GetValueOrDefault()) : y; C? first = b.HasValue ? new C?(b.GetValueOrDefault()) : z;
__lb__lang-cs public abstract class Bindable : MonoBehaviour, INotifyPropertyChanged { private readonly Dictionary<string, object> _properties = new Dictionary<string, object>(); private static readonly StackTrace stackTrace = new StackTrace(); public event PropertyChangedEventHandler PropertyChanged; internal string GetPropertyName<T>(Expression<Func<T>> property) { var expression = (MemberExpression) property.Body; var propertyName = expression.Member.Name; Debug.AssertFormat(propertyName != null, "Bindable Property shouldn return propertyName; } internal void NotifyOfPropertyChange(string propertyName) { OnPropertyChanged(new PropertyChangedEventArgs(propertyName)); } internal void NotifyOfPropertyChange<TProperty>(Expression<Func<TProperty>> property) { var propertyName = GetPropertyName(property); NotifyOfPropertyChange(propertyName); } internal void OnPropertyChanged(PropertyChangedEventArgs e) { var handler = PropertyChanged; if (handler != null) { handler(this, e); } } internal T Get<T>(Expression<Func<T>> property) { var propertyName = GetPropertyName(property); return Get<T>(GetPropertyName(property)); } internal T Get<T>() { var name = stackTrace.GetFrame(1).GetMethod().Name.Substring(4); return Get<T>(name); } internal T Get<T>(string name) { object value = null; if (_properties.TryGetValue(name, out value)) return value == null ? default(T) : (T) value; return default(T); } internal void Set<T>(T value) { var propertyName = stackTrace.GetFrame(1).GetMethod().Name.Substring(4); Set(value, propertyName); } internal void Set<T>(T value, string propertyName) { Debug.Assert(propertyName != null, "name != null"); if (Equals(value, Get<T>(propertyName))) return; _properties[propertyName] = value; NotifyOfPropertyChange(propertyName); } internal void Set<T>(T value, Expression<Func<T>> property) { var propertyName = GetPropertyName(property); Debug.Assert(propertyName != null, "name != null"); if (Equals(value, Get<T>(propertyName))) return; _properties[propertyName] = value; NotifyOfPropertyChange(propertyName); } }
__lb__lang-sh foo() { cd /d/work_space_for_my_company/project/code_source ; }
__lb__lang-cs namespace System { public static class TypeExtensions { public static object Default(this Type type) { object output = null; if (type.IsValueType) { output = Activator.CreateInstance(type); } return output; } } }
__lb__lang-perl use strict; use warnings; use Module::Build; my $build = Module::Build->resume ( properties => { config_dir => }, ); $build->dispatch( $build->dispatch(
__lb__lang-java import java.io.File; import java.io.IOException; import java.nio.file.Files; import java.util.stream.Stream; public class ReadFile_Files_Lines { public static void main(String[] pArgs) throws IOException { String fileName = "c:\\temp\\sample-10KB.txt"; File file = new File(fileName); try (Stream linesStream = Files.lines(file.toPath())) { linesStream.forEach(line -> { System.out.println(line); }); } } }
__lb__lang-java String sampleText = "test" + System.getProperty("line.separator"); Files.write(Paths.get(filePath), sampleText.getBytes(StandardCharsets.UTF_8), StandardOpenOption.CREATE, StandardOpenOption.APPEND);
__lb__lang-sh dir1 dir2 dir3 1.txt 1.txt 1.txt 2.txt 3.txt 3.txt 5.txt 4.txt 5.txt 6.txt 7.txt 8.txt
__lb__lang-css position: relative; top: 50%; transform: translateY(-50%);
__lb__lang-cs public int GenerateRandom(int min, int max) { var seed = Convert.ToInt32(Regex.Match(Guid.NewGuid().ToString(), @"\d+").Value); return new Random(seed).Next(min, max); }
__lb__lang-php <?php class Config { const TYPE_CAT=1; const TYPE_DOG=2; const TYPE_LION=4; const TYPE_RAT=8; const TYPE_BIRD=16; const TYPE_ALL=31; private $config; public function __construct($config){ $this->config=$config; if($this->is(Config::TYPE_CAT)){ echo } if($this->is(Config::TYPE_DOG)){ echo } if($this->is(Config::TYPE_RAT)){ echo } if($this->is(Config::TYPE_LION)){ echo } if($this->is(Config::TYPE_BIRD)){ echo } echo "\n"; } private function is($value){ return $this->config & $value; } } new Config(Config::TYPE_ALL); new Config(Config::TYPE_BIRD); new Config(Config::TYPE_BIRD | Config::TYPE_DOG); new Config(Config::TYPE_ALL & ~Config::TYPE_DOG & ~Config::TYPE_CAT);
__lb__lang-sh $ alias -x mkcd="mkdir \$dirname; cd \$dirname;" $ alias mkcd mkcd= $ dirname=aaa $ pwd /tmp $ mkcd $ pwd /tmp/aaa
__lb__lang-cs class FootballTeam : List<FootballPlayer> { override void Add(FootballPlayer player) { if (this.Sum(p => p.Salary) + player.Salary > SALARY_CAP)) { throw new InvalidOperationException("Would exceed salary cap!"); } } }
__lb__lang-hs class (Functor f) => StrongLaxMonoidalFunctor f where . . .
__lb__lang-java <%@ page contentType="text/html;charset=UTF-8" language="java" %> <%@ taglib uri="http: <%@ taglib uri="http:
__lb__lang-sh $ ./append_test.sh 2 Method: a+="$a" 1. 20 chars time: 1513640473.460480052 delta: 1513640473.460480052 2. 40 chars time: 1513640473.463738638 delta: .003258586 3. 80 chars time: 1513640473.466868613 delta: .003129975 4. 160 chars time: 1513640473.469948300 delta: .003079687 5. 320 chars time: 1513640473.473001255 delta: .003052955 6. 640 chars time: 1513640473.476086165 delta: .003084910 7. 1280 chars time: 1513640473.479196664 delta: .003110499 8. 2560 chars time: 1513640473.482355769 delta: .003159105 9. 5120 chars time: 1513640473.485495401 delta: .003139632 10. 10240 chars time: 1513640473.488655040 delta: .003159639 11. 20480 chars time: 1513640473.491946159 delta: .003291119 12. 40960 chars time: 1513640473.495354094 delta: .003407935 13. 81920 chars time: 1513640473.499138230 delta: .003784136 14. 163840 chars time: 1513640473.503646917 delta: .004508687 15. 327680 chars time: 1513640473.509647651 delta: .006000734 16. 655360 chars time: 1513640473.518517787 delta: .008870136 17. 1310720 chars time: 1513640473.533228130 delta: .014710343 18. 2621440 chars time: 1513640473.560111613 delta: .026883483 19. 5242880 chars time: 1513640473.606959569 delta: .046847956 20. 10485760 chars time: 1513640473.699051712 delta: .092092143 21. 20971520 chars time: 1513640473.898097661 delta: .199045949 22. 41943040 chars time: 1513640474.299620758 delta: .401523097 23. 83886080 chars time: 1513640475.092311556 delta: .792690798 24. 167772160 chars time: 1513640476.660698221 delta: 1.568386665 25. 335544320 chars time: 1513640479.776806227 delta: 3.116108006 ./append_test.sh: fork: Cannot allocate memory
__lb__lang-php if(myFunction() === false) { ... error on myFunction ... }
__lb__lang-hs > :{ > let foo a b = a + > b > :} > :t foo foo :: (Num a) => a -> a -> a
__lb__lang-java public static void main(String[] args) { List<String> list2 = new ArrayList<>(); List<Pair<Integer, String>> list1 = new ArrayList<>(); list2.add("asd"); list2.add("asdaf"); list1.add(new Pair<>(1, "werwe")); list1.add(new Pair<>(2, "tyutyu")); Stream stream = Stream.concat(list1.stream(), list2.stream()); List<Pair<Integer, String>> res = (List<Pair<Integer, String>>) stream .map(item -> { if (item instanceof String) { return new Pair<>(0, item); } else { return new Pair<>(((Pair<Integer, String>)item).getKey(), ((Pair<Integer, String>)item).getValue()); } }) .collect(Collectors.toList()); }
__lb__lang-cpp A a1; A a2 = A(1); A a3(1); A a4 = A("Venditti"); A* p = new A(1); A a5 = (A)1; A a6 = static_cast<A>(1);
__lb__lang-java String string1 = "foo"; String string2 = "FOO"; if (string1.equalsIgnoreCase(string2)) { System.out.println("Ignoring case, the two strings are the same.") }
__lb__lang-perl cpan> o conf prerequisites_policy follow cpan> o conf commit
__lb__lang-java List<Dog> dogs = new ArrayList<>(); List<Animal> animals = dogs; animals.add(new Cat());
__lb__lang-cs Hyperlink link = this.FindControl("linkid") as Hyperlink; if (link != null) { ... }
__lb__lang-php function change_key( $array, $old_key, $new_key ) { if( ! array_key_exists( $old_key, $array ) ) return $array; $keys = array_keys( $array ); $keys[ array_search( $old_key, $keys ) ] = $new_key; return array_combine( $keys, $array ); }
__lb__lang-perl while (<>) { chomp; my $result = eval; print "$_ = $result\n"; }
__lb__lang-cpp void split_string(string text,vector<string>& words) { int i=0; char ch; string word; while(ch=text[i++]) { if (isspace(ch)) { if (!word.empty()) { words.push_back(word); } word = ""; } else { word += ch; } } if (!word.empty()) { words.push_back(word); } }
__lb__lang-java enum MyEnum { ENUM_1("A"), ENUM_2("B"); private String name; private static final Map<String,MyEnum> ENUM_MAP; MyEnum (String name) { this.name = name; } public String getName() { return this.name; } static { Map<String,MyEnum> map = new ConcurrentHashMap<String,MyEnum>(); for (MyEnum instance : MyEnum.values()) { map.put(instance.getName(),instance); } ENUM_MAP = Collections.unmodifiableMap(map); } public static MyEnum get (String name) { return ENUM_MAP.get(name); } }
__lb__lang-cpp template <class T> struct has_foo { struct S { void foo(...); }; struct derived : S, T {}; template <typename V, V> struct W {}; template <typename X> char (&test(W<void (X::*)(), &X::foo> *))[1]; template <typename> char (&test(...))[2]; static const bool value = sizeof(test<derived>(0)) == 1; };
__lb__lang-golang unix time stamp in UTC :---> 2014-07-16 20:55:46 +0000 UTC unix time stamp in unitTimeInRFC3339 format :----> 2014-07-16T20:55:46Z
__lb__lang-java public class Cons { public static Cons newCons(int arg1,...) { Cons c = new Cons(...); c.setArg1(....); return c; } }
__lb__lang-css .test { width: 300px; height: 200px; background: url("http: background-size: cover; } .test:hover { background-blend-mode: luminosity; }
__lb__lang-c enum { ERR_OK, ERR_FAIL, ERR_MEMORY }; char* array[] = { _ITEM(ERR_OK), _ITEM(ERR_FAIL), _ITEM(ERR_MEMORY) };
__lb__lang-c add edx,[DeltaVFrac] ; add in dVFrac sbb ebp,ebp ; store carry mov [edi],al ; write pixel n mov al,[esi] ; fetch pixel n+1 add ecx,ebx ; add in dUFrac adc esi,[4*ebp + UVStepVCarry]; add in steps
__lb__lang-java import java.text.DecimalFormat; class TestingAndQualityAssuranceDepartment { public static void main(String [] args) { int x=1; DecimalFormat df = new DecimalFormat("00"); System.out.println(df.format(x)); } }
__lb__lang-java List aList = new ArrayList(); String s = "Hello World!"; aList.add(s); String c = (String)aList.get(0);
__lb__lang-php <?php function generateRandomString($length = 11) { $characters = $charactersLength = strlen($characters); $randomString = for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } ?>
__lb__lang-cs FormsAuth = (formsAuth != null) ? formsAuth : new FormsAuthenticationWrapper();
__lb__lang-c /* Compile as: CL /P "macro.c" */ ARRAYELEMENTCOUNT(p + 1);
__lb__lang-sh touch NOPE var="* a *" read -ra arr <<<"$var" for a in "${arr[@]}"; do echo "[$a]"; done
__lb__lang-perl package is: main trying to print global var from main package: 1 trying to print local vars from a closed block: 10, 11 trying to print global var from a function: 1 package is: Changed trying to print global var outside the func and from "Changed" package: 1 trying to print local var outside the block
__lb__lang-cpp struct Count{ uint32_t c; Count(uint32_t i=0):c(i){} uint32_t getCount(){ return c; } uint32_t add(const Count& count){ uint32_t total = c + count.getCount(); return total; } };
__lb__lang-c int i = 9; void put(void) { printf("i = %d\n", i); }
__lb__lang-cs var query = people.DistinctBy(p => new { p.Id, p.Name });
__lb__lang-java public class Singleton { private static Singleton singleInstance = new Singleton(); private Singleton() {} public static Singleton getSingleInstance() { return singleInstance; } }
__lb__lang-hs average2 :: [Float] -> Float average2 xs = uncurry (/) <$> foldl (\(sumT, n) x -> (sumT+x, n+1)) (0,0) xs -- N.B. this will build up thunks as written, use a strict pair and foldl'
__lb__lang-java public abstract class Section<T extends Section> extends Element<Section<T>> { Object attr1; /** * Compare one section object to another. * * @param obj the object being compared with this section object * @return true if this section and the other section are of the same * sub-class of section and their component fields are the same, false * otherwise */ @Override public boolean equals(Object obj) { if (obj == null) { return false; } Section<?> other; if (getClass() != obj.getClass()) { return false; } else { other = (Section<?>) obj; } return this.attr1.equals(other.attr1); } }
__lb__lang-golang var romanNumeralDict = map[int]string{ 1000: "M", 900 : "CM", 500 : "D", 400 : "CD", 100 : "C", 90 : "XC", 50 : "L", 40 : "XL", 10 : "X", 9 : "IX", 5 : "V", 4 : "IV", 1 : "I", }
__lb__lang-java Observable<List<String>> musicShowsObservable = Observable.fromCallable(new Callable<List<String>>() { @Override public List<String> call() { return mRestClient.getFavoriteMusicShows(); } }); mMusicShowSubscription = musicShowsObservable .subscribeOn(Schedulers.io()) .observeOn(AndroidSchedulers.mainThread()) .subscribe(new Observer<List<String>>() { @Override public void onCompleted() { } @Override public void onError(Throwable e) { } @Override public void onNext(List<String> musicShows){ listMusicShows(musicShows); } });
__lb__lang-java Compiled from "X.java" public class X extends java.lang.Object{ public X(); Code: 0: aload_0 1: invokespecial 4: return static boolean a(boolean, boolean, boolean); Code: 0: iload_0 1: ifeq 8 4: iload_1 5: ifne 24 8: iload_1 9: ifeq 16 12: iload_2 13: ifne 24 16: iload_0 17: ifeq 28 20: iload_2 21: ifeq 28 24: iconst_1 25: goto 29 28: iconst_0 29: ireturn static boolean b(boolean, boolean, boolean); Code: 0: iload_0 1: ifeq 20 4: iload_1 5: ifne 12 8: iload_2 9: ifeq 16 12: iconst_1 13: goto 33 16: iconst_0 17: goto 33 20: iload_1 21: ifeq 32 24: iload_2 25: ifeq 32 28: iconst_1 29: goto 33 32: iconst_0 33: ireturn static boolean c(boolean, boolean, boolean); Code: 0: iload_0 1: iload_1 2: iand 3: iload_1 4: iload_2 5: iand 6: ior 7: iload_2 8: iload_0 9: iand 10: ior 11: ireturn static boolean d(boolean, boolean, boolean); Code: 0: iload_0 1: ifeq 8 4: iconst_1 5: goto 9 8: iconst_0 9: iload_1 10: ifeq 17 13: iconst_1 14: goto 18 17: iconst_0 18: iadd 19: iload_2 20: ifeq 27 23: iconst_1 24: goto 28 27: iconst_0 28: iadd 29: iconst_2 30: if_icmplt 37 33: iconst_1 34: goto 38 37: iconst_0 38: ireturn }
__lb__lang-php class DayOfWeek { static $values = array( self::MONDAY, self::TUESDAY, ); const MONDAY = 0; const TUESDAY = 1; } $today = DayOfWeek::MONDAY; assert( in_array( $today, DayOfWeek::$values ) );
__lb__lang-cpp A a(B&&, C&&); B b(); C c(); auto ret = a(b(), c());
__lb__lang-cpp double totalMonthBenefit=0; Shop1* branch1 = &shop1; Shop2* branch2 = &shop2; Shop3* branch3 = &shop3; Shop4* branch4 = &shop4; Shop5* branch5 = &shop5; Shop6* branch6 = &shop6; totalMonthBenefit += branch1 -> getMonthBenefit(); totalMonthBenefit += branch2 -> getMonthBenefit(); totalMonthBenefit += branch3 -> getMonthBenefit(); totalMonthBenefit += branch4 -> getMonthBenefit(); totalMonthBenefit += branch5 -> getMonthBenefit(); totalMonthBenefit += branch6 -> getMonthBenefit();
__lb__lang-php $array = ["a" => "one", "b" => "two", "c" => "three"]; if (!function_exists( echo "please upgrade to php7.3"; } else { echo "First Key: " , key($array) , "\n"; echo "Last Key: " , array_key_last($array) , "\n"; next($array); echo "Second Key: " , key($array) , "\n"; echo "Still Last Key: " , array_key_last($array); }
__lb__lang-java public class MySingleton { private static MySingleton instance = null; private MySingleton() {} public static synchronized MySingleton getInstance() { if(instance == null) { instance = new MySingleton(); } return instance; } }
__lb__lang-java List<Person> sortedByAgePersons = new ArrayList<Person>(persons); Collections.sort(sortedByAgePersons, new Comparator<Person>() { public int compare(Person p1, Person p2) { return Integer.valueOf(p1.getAge()).compareTo(p2.getAge()); } });
__lb__lang-c int i, a[100]; for (i = 0; i < LEN(a); i++) { ... }
__lb__lang-cpp Declare Function Do_Something Lib "SomeOther.DLL" (ByRef smfID As Integer, ByVal cursor_name As String, ByVal sql As String) As Integer
__lb__lang-c main(_){_^448&&main(-~_);putchar(--_%64?32|-~7[__TIME__-_/8%8][">
__lb__lang-sh cp -v [MacVim_source_folder]/src/MacVim/mvim /usr/local/bin
__lb__lang-cpp template <typename U, typename = void> struct hasToString : std::false_type { }; template <typename U> struct hasToString<U, typename std::enable_if<bool(sizeof(&U::toString))>::type > : std::true_type { };
__lb__lang-css display: -moz-inline-stack; display: inline-block; zoom: 1; *display: inline;
__lb__lang-sh %% ls -l `which mvn` lrwxr-xr-x 1 draistrick 502 29 Dec 17 10:50 /usr/local/bin/mvn@ -> ../Cellar/maven/3.2.3/bin/mvn
__lb__lang-css .foo { background-image: url(bg-image.png); -moz-background-size: 100% 100%; -o-background-size: 100% 100%; -webkit-background-size: 100% 100%; background-size: 100% 100%; }
__lb__lang-cpp int strcmp(const char*,const char*); int strcmpi(const char*,const char*);
__lb__lang-cs string json = ...; var serializer = new JavaScriptSerializer(); serializer.RegisterConverters(new[] { new DynamicJsonConverter() }); dynamic obj = serializer.Deserialize(json, typeof(object));
__lb__lang-perl use List::Util qw my $element = 0; if( first { $element eq $_ } 0..9 ){ print "success\n"; } else { print "failure\n"; }
__lb__lang-sh function relpath() { python -c "import os,sys;print(os.path.relpath(*(sys.argv[1:])))" "$@"; }
__lb__lang-css .backgroundImageCVR{ position:relative; padding:15px; } .background-image{ position:absolute; left:0; right:0; top:0; bottom:0; background:url( background-size:cover; z-index:1; -webkit-filter: blur(10px); -moz-filter: blur(10px); -o-filter: blur(10px); -ms-filter: blur(10px); filter: blur(10px); } .content{ position:relative; z-index:2; color: }
__lb__lang-java final long endTime, startTime = System.nanoTime(); endTime = System.nanoTime(); System.out.println("Code took "+(endTime-startTime)+"nano seconds");
__lb__lang-java fun read(b: Array<Byte>, off: Int = 0, len: Int = b.size) { ... }
__lb__lang-perl s = Swap / = Beginning of source pattern \( = start storing this value [^ ] = text not matching the space character * = 0 or more of the previous pattern \) = stop storing this value \( = start storing this value . = any character * = 0 or more of the previous pattern \) = stop storing this value / = End of source pattern, beginning of replacement \2 = Retrieve the 2nd stored value \1 = Retrieve the 1st stored value / = end of replacement
__lb__lang-css .EXTENDER { position: absolute; top: 0px; left: 0px; bottom: 0px; right: 0px; width: 100%; height: 100%; overflow-y: hidden; overflow-x: hidden; } .PADDER-CENTER { width: 100%; height: 100%; display: -webkit-box; display: -moz-box; display: -ms-flexbox; display: -webkit-flex; display: flex; -webkit-box-pack: center; -moz-box-pack: center; -ms-flex-pack: center; -webkit-justify-content: center; justify-content: center; -webkit-box-align: center; -moz-box-align: center; -ms-flex-align: center; -webkit-align-items: center; align-items: center; }
__lb__lang-cs public static class Text { public const string ConstDescription = "This can be used."; public readonly static string ReadonlyDescription = "Cannot be used."; } public class Foo { [Description(Text.ConstDescription)] public int BarThatBuilds { { get; set; } } [Description(Text.ReadOnlyDescription)] public int BarThatDoesNotBuild { { get; set; } } }
__lb__lang-php <?php $bigArray = range(1,100000); $iterations = 1000000; $start = microtime(true); while ($iterations--) { isset($bigArray[50000]); } echo $iterations = 1000000; $start = microtime(true); while ($iterations--) { array_key_exists(50000, $bigArray); } echo ?>
__lb__lang-cs public static string GetMemberName(this LambdaExpression memberSelector) { var currentExpression = memberSelector.Body; while (true) { switch (currentExpression.NodeType) { case ExpressionType.Parameter: return ((ParameterExpression)currentExpression).Name; case ExpressionType.MemberAccess: return ((MemberExpression)currentExpression).Member.Name; case ExpressionType.Call: return ((MethodCallExpression)currentExpression).Method.Name; case ExpressionType.Convert: case ExpressionType.ConvertChecked: currentExpression = ((UnaryExpression)currentExpression).Operand; break; case ExpressionType.Invoke: currentExpression = ((InvocationExpression)currentExpression).Expression; break; case ExpressionType.ArrayLength: return "Length"; default: throw new Exception("not a proper member selector"); } } }
__lb__lang-java collection.stream().collect(Collectors.filtering(predicate, collector))
__lb__lang-golang func Append(slice, data[]byte) []byte { l := len(slice); if l + len(data) > cap(slice) { newSlice := make([]byte, (l+len(data))*2); for i, c := range slice { newSlice[i] = c } slice = newSlice; } slice = slice[0:l+len(data)]; for i, c := range data { slice[l+i] = c } return slice; }
__lb__lang-css .container { overflow: hidden; } .column { float: left; margin: 20px; background-color: grey; padding-bottom: 100%; margin-bottom: -100%; }
__lb__lang-html <div class="as-table"> <div id="header"> <p>This header can vary in height, it also doesn <div class="additional-padding"></div> </div> <div class="as-table-row"> <div id="content"> <p>This is the actual content that takes the rest of the available space.</p> </div> </div> </div>
__lb__lang-cs class MyExceptionClass : Exception { public MyExceptionClass(string message, string extraInfo) : base(ModifyMessage(message, extraInfo)) { } private static string ModifyMessage(string message, string extraInfo) { Trace.WriteLine("message was " + message); return message.ToLowerInvariant() + Environment.NewLine + extraInfo; } }
__lb__lang-java import java.lang.ref.WeakReference; import java.util.HashMap; public class Test { public static void main(String args[]) { HashMap<Employee, EmployeeVal> map = new HashMap<Employee, EmployeeVal>(); WeakReference<HashMap<Employee, EmployeeVal>> aMap = new WeakReference<HashMap<Employee, EmployeeVal>>( map); map = null; while (null != aMap.get()) { aMap.get().put(new Employee("Vinoth"), new EmployeeVal("Programmer")); System.out.println("Size of aMap " + aMap.get().size()); System.gc(); } System.out.println("Its garbage collected"); } }
__lb__lang-php <?php $string = file_get_contents("/home/michael/test.json"); $json_a=json_decode($string,true); foreach ($json_a as $key => $value){ echo $key . } ?>
__lb__lang-cs using (Stream file = File.Create(filename)) { CopyStream(input, file); }
__lb__lang-html <button disabled="disabled">disabled!</button> <button>click me!</button> <a href="http: <a href="http:
__lb__lang-php function cutat($num, $tt){ if (mb_strlen($tt)>$num){ $tt=mb_substr($tt,0,$num-2). } return $tt; }
__lb__lang-java import java.io.File; import java.io.FileOutputStream; import java.io.IOException; import java.io.InputStream; import java.net.HttpURLConnection; import java.net.MalformedURLException; import java.net.URL; import android.app.Activity; import android.app.Dialog; import android.os.Bundle; import android.os.Environment; import android.view.View; import android.view.Window; import android.view.View.OnClickListener; import android.widget.Button; import android.widget.ProgressBar; import android.widget.TextView; import android.widget.Toast; public class DownloadFileUseHttpURLConnection extends Activity { ProgressBar pb; Dialog dialog; int downloadedSize = 0; int totalSize = 0; TextView cur_val; String dwnload_file_path = "http: @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); Button b = (Button) findViewById(R.id.b1); b.setOnClickListener(new OnClickListener() { @Override public void onClick(View v) { showProgress(dwnload_file_path); new Thread(new Runnable() { public void run() { downloadFile(); } }).start(); } }); } void downloadFile(){ try { URL url = new URL(dwnload_file_path); HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection(); urlConnection.setRequestMethod("GET"); urlConnection.setDoOutput(true); urlConnection.connect(); File SDCardRoot = Environment.getExternalStorageDirectory(); File file = new File(SDCardRoot,"downloaded_file.png"); FileOutputStream fileOutput = new FileOutputStream(file); InputStream inputStream = urlConnection.getInputStream(); totalSize = urlConnection.getContentLength(); runOnUiThread(new Runnable() { public void run() { pb.setMax(totalSize); } }); byte[] buffer = new byte[1024]; int bufferLength = 0; while ( (bufferLength = inputStream.read(buffer)) > 0 ) { fileOutput.write(buffer, 0, bufferLength); downloadedSize += bufferLength; runOnUiThread(new Runnable() { public void run() { pb.setProgress(downloadedSize); float per = ((float)downloadedSize/totalSize) * 100; cur_val.setText("Downloaded " + downloadedSize + "KB / " + totalSize + "KB (" + (int)per + "%)" ); } }); } fileOutput.close(); runOnUiThread(new Runnable() { public void run() { } }); } catch (final MalformedURLException e) { showError("Error : MalformedURLException " + e); e.printStackTrace(); } catch (final IOException e) { showError("Error : IOException " + e); e.printStackTrace(); } catch (final Exception e) { showError("Error : Please check your internet connection " + e); } } void showError(final String err){ runOnUiThread(new Runnable() { public void run() { Toast.makeText(DownloadFileDemo1.this, err, Toast.LENGTH_LONG).show(); } }); } void showProgress(String file_path){ dialog = new Dialog(DownloadFileDemo1.this); dialog.requestWindowFeature(Window.FEATURE_NO_TITLE); dialog.setContentView(R.layout.myprogressdialog); dialog.setTitle("Download Progress"); TextView text = (TextView) dialog.findViewById(R.id.tv1); text.setText("Downloading file from ... " + file_path); cur_val = (TextView) dialog.findViewById(R.id.cur_pg_tv); cur_val.setText("Starting download..."); dialog.show(); pb = (ProgressBar)dialog.findViewById(R.id.progress_bar); pb.setProgress(0); pb.setProgressDrawable( getResources().getDrawable(R.drawable.green_progress)); } }
__lb__lang-cs public class MyClass { public virtual MyClass DeepClone() { var returnObj = (MyClass)MemberwiseClone(); var type = returnObj.GetType(); var fieldInfoArray = type.GetRuntimeFields().ToArray(); foreach (var fieldInfo in fieldInfoArray) { object sourceFieldValue = fieldInfo.GetValue(this); if (!(sourceFieldValue is MyClass)) { continue; } var sourceObj = (MyClass)sourceFieldValue; var clonedObj = sourceObj.DeepClone(); fieldInfo.SetValue(returnObj, clonedObj); } return returnObj; } }
__lb__lang-cpp list copy(const node* p) { return list( p==nullptr ? nullptr : new node{p->entry,copy(p->next.get())} ); }
__lb__lang-golang package main import ( "bytes" "fmt" ) func main() { var buffer bytes.Buffer for i := 0; i < 1000; i++ { buffer.WriteString("a") } fmt.Println(buffer.String()) }
__lb__lang-php /** * A method for sorting arrays by a certain key:value. * SortByKey is the key you wish to sort by * Direction can be ASC or DESC. * * @param $array * @param $sortByKey * @param $sortDirection * @return array */ private function sortArray($array, $sortByKey, $sortDirection) { $sortArray = array(); $tempArray = array(); foreach ( $array as $key => $value ) { $tempArray[] = strtolower( $value[ $sortByKey ] ); } if($sortDirection== else{ arsort($tempArray ); } foreach ( $tempArray as $key => $temp ){ $sortArray[] = $array[ $key ]; } return $sortArray; }
__lb__lang-sh $ timeout 1 bash -c $ echo $? 0 $ timeout 1 bash -c bash: sfsfdfdff.com: Name or service not known bash: /dev/tcp/sfsfdfdff.com/80: Invalid argument $ echo $? 1 $ timeout 1 bash -c $ echo $? 124
__lb__lang-css height: 90px; width: 270px; background: font-size: 48px; font-style: oblique; color: text-align: center; margin-top: 20px; margin-left: 5px; display: table-cell; vertical-align: middle; }
__lb__lang-php error_reporting(E_ALL | E_STRICT); ini_set( ini_set(
__lb__lang-java List<String> names = Queryable.from(people) .filter(p->p.age>20) .map (p->p.name) .toList();
__lb__lang-cpp class Line { public: Line(); ~Line(); std::string* mString; }; Line::Line() { mString = new std::string("foo_bar"); } Line::~Line() { delete mString; }
__lb__lang-cs public static Dictionary<string,int> CurrentAgeInYearsMonthsDays(DateTime? ndtBirthDate, DateTime? ndtReferralDate) { if (ndtBirthDate == null) return null; if (ndtReferralDate == null) return null; DateTime dtBirthDate = Convert.ToDateTime(ndtBirthDate); DateTime dtReferralDate = Convert.ToDateTime(ndtReferralDate); Dictionary<string, int> dYMD = new Dictionary<string,int>(); int iNowDate, iBirthDate, iYears, iMonths, iDays; string sDif = ""; iNowDate = int.Parse(dtReferralDate.ToString("yyyyMMdd")); iBirthDate = int.Parse(dtBirthDate.ToString("yyyyMMdd")); sDif = (iNowDate - iBirthDate).ToString(); iYears = int.Parse(sDif.Substring(0, sDif.Length - 4)); dYMD.Add("Years", iYears); if (dtBirthDate.Month > dtReferralDate.Month) iMonths = 12 - dtBirthDate.Month + dtReferralDate.Month - 1; else iMonths = dtBirthDate.Month - dtReferralDate.Month; dYMD.Add("Months", iMonths); if (dtBirthDate.Day > dtReferralDate.Day) if (dtReferralDate.Month == 1) iDays = DateTime.DaysInMonth(dtReferralDate.Year - 1, 12) - dtBirthDate.Day + dtReferralDate.Day; else iDays = DateTime.DaysInMonth(dtReferralDate.Year, dtReferralDate.Month - 1) - dtBirthDate.Day + dtReferralDate.Day; else iDays = dtReferralDate.Day - dtBirthDate.Day; dYMD.Add("Days", iDays); return dYMD; }
__lb__lang-java public Object clone() throws CloneNotSupportedException { return super.clone(); }
__lb__lang-golang package main import ( "fmt" "flag" ) func main() { flag.Parse() fmt.Println(flag.Args()...) }
__lb__lang-golang const ( c0 = iota c1 = iota c2 = iota ) const ( a = 1 << iota b = 1 << iota c = 1 << iota ) const ( u = iota * 42 v float64 = iota * 42 w = iota * 42 ) const x = iota const y = iota
__lb__lang-php class Foo { const NAME = protected static $staticName = self::NAME; public function __construct() { echo $this::NAME; } public function getStaticName() { echo $this::$staticName; } } class Bar extends Foo { const NAME = /** * override getStaticName to output Bar::NAME */ public function getStaticName() { $this::$staticName = $this::NAME; parent::getStaticName(); } } $foo = new Foo; $bar = new Bar; $foo->getStaticName(); $bar->getStaticName(); $foo->getStaticName();
__lb__lang-cs excel = new Microsoft.Office.Interop.Excel.Application(); var process = Process.GetProcessesByName("EXCEL").OrderByDescending(p => p.StartTime).First();
__lb__lang-golang const STRUCTURE_DATA_FMT = "%+v" fmt.Println(commons.STRUCTURE_DATA_FMT, structure variable)
__lb__lang-hs f* = mu . T(f) : T(X) -> T(Y) (f =<<) = join . map f :: m a -> m b
__lb__lang-perl my @a = (undef, undef); my $size = @a; warn "Size: " . $ warn "Size: " . $size;
__lb__lang-java import java.util.Random; public class passGen{ private static final String dCase = "abcdefghijklmnopqrstuvwxyz"; private static final String uCase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"; private static final String sChar = "!@ private static final String intChar = "0123456789"; private static Random r = new Random(); private static String pass = ""; public static void main (String[] args) { System.out.println ("Generating pass..."); while (pass.length () != 16){ int rPick = r.nextInt(4); if (rPick == 0){ int spot = r.nextInt(25); pass += dCase.charAt(spot); } else if (rPick == 1) { int spot = r.nextInt (25); pass += uCase.charAt(spot); } else if (rPick == 2) { int spot = r.nextInt (7); pass += sChar.charAt(spot); } else if (rPick == 3){ int spot = r.nextInt (9); pass += intChar.charAt (spot); } } System.out.println ("Generated Pass: " + pass); } }
__lb__lang-sh install -D file /path/to/copy/file/to/is/very/deep/there/file
__lb__lang-cs @using (Html.BeginForm("UploadFile", "Home", FormMethod.Post, new { enctype = "multipart/form-data" })) { <input type="file" name="file" /> <input type="submit" value="Submit" /> }
__lb__lang-c void use_them(void) { printf("Global variable: %d\n", global_variable++); oddball_struct.a += global_variable; oddball_struct.b -= global_variable / 2; }
__lb__lang-hs Jan 25 23:47:23 <olsner> @pl let q = 2 : map (2*) q in q Jan 25 23:47:23 <lambdabot> fix ((2 :) . map (2 *))
__lb__lang-cpp using namespace std; class father { public: void get_age() {cout << "Fathers age is 50 years" << endl;} }; class son: public father { public : void get_age() { cout << "son`s age is 26 years" << endl;} }; int main(){ father *p_father = new father; son *p_son = new son; p_father->get_age(); p_father = p_son; p_father->get_age(); p_son->get_age(); return 0; }
__lb__lang-php cd public_html/wp-content sudo chown -R www-data:wp-user wflogs sudo chown -R www-data:wp-user uploads
__lb__lang-css width: 100px; height: 100px; position: relative; } width: 100%; height: 100%; position: absolute; top: 0; left: 0; } z-index: 10; }
__lb__lang-cs [AjaxOnly] [HttpPost] public ActionResult UploadImageAction(HttpPostedFileBase UploadImage) { string path = Server.MapPath("~") + "Files\\UploadImages\\" + UploadImage.FileName; System.Drawing.Image img = new Bitmap(UploadImage.InputStream); img.Save(path); return View(); }
__lb__lang-hs (ASTF sup (Internal a) -> AST sup ((Internal a) :-> Full (Internal b)) -> ASTF sup (Internal b))
__lb__lang-golang arr := []int{1, 2, 3} tmp := make([]int, len(arr)) copy(tmp, arr) fmt.Println(tmp) fmt.Println(arr)
__lb__lang-java <bean id="bBean" class="com.xxx.B" /> <bean id="cBean" class="com.xxx.C" /> <bean id="aBean" class="com.yyy.A"> <property name="bbb" ref="bBean" /> <property name="ccc" ref="cBean" /> </bean>
__lb__lang-cs PropertyInfo GetPropertyName<TSource, TProperty>( Expression<Func<TSource, TProperty>> propertyLambda) { var body = propertyLambda.Body; if (!(body is MemberExpression member) && !(body is UnaryExpression unary && (member = unary.Operand as MemberExpression) != null)) throw new ArgumentException($"Expression "does not refer to a property."); if (!(member.Member is PropertyInfo propInfo)) throw new ArgumentException($"Expression "refers to a field, not a property."); var type = typeof(TSource); if (!propInfo.DeclaringType.GetTypeInfo().IsAssignableFrom(type.GetTypeInfo())) throw new ArgumentException($"Expresion "refers to a property that is not from type return propInfo; }
__lb__lang-java Date d = new SimpleDateFormat( "yyyy-MM-dd Locale.ENGLISH).format(System.currentTimeMillis());
__lb__lang-css .dad { background: lime; border: 1px double black; margin: 1ex 2ex; padding: 0.5ex; position: relative; -k-z-index: 5; } .fancyBg { border: 1px dashed black; position: relative; color: white; font-weight: bold; z-index: 0; } .fancyBg:before {content: position: absolute; background: red; opacity: .5; top: 2ex; right: -2ex; bottom: -2ex; left: 2ex; z-index: -1; }
__lb__lang-hs intercalate :: [a] -> [[a]] -> [a] intercalate s [] = [] intercalate s [x] = x intercalate s (x:xs) = x ++ s ++ (intercalate s xs) intersperse :: a -> [a] -> [a] intersperse s [] = [] intersperse s [x] = [x] intersperse s (x:xs) = x : s : (intersperse s xs)
__lb__lang-cs private static string ByteArrayToHex(byte[] barray) { char[] c = new char[barray.Length * 2]; byte b; for (int i = 0; i < barray.Length; ++i) { b = ((byte)(barray[i] >> 4)); c[i * 2] = (char)(b > 9 ? b + 0x37 : b + 0x30); b = ((byte)(barray[i] & 0xF)); c[i * 2 + 1] = (char)(b > 9 ? b + 0x37 : b + 0x30); } return new string(c); }
__lb__lang-golang c := make(chan os.Signal, 1) signal.Notify(c, os.Interrupt) go func() { for sig := range c { log.Printf("captured %v, stopping profiler and exiting..", sig) pprof.StopCPUProfile() os.Exit(1) } }()
__lb__lang-php composer create-project --prefer-dist laravel/laravel myProje
__lb__lang-cs using System.ComponentModel; private bool bShowGroup ; [Description("Show the group table"), Category("Sea"),DefaultValue(true)] public bool ShowGroup { get { return bShowGroup; } set { bShowGroup = value; } }
__lb__lang-cs public static string Combine(string uri1, string uri2) { uri1 = uri1.TrimEnd( uri2 = uri2.TrimStart( return string.Format("{0}/{1}", uri1, uri2); }
__lb__lang-hs instance Monad Maybe where return = Just join (Just m) = m join Nothing = Nothing
__lb__lang-hs Prelude> show 3 "3" Prelude> read $ show 3 :: Int 3
__lb__lang-sh relpath () { [ $ current="${2:+"$1"}" target="${2:-"$1"}" [ "$target" != . ] || target=/ target="/${target [ "$current" != . ] || current=/ current="${current:="/"}" current="/${current appendix="${target relative= while appendix="${target [ "$current" != if [ "$current" = "$appendix" ]; then relative="${relative:-.}" echo "${relative return 0 fi current="${current%/*}" relative="$relative${relative:+/}.." done relative="$relative${relative:+${appendix:+/}}${appendix echo "$relative" } relpath "$@"
__lb__lang-java private static final Map<String, String> EXTENSION_TO_MIMETYPE = Arrays.stream(new String[][] { { "txt", "text/plain" }, { "html", "text/html" }, { "js", "application/javascript" }, { "css", "text/css" }, { "xml", "application/xml" }, { "png", "image/png" }, { "gif", "image/gif" }, { "jpg", "image/jpeg" }, { "jpeg", "image/jpeg" }, { "svg", "image/svg+xml" }, }).collect(Collectors.toMap(kv -> kv[0], kv -> kv[1]));
__lb__lang-java /Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home
__lb__lang-php $ php -i | grep Configuration File (php.ini) Path => /etc Loaded Configuration File => /etc/php.ini
__lb__lang-c void format_string(char *fmt, ...); void debug_print(int dbg_lvl, char *fmt, ...) { format_string(fmt, ); fprintf(stdout, fmt); }
__lb__lang-cpp std::string strsub(std::string stringToModify, std::string charsToReplace, std::string replacementChars); int main() { std::string silly_typos = "annoiiyyyng syyyllii tiipos."; std::cout << "Look at these " << silly_typos << std::endl; silly_typos = strsub(silly_typos, "yyy", "i"); std::cout << "After a little elbow-grease, a few less " << silly_typos << std::endl; silly_typos = strsub(silly_typos, "ii", "y"); std::cout << "There, no more " << silly_typos << std::endl; return 0; } std::string strsub(std::string stringToModify, std::string charsToReplace, std::string replacementChars) { std::string this_string = stringToModify; std::size_t this_occurrence = this_string.find(charsToReplace); while (this_occurrence != std::string::npos) { this_string.erase(this_occurrence, charsToReplace.size()); this_string.insert(this_occurrence, replacementChars); this_occurrence = this_string.find(charsToReplace, this_occurrence + replacementChars.size()); } return this_string; }
__lb__lang-html <html> <body> <div id="body" class="container-fluid"> <!--Background--> <!--Text--> <div class="text"> <p>Random</p> </div> </div> </body> </html>
__lb__lang-cs public static string Join(string separator, IEnumerable<string> values) public static string Join<T>(string separator, IEnumerable<T> values)
__lb__lang-php function startsWith($haystack,$needle,$case=true) { if ($case) return strpos($haystack, $needle, 0) === 0; return stripos($haystack, $needle, 0) === 0; } function endsWith($haystack,$needle,$case=true) { $expectedPosition = strlen($haystack) - strlen($needle); if ($case) return strrpos($haystack, $needle, 0) === $expectedPosition; return strripos($haystack, $needle, 0) === $expectedPosition; }
__lb__lang-java Element[] array = {new Element(1), new Element(2), new Element(3)}; ArrayList<Element>elementArray=new ArrayList(); for(int i=0;i<array.length;i++) { elementArray.add(array[i]); }
__lb__lang-css /* Extra small devices (767px and down) */ @media (max-width: 767px) { .row.vertical-align { display: block; } }
__lb__lang-php function getUserIP() { $ipaddress = if (isset($_SERVER[ $ipaddress = $_SERVER[ else if(isset($_SERVER[ $ipaddress = $_SERVER[ else if(isset($_SERVER[ $ipaddress = $_SERVER[ else if(isset($_SERVER[ $ipaddress = $_SERVER[ else if(isset($_SERVER[ $ipaddress = $_SERVER[ else if(isset($_SERVER[ $ipaddress = $_SERVER[ else if(isset($_SERVER[ $ipaddress = $_SERVER[ else $ipaddress = return $ipaddress; }
__lb__lang-golang package main import ( "encoding/json" "log" "net/http" ) type test_struct struct { Test string } func test(rw http.ResponseWriter, req *http.Request) { req.ParseForm() log.Println(req.Form) var t test_struct for key, _ := range req.Form { log.Println(key) err := json.Unmarshal([]byte(key), &t) if err != nil { log.Println(err.Error()) } } log.Println(t.Test) } func main() { http.HandleFunc("/test", test) log.Fatal(http.ListenAndServe(":8082", nil)) }
__lb__lang-golang $ gotour 2012/10/11 18:35:50 Serving content from /usr/local/Cellar/go/1.0.2/src/pkg/code.google.com/p/go-tour 2012/10/11 18:35:50 Open your web browser and visit http:
__lb__lang-java if((Double)base.get(a) < (Double)base.get(b)) { return 1; } else if((Double)base.get(a) == (Double)base.get(b)) { return -1; } else { return -1; }
__lb__lang-java <form action="upload" method="post" enctype="multipart/form-data"> <input type="file" name="file" /> <input type="submit" value="Upload"/> </form>
__lb__lang-cs [DataContract] public class EnumMember { [DataMember] public string Description { get; set; } [DataMember] public int Value { get; set; } public static List<EnumMember> ConvertToList<T>() { Type type = typeof(T); if (!type.IsEnum) { throw new ArgumentException("T must be of type enumeration."); } var members = new List<EnumMember>(); foreach (string item in System.Enum.GetNames(type)) { var enumType = System.Enum.Parse(type, item); members.Add( new EnumMember() { Description = enumType.GetDescriptionValue(), Value = ((IConvertible)enumType).ToInt32(null) }); } return members; } }
__lb__lang-cpp class Birds { public: friend Birds operator +(Birds, Birds); private: int numberInFlock; }; Birds operator +(Birds b1, Birds b2) { Birds temp; temp.numberInFlock = b1.numberInFlock + b2.numberInFlock; return temp; }
__lb__lang-cs public class SkilledPerson extends Person { private String theSkills; public SkilledPerson(Brain aBrain, int theAge, String skills) { super(aBrain, theAge); theSkills = skills; } protected SkilledPerson(SkilledPerson another) { super(another); theSkills = another.theSkills; } public Object clone() { return new SkilledPerson(this); } public String toString() { return "SkilledPerson: " + super.toString(); } }
__lb__lang-hs f !! 6 = g 6 = max 6 $ f !! 3 + f !! 2 + f !! 1 f !! 3 = g 3 = max 3 $ f !! 1 + f !! 1 + f !! 0 f !! 1 = g 1 = max 1 $ f !! 0 + f !! 0 + f !! 0 f !! 0 = 0
__lb__lang-java int[] i = new int[capacity]; int[] i = new int[] {value1, value2, value3, etc}; int[] i = {value1, value2, value3, etc};
__lb__lang-html <script src="https: <p>Single Characters:</p> <span class="halfStyle" data-content="X">X</span> <span class="halfStyle" data-content="Y">Y</span> <span class="halfStyle" data-content="Z">Z</span> <span class="halfStyle" data-content="A">A</span> <hr/> <p>Automated:</p> <span class="textToHalfStyle">Half-style, please.</span>
__lb__lang-cs public string jsonMini(DataSet ds) { int t=0, r=0, c=0; string stream = "["; for (t = 0; t < ds.Tables.Count; t++) { stream += "["; for (r = 0; r < ds.Tables[t].Rows.Count; r++) { stream += "{"; for (c = 0; c < ds.Tables[t].Columns.Count; c++) { stream += ds.Tables[t].Columns[c].ToString() + ": } if(c>0) stream = stream.Substring(0, stream.Length - 1); stream += "},"; } if(r>0) stream = stream.Substring(0, stream.Length - 1); stream += "],"; } if(t>0) stream = stream.Substring(0, stream.Length - 1); stream += "];"; return stream; }
__lb__lang-php $len = count($array); foreach ($array as $index => $item) { if ($index == 0) { continue; } if ($index == $len - 1) { continue; } }
__lb__lang-sh read -p "Are you sure? (y/n) " -n 1 echo if [[ $REPLY =~ ^[Yy]$ ]]; then do_something fi
__lb__lang-golang package main import "fmt" func main() { var val interface{} val = 4 var i int switch t := val.(type) { case int: fmt.Printf("%d == %T\n", t, t) i = t case int8: fmt.Printf("%d == %T\n", t, t) i = int(t) case int16: fmt.Printf("%d == %T\n", t, t) i = int(t) case int32: fmt.Printf("%d == %T\n", t, t) i = int(t) case int64: fmt.Printf("%d == %T\n", t, t) i = int(t) case bool: fmt.Printf("%t == %T\n", t, t) case float32: fmt.Printf("%g == %T\n", t, t) i = int(t) case float64: fmt.Printf("%f == %T\n", t, t) i = int(t) case uint8: fmt.Printf("%d == %T\n", t, t) i = int(t) case uint16: fmt.Printf("%d == %T\n", t, t) i = int(t) case uint32: fmt.Printf("%d == %T\n", t, t) i = int(t) case uint64: fmt.Printf("%d == %T\n", t, t) i = int(t) case string: fmt.Printf("%s == %T\n", t, t) default: fmt.Printf("%v == %T\n", t, t) } fmt.Printf("i == %d\n", i) }
__lb__lang-java private Map<String, Choice> nameMap(List<Choice> choices) { return Maps.uniqueIndex(choices, new Function<Choice, String>() { @Override public String apply(final Choice input) { return input.getName(); } }); }
__lb__lang-java Rhino rhino = new Rhino(); Rhino.Goat goat = rhino.new Goat();
__lb__lang-cs txtLog.Invoke((MethodInvoker)delegate { txtLog.Text = "my message"; });
__lb__lang-php <?php echo $my_rand_strng = substr(str_shuffle("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"), -15); echo substr(md5(rand()), 0, 7); echo str_shuffle(MD5(microtime())); ?>
__lb__lang-sh SCRIPT=$(readlink -f "$0") SCRIPTPATH=$(dirname "$SCRIPT") echo $SCRIPTPATH
__lb__lang-cs public static class IEnumerableExtensions { public static IEnumerable<t> Randomize<t>(this IEnumerable<t> target) { Random r = new Random(); return target.OrderBy(x=>(r.Next())); } }
__lb__lang-cs class MyDate { int year, month, day; } class Lad { string firstName; string lastName; MyDate dateOfBirth; }
__lb__lang-php require_once("vendor/autoload.php"); use Underscore\Types\String; $str = "there is a string"; echo( String::startsWith($str, echo( String::endsWith($str,
__lb__lang-cs class SecureFastRandom { static byte[] byteCache = new byte[1000000]; static int lastPosition = 0; static int remaining = 0; public static void DirectGetBytes(byte[] buffer) { using (var r = new RNGCryptoServiceProvider()) { r.GetBytes(buffer); } } public static void GetBytes(byte[] buffer) { if (buffer.Length > byteCache.Length) { DirectGetBytes(buffer); return; } lock (byteCache) { if (buffer.Length > remaining) { DirectGetBytes(byteCache); lastPosition = 0; remaining = byteCache.Length; } Buffer.BlockCopy(byteCache, lastPosition, buffer, 0, buffer.Length); lastPosition += buffer.Length; remaining -= buffer.Length; } } public static byte GetByte() { lock (byteCache) { return UnsafeGetByte(); } } static byte UnsafeGetByte() { if (1 > remaining) { DirectGetBytes(byteCache); lastPosition = 0; remaining = byteCache.Length; } lastPosition++; remaining--; return byteCache[lastPosition - 1]; } public static void GetBytesWithMax(byte[] buffer, byte max) { if (buffer.Length > byteCache.Length / 2) { DirectGetBytes(buffer); lock (byteCache) { UnsafeCheckBytesMax(buffer, max); } } else { lock (byteCache) { if (buffer.Length > remaining) DirectGetBytes(byteCache); Buffer.BlockCopy(byteCache, lastPosition, buffer, 0, buffer.Length); lastPosition += buffer.Length; remaining -= buffer.Length; UnsafeCheckBytesMax(buffer, max); } } } static void UnsafeCheckBytesMax(byte[] buffer, byte max) { for (int i = 0; i < buffer.Length; i++) { while (buffer[i] >= max) buffer[i] = UnsafeGetByte(); } } }
__lb__lang-cs public abstract class DefaultValueInitializer { protected DefaultValueInitializer() { InitializeDefaultValues(this); } public static void InitializeDefaultValues(object obj) { var props = from prop in obj.GetType().GetProperties() let attrs = prop.GetCustomAttributes(typeof(InstanceAttribute), false) where attrs.Any() select new { Property = prop, Attr = ((InstanceAttribute)attrs.First()) }; foreach (var pair in props) { object value = !pair.Attr.IsConstructorCall && pair.Attr.Values.Length > 0 ? pair.Attr.Values[0] : Activator.CreateInstance(pair.Property.PropertyType, pair.Attr.Values); pair.Property.SetValue(obj, value, null); } } }
__lb__lang-java public class Hashtable<K,V> extends Dictionary<K,V> implements Map<K,V>, Cloneable, Serializable { ... } public class HashMap<K,V> extends AbstractMap<K,V> implements Map<K,V>, Cloneable, Serializable { ... }
__lb__lang-java list.setOnCreateContextMenuListener(new OnCreateContextMenuListener() { public void onCreateContextMenu(ContextMenu arg1, View arg2, ContextMenuInfo arg3) { } });
__lb__lang-golang object field 0 key=Name value=yog prakash type=string object field 1 key=Age value=24 type=int object field 2 key=Height value=5.6 type=float64
__lb__lang-css body { display: flex; flex-wrap: wrap; justify-content: space-between; } div { width: 23vw; height: 23vw; margin: 0.5vw auto; background: gold; }
__lb__lang-hs discSwap :: DVD -> DVDDrive True True DVD discSwap dvd = do dvd
__lb__lang-hs instance Applicative Boo where pure _ = Boo True Boo b1 <*> Boo b2 = Boo (b1 == b2)
__lb__lang-golang package main import ( "bufio" "fmt" "log" "os" ) func main() { file, err := os.Open("/path/to/file.txt") if err != nil { log.Fatal(err) } defer file.Close() scanner := bufio.NewScanner(file) for scanner.Scan() { fmt.Println(scanner.Text()) } if err := scanner.Err(); err != nil { log.Fatal(err) } }
__lb__lang-cs static T FindThing<T>(IList collection, int id) where T : class, IThing, new()
__lb__lang-java java.lang.reflect.Method method; try { method = obj.getClass().getMethod(methodName, param1.class, param2.class, ..); } catch (SecurityException e) { ... } catch (NoSuchMethodException e) { ... }
__lb__lang-cs public class Order { public string OrderId { get; set; } public DateTime OrderDate { get; set; } public int Quantity { get; set; } public int Total { get; set; } public Order(string orderId, DateTime orderDate, int quantity, int total) { OrderId = orderId; OrderDate = orderDate; Quantity = quantity; Total = total; } } public void SampleDataAndTest() { List<Order> objListOrder = new List<Order>(); objListOrder.Add(new Order("tu me paulo ", Convert.ToDateTime("01/06/2016"), 1, 44)); objListOrder.Add(new Order("ante laudabas", Convert.ToDateTime("02/05/2016"), 2, 55)); objListOrder.Add(new Order("ad ordinem ", Convert.ToDateTime("03/04/2016"), 5, 66)); objListOrder.Add(new Order("collocationem ", Convert.ToDateTime("04/03/2016"), 9, 77)); objListOrder.Add(new Order("que rerum ac ", Convert.ToDateTime("05/02/2016"), 10, 65)); objListOrder.Add(new Order("locorum ; cuius", Convert.ToDateTime("06/01/2016"), 1, 343)); Console.WriteLine("Sort the list by date ascending:"); objListOrder.Sort((x, y) => x.OrderDate.CompareTo(y.OrderDate)); foreach (Order o in objListOrder) Console.WriteLine("OrderId = " + o.OrderId + " OrderDate = " + o.OrderDate.ToString() + " Quantity = " + o.Quantity + " Total = " + o.Total); Console.WriteLine("Sort the list by date descending:"); objListOrder.Sort((x, y) => y.OrderDate.CompareTo(x.OrderDate)); foreach (Order o in objListOrder) Console.WriteLine("OrderId = " + o.OrderId + " OrderDate = " + o.OrderDate.ToString() + " Quantity = " + o.Quantity + " Total = " + o.Total); Console.WriteLine("Sort the list by OrderId ascending:"); objListOrder.Sort((x, y) => x.OrderId.CompareTo(y.OrderId)); foreach (Order o in objListOrder) Console.WriteLine("OrderId = " + o.OrderId + " OrderDate = " + o.OrderDate.ToString() + " Quantity = " + o.Quantity + " Total = " + o.Total); }
__lb__lang-cs var proc1 = new ProcessStartInfo(); string anyCommand; proc1.UseShellExecute = true; proc1.WorkingDirectory = @"C:\Windows\System32"; proc1.FileName = @"C:\Windows\System32\cmd.exe"; proc1.Verb = "runas"; proc1.Arguments = "/c "+anyCommand; proc1.WindowStyle = ProcessWindowStyle.Hidden; Process.Start(proc1);
__lb__lang-html <header>HEADER</header> <main>MAIN</main> <footer>FOOTER</footer>
__lb__lang-java try { PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("myfile.txt", true))); out.println("the text"); out.close(); } catch (IOException e) { }
__lb__lang-hs import Control.Applicative instance Applicative Foo where pure x = Foo $ ... -- Wrap (<*>) = liftFoo2 ($)
__lb__lang-cpp class File { private: FileImpl * fd; public: File(String fn){ fd = new FileImpl(fn);}
__lb__lang-sh vari= n=$(expr 10 - length $vari) echo echo echo $vari$(perl -E
__lb__lang-cs decimal myDec; var Result = decimal.TryParse("abc", out myDec);
__lb__lang-cpp std::unique_ptr<T> p = std::unique_ptr<T>(new T());
__lb__lang-php $base_dir = __DIR__; $doc_root = preg_replace("!{$_SERVER[ $base_url = preg_replace("!^{$doc_root}!", $base_url = str_replace( $base_url = str_replace($doc_root, $protocol = empty($_SERVER[ $port = $_SERVER[ $disp_port = ($protocol == $domain = $_SERVER[ $full_url = "$protocol:
__lb__lang-cs Logger = new LoggerConfiguration() .MinimumLevel.Verbose() .WriteTo.Trace() .WriteTo.Console(standardErrorFromLevel: LogEventLevel.Error) .CreateLogger();
__lb__lang-golang DOWNLOAD_DIR=${HOME}/Downloads/GoLang INSTALL_DIR=${HOME}/App function install { mkdir -p ${DOWNLOAD_DIR} cd ${DOWNLOAD_DIR} echo "Fetching latest Go version..." typeset VER=`curl -s https: if uname -m | grep 64 > /dev/null; then typeset ARCH=amd64 else typeset ARCH=386 fi typeset FILE=$VER.linux-$ARCH if [[ ! -e ${FILE}.tar.gz ]]; then echo "Downloading wget https: fi echo "Installing ${FILE} ..." tar zxfC ${FILE}.tar.gz ${INSTALL_DIR} echo "Go is installed" } install
__lb__lang-java map.entrySet().forEach(entry -> System.out.println(entry.getValue()));
__lb__lang-cs var result=result.GetAwaiter().GetResult().AccessToken
__lb__lang-golang var i int var U, V, W float64 var k = 0 var x, y float32 = -1, -2 i, j := 0, 10 f := func() int { return 7 } ch := make(chan int)
__lb__lang-golang func NewThing(someParameter string) *Thing { return &Thing{someParameter, 33} }
__lb__lang-sh $ unset x; ( x=hi :; echo "$x" ) hi $ ( x=hi true; echo "$x" ) $
__lb__lang-cs using CLRConsole = System.Console; namespace ExtensionMethodsDemo { public static class Console { public static void WriteLine(string value) { CLRConsole.WriteLine(value); } public static void WriteBlueLine(string value) { System.ConsoleColor currentColor = CLRConsole.ForegroundColor; CLRConsole.ForegroundColor = System.ConsoleColor.Blue; CLRConsole.WriteLine(value); CLRConsole.ForegroundColor = currentColor; } public static System.ConsoleKeyInfo ReadKey(bool intercept) { return CLRConsole.ReadKey(intercept); } } class Program { static void Main(string[] args) { try { Console.WriteBlueLine("This text is blue"); } catch (System.Exception ex) { Console.WriteLine(ex.Message); Console.WriteLine(ex.StackTrace); } Console.WriteLine("Press any key to continue..."); Console.ReadKey(true); } } }
__lb__lang-sh if [ "$(id -u)" != "0" ]; then echo "Sorry, you are not root." exit 1 fi
__lb__lang-hs def fix[A](f: (=>A) => A): A = f(fix(f)) def fact1(f: =>Int=>Int) = (n: Int) => if (n == 0) 1 else n*f(n-1) val fact = fix(fact1)
__lb__lang-cpp while( !(in>>std::ws).eof() ) { int data; in >> data; if ( in.fail() ) ; }
__lb__lang-cs public static void CopyStream(Stream input, Stream output) { byte[] buffer = new byte[32768]; int read; while ((read = input.Read(buffer, 0, buffer.Length)) > 0) { output.Write (buffer, 0, read); } }
__lb__lang-sh FILE=myfile grep `tr -c "\n" "." < $FILE | sort | tail -1` $FILE
__lb__lang-golang go test -v === RUN TestPrintSomething Say hi --- PASS: TestPrintSomething (0.00 seconds) v_test.go:10: Say bye PASS ok so/v 0.002s
__lb__lang-cpp class CIniWrapper { public: CIniWrapper(LPCTSTR szIniFile); void SetValue(LPCTSTR szName, LPCTSTR szValue); LPCTSTR GetValue(LPCTSTR szName, LPCTSTR szDefaultValue) const; private: mutable std::map<string, string> m_mapNameToValue; };
__lb__lang-golang import "fmt" func main(){ fmt.Println("Hello world!") }
__lb__lang-golang goinstall: os: go/build: package could not be found locally goinstall: fmt: go/build: package could not be found locally goinstall: io: go/build: package could not be found locally goinstall: reflect: go/build: package could not be found locally goinstall: math: go/build: package could not be found locally goinstall: rand: go/build: package could not be found locally goinstall: url: go/build: package could not be found locally goinstall: net: go/build: package could not be found locally goinstall: sync: go/build: package could not be found locally goinstall: runtime: go/build: package could not be found locally goinstall: strings: go/build: package could not be found locally goinstall: sort: go/build: package could not be found locally goinstall: strconv: go/build: package could not be found locally goinstall: bytes: go/build: package could not be found locally goinstall: log: go/build: package could not be found locally goinstall: encoding/binary: go/build: package could not be found locally
__lb__lang-java java.util.Date date = Date.from( Instant.parse( "2014-12-12T10:39:40Z" ));
__lb__lang-hs 5 { iterations: 10351327, applications: 5175644, used_memory: 23754870 } real 0m4.025s user 0m3.686s sys 0m0.341s
__lb__lang-php <meta http-equiv="Refresh" content="2; url=../target.html">
__lb__lang-sh exec 6<>/dev/tcp/127.0.0.1/445 || echo "No one is listening!" exec 6>&- exec 6<&-
__lb__lang-java public class Pair< F extends Comparable<? super F>, S extends Comparable<? super S> > implements Comparable<Pair<? extends F, ? extends S>> { public final F first; public final S second; public int compareTo(Pair<? extends F, ? extends S> that) { int cf = compare(first, that.first); return cf == 0 ? compare(second, that.second) : cf; } private static < T extends Comparable<? super T> > int compare(T l, T r) { if (l == null) { return r == null ? 0 : -1; } else { return r == null ? 1 : l.compareTo(r); } } } Pair<Thread, HashMap<String, Integer>> a = ; Pair<Thread, HashMap<String, Integer>> b = ; System.out.println(a.compareTo(b));
__lb__lang-java public class Hash { /** * * @param txt, text in plain format * @param hashType MD5 OR SHA1 * @return hash in hashType */ public static String getHash(String txt, String hashType) { try { java.security.MessageDigest md = java.security.MessageDigest.getInstance(hashType); byte[] array = md.digest(txt.getBytes()); StringBuffer sb = new StringBuffer(); for (int i = 0; i < array.length; ++i) { sb.append(Integer.toHexString((array[i] & 0xFF) | 0x100).substring(1,3)); } return sb.toString(); } catch (java.security.NoSuchAlgorithmException e) { } return null; } public static String md5(String txt) { return Hash.getHash(txt, "MD5"); } public static String sha1(String txt) { return Hash.getHash(txt, "SHA1"); } }
__lb__lang-php function get_video_thumbnail( $src ) { $url_pieces = explode( if( $url_pieces[2] == $id = $url_pieces[3]; $hash = json_decode(file_get_contents( $thumbnail = $hash[ }else if($url_pieces[2] == $id = $url_pieces[4]; $hash = json_decode(file_get_contents( $thumbnail = $hash[ }else if ( $url_pieces[2] == $id = $url_pieces[3]; $hash = unserialize(file_get_contents( $thumbnail = $hash[0][ } elseif ( $url_pieces[2] == $extract_id = explode( $id = $extract_id[0]; $thumbnail = }else if ( $url_pieces[2] == $id = $url_pieces[4]; $hash = unserialize(file_get_contents( $thumbnail = $hash[0][ } elseif ( $url_pieces[2] == $extract_id = explode( $id = $extract_id[1]; $thumbnail = } else{ $thumbnail = tim_thumb_default_image( } return $thumbnail; } get_video_thumbnail( get_video_thumbnail( get_video_thumbnail( get_video_thumbnail(
__lb__lang-sh if find -maxdepth 0 -name then : the glob matched else : ...not fi
__lb__lang-cs public static class UploadHelper { public static MvcHtmlString UploadFile(this HtmlHelper helper, string name, object htmlAttributes = null) { TagBuilder input = new TagBuilder("input"); input.Attributes.Add("type", "file"); input.Attributes.Add("id", helper.ViewData.TemplateInfo.GetFullHtmlFieldId(name)); input.Attributes.Add("name", helper.ViewData.TemplateInfo.GetFullHtmlFieldName(name)); if (htmlAttributes != null) { var attributes = HtmlHelper.AnonymousObjectToHtmlAttributes(htmlAttributes); input.MergeAttributes(attributes); } return new MvcHtmlString(input.ToString()); } }
__lb__lang-sh Host test User testuser HostName test-site.com Port 22022 Host prod User produser HostName production-site.com Port 22022
__lb__lang-cs <add name="SCMSEntities" connectionString="metadata=res:
__lb__lang-cs class ViewModelBase : INotifyPropertyChanged { public event PropertyChangedEventHandler PropertyChanged; bool Notify<T>(MethodBase mb, ref T oldValue, T newValue) { string name = mb.Name.Substring(4); bool changed = EqualityComparer<T>.Default.Equals(oldValue, newValue); if (!changed) return false; oldValue = newValue; if (PropertyChanged != null) { PropertyChanged(this, new PropertyChangedEventArgs(name)); } return true; } string name; public string Name { get { return name; } set { Notify(MethodInfo.GetCurrentMethod(), ref this.name, value); } } }
__lb__lang-cs public static string GetApplicationRoot() { var exePath = new Uri(System.Reflection. Assembly.GetExecutingAssembly().CodeBase).LocalPath; return new FileInfo(exePath).DirectoryName; }
__lb__lang-cs Point a = new Point(10, 10); Point b = a; a.x = 20; Console.WriteLine(b.x);
__lb__lang-perl --- 2917: id: 2917 name: Semanário primary_uri: 2917.xml
__lb__lang-sh myreadlink() { [ ! -h "$1" ] && echo "$1" || (local link="$(expr "$(command ls -ld -- "$1")" : whereis() { echo $1 | sed "s|^\([^/].*/.*\)|$(pwd)/\1|;s|^\([^/]*\)$|$(which -- $1)|;s|^$|$1|"; } whereis_realpath() { local SCRIPT_PATH=$(whereis $1); myreadlink ${SCRIPT_PATH} | sed "s|^\([^/].*\)\$|$(dirname ${SCRIPT_PATH})/\1|"; }
__lb__lang-cpp using namespace std; int main () { char ch= double val = nan(&ch); if(isnan(val)) cout << "isnan" << endl; return 0; }
__lb__lang-golang package main import ( "io" "os" ) func main() { fi, err := os.Open("input.txt") if err != nil { panic(err) } defer func() { if err := fi.Close(); err != nil { panic(err) } }() fo, err := os.Create("output.txt") if err != nil { panic(err) } defer func() { if err := fo.Close(); err != nil { panic(err) } }() buf := make([]byte, 1024) for { n, err := fi.Read(buf) if err != nil && err != io.EOF { panic(err) } if n == 0 { break } if _, err := fo.Write(buf[:n]); err != nil { panic(err) } } }
__lb__lang-c Kaizen ~/so_test $ cat -e -t -v mk.t all:ll$ $ ll:ll.c $ ^Igcc -c -Wall -Werror -02 c.c ll.c -o ll $@ $<$ $ clean :$ \rm -fr ll$
__lb__lang-cs public BaseClassAbstract() { this.PropertyName = "Default Name"; }
__lb__lang-html <html> <head> </head> <body> <div class="center-screen"> I </div> </body> </html>
__lb__lang-java Set<String> set = Stream.of("a", "b").collect(Collectors.toSet());
__lb__lang-cpp Comparison Subtraction ---------- ----------- A < B --> A - B < 0 A = B --> A - B = 0 A > B --> A - B > 0
__lb__lang-cs var url = Url.Combine( "http: "/too/", "/many/", "/slashes/", "too", "few?", "x=1", "y=2"
__lb__lang-cs <?xml version="1.0" encoding="utf-8" ?> <CodeSnippets xmlns="http: <CodeSnippet Format="1.0.0"> <Header> <Title>inotifypropfull</Title> <Shortcut>inotifypropfull</Shortcut> <HelpUrl>http: <Description>Code snippet for property and backing field with notification</Description> <Author>Ofir Zeitoun</Author> <SnippetTypes> <SnippetType>Expansion</SnippetType> </SnippetTypes> </Header> <Snippet> <Declarations> <Literal> <ID>type</ID> <ToolTip>Property type</ToolTip> <Default>int</Default> </Literal> <Literal> <ID>property</ID> <ToolTip>Property name</ToolTip> <Default>MyProperty</Default> </Literal> <Literal> <ID>field</ID> <ToolTip>The variable backing this property</ToolTip> <Default>myVar</Default> </Literal> </Declarations> <Code Language="csharp"> <![CDATA[private $type$ $field$; public $type$ $property$ { get { return $field$;} set { $field$ = value; var temp = PropertyChanged; if (temp != null) { temp(this, new PropertyChangedEventArgs("$property$")); } } } $end$]]> </Code> </Snippet> </CodeSnippet> </CodeSnippets>
__lb__lang-php if (isSet($_SESSION[ if((mktime() - $_SESSION[ } } else { $_SESSION[ }
__lb__lang-hs import Control.Monad.Reader data GameState = NotOver | FirstPlayerWin | SecondPlayerWin | Tie data Game position = Game { getNext :: position -> [position], getState :: position -> GameState } getNext getNext = do game <- ask return $ getNext game position getState getState = do game <- ask return $ getState game position negamax :: Double -> position -> Reader (Game position) Double negamax color position = do state <- getState case state of FirstPlayerWin -> return color SecondPlayerWin -> return $ negate color Tie -> return 0 NotOver -> do possible <- getNext values <- mapM ((liftM negate) . negamax (negate color)) possible return $ maximum values
__lb__lang-php fields: abc: type: formfield something: - a - b - c - d: foo: bar
__lb__lang-html <script src="https: <p>Single Characters:</p> <span class="halfStyle" data-content="X">X</span> <span class="halfStyle" data-content="Y">Y</span> <span class="halfStyle" data-content="Z">Z</span> <span class="halfStyle" data-content="A">A</span> <hr/> <p>Automated:</p> <span class="textToHalfStyle">Half-style, please.</span>
__lb__lang-java import java.util.HashMap; public abstract class MapUtils { private MapUtils() { } public static <K, V> HashMap<K, V> unmodifiableMap( Class<? extends K> keyClazz, Class<? extends V> valClazz, Object...keyValues) { return Collections.<K, V>unmodifiableMap(makeMap( keyClazz, valClazz, keyValues)); } public static <K, V> HashMap<K, V> makeMap( Class<? extends K> keyClazz, Class<? extends V> valClazz, Object...keyValues) { if (keyValues.length % 2 != 0) { throw new IllegalArgumentException( " + "(Expected an even length, but found } HashMap<K, V> result = new HashMap<K, V>(keyValues.length / 2); for (int i = 0; i < keyValues.length;) { K key = cast(keyClazz, keyValues[i], i); ++i; V val = cast(valClazz, keyValues[i], i); ++i; result.put(key, val); } return result; } private static <T> T cast(Class<? extends T> clazz, Object object, int i) { try { return clazz.cast(object); } catch (ClassCastException e) { String objectName = (i % 2 == 0) ? "Key" : "Value"; String format = "%s at index %d ( throw new IllegalArgumentException(String.format(format, objectName, i, object.toString(), clazz.getSimpleName()), e); } } }
__lb__lang-hs > data Foo = Foo { a :: Int, b :: Int, c :: String } -- define a Foo > let foo = Foo { a = 1, b = 2, c = "Hello" } -- create a Foo > let updateFoo x = x { c = "Goodbye" } -- function to update Foos > updateFoo foo -- update the Foo Foo {a = 1, b = 2, c = "Goodbye" }
__lb__lang-java List<String> result3 = StringUtils.concatenatedList(list1,list2,list3);
__lb__lang-c char strs[NUMBER_OF_STRINGS][STRING_LENGTH+1]; ... strcpy(strs[0], aString); strcpy(strs[1], "foo");
__lb__lang-c int foo3(int a, int b, int c) { return ...; } int foo2(int a, int b) { return foo3(a, b, 0); } int foo1(int a) { return foo3(a, 1, 0); }
__lb__lang-cs private MyForm _gui; public void StartToDoThings() { _gui = new MyForm(); Thread thread = new Thread(SomeDelegate); thread.Start(); _gui.ShowDialog(); }
__lb__lang-c unit Divide_By_3; interface function div_by_3(n: integer): integer; cdecl; export; implementation function div_by_3(n: integer): integer; cdecl; begin div_by_3 := n div 3; end; end.
__lb__lang-sh case "$OSTYPE" in linux*) echo "Linux / WSL" ;; darwin*) echo "Mac OS" ;; win*) echo "Windows" ;; msys*) echo "MSYS / MinGW / Git Bash" ;; cygwin*) echo "Cygwin" ;; bsd*) echo "BSD" ;; solaris*) echo "Solaris" ;; *) echo "unknown: $OSTYPE" ;; esac
__lb__lang-c switch (expr) { int i = 4; f(i); case 0: i = 17; default: printf("%d\n", i); }
__lb__lang-sh $ ls -ld foo bar drwxr-xr-x 2 greg greg 68 Aug 11 22:36 bar lrwxr-xr-x 1 greg greg 3 Aug 11 22:36 foo -> bar $ cd foo $ pwd /Users/greg/tmp/foo $
__lb__lang-cs def timesten 10.times{ |t| puts yield t } end timesten do |x| x * 2 end 2 4 6 8 ... and so on timesten do |x| break x * 2 end timesten do |x| break 5 x * 2 end timesten do |x| next 5 x * 2 end 5 5 5 ... and so on, because
__lb__lang-php usort($array,function($first,$second){ return strtolower($first->text) < strtolower($second->text); }); usort($array,function($first,$second){ return strtolower($first->text) > strtolower($second->text); });
__lb__lang-css @mixin newclearfix { &:after { content:""; display:table; clear:both; } }
__lb__lang-java package com.xxx; public class B { public B() { System.out.println("creating bean B: " + this); } } package com.xxx; public class C { public C() { System.out.println("creating bean C: " + this); } } package com.yyy; import com.xxx.B; import com.xxx.C; public class A { private B bbb; private C ccc; public A() { System.out.println("creating bean A: " + this); } public void setBbb(B bbb) { System.out.println("setting A.bbb with " + bbb); this.bbb = bbb; } public void setCcc(C ccc) { System.out.println("setting A.ccc with " + ccc); this.ccc = ccc; } }
__lb__lang-cs var duplicateOrder = myModel.orders.First(x => x.order_date == DateTime.Today); myModel.orders.Remove(duplicateOrder);
__lb__lang-cpp namespace std { template<typename T, typename TTraits, typename TAllocator> class set; } namespace pretty_print { template<typename T> struct is_container_helper { private: template<typename C> static char test(typename C::const_iterator*); template<typename C> static int test(...); public: static const bool value = sizeof(test<T>(0)) == sizeof(char); }; template<typename T> struct is_container : public ::std::integral_constant<bool, is_container_helper<T>::value> { }; template<typename TChar> struct delimiters_values { typedef TChar char_type; const TChar * prefix; const TChar * delimiter; const TChar * postfix; }; template<typename T, typename TChar> struct delimiters { typedef delimiters_values<TChar> type; static const type values; }; template<typename T> struct delimiters<T, char> { static const delimiters_values<char> values; }; template<typename T> const delimiters_values<char> delimiters<T, char>::values = { "[", ", ", "]" }; template<typename T> struct delimiters<T, wchar_t> { static const delimiters_values<wchar_t> values; }; template<typename T> const delimiters_values<wchar_t> delimiters<T, wchar_t>::values = { L"[", L", ", L"]" }; template<typename T, typename TTraits, typename TAllocator> struct delimiters< ::std::set<T, TTraits, TAllocator>, char> { static const delimiters_values<char> values; }; template<typename T, typename TTraits, typename TAllocator> const delimiters_values<char> delimiters< ::std::set<T, TTraits, TAllocator>, char>::values = { "{", ", ", "}" }; template<typename T, typename TTraits, typename TAllocator> struct delimiters< ::std::set<T, TTraits, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; }; template<typename T, typename TTraits, typename TAllocator> const delimiters_values<wchar_t> delimiters< ::std::set<T, TTraits, TAllocator>, wchar_t>::values = { L"{", L", ", L"}" }; template<typename T1, typename T2> struct delimiters< ::std::pair<T1, T2>, char> { static const delimiters_values<char> values; }; template<typename T1, typename T2> const delimiters_values<char> delimiters< ::std::pair<T1, T2>, char>::values = { "(", ", ", ")" }; template<typename T1, typename T2> struct delimiters< ::std::pair<T1, T2>, wchar_t> { static const delimiters_values<wchar_t> values; }; template<typename T1, typename T2> const delimiters_values<wchar_t> delimiters< ::std::pair<T1, T2>, wchar_t>::values = { L"(", L", ", L")" }; template<typename T, typename TChar = char, typename TCharTraits = ::std::char_traits<TChar>, typename TDelimiters = delimiters<T, TChar>> struct print_container_helper { typedef TChar char_type; typedef TDelimiters delimiters_type; typedef std::basic_ostream<TChar, TCharTraits> & ostream_type; print_container_helper(const T & container) : _container(container) { } inline void operator()(ostream_type & stream) const { if (delimiters_type::values.prefix != NULL) stream << delimiters_type::values.prefix; for (typename T::const_iterator beg = _container.begin(), end = _container.end(), it = beg; it != end; ++it) { if (it != beg && delimiters_type::values.delimiter != NULL) stream << delimiters_type::values.delimiter; stream << *it; } if (delimiters_type::values.postfix != NULL) stream << delimiters_type::values.postfix; } private: const T & _container; }; struct custom_delims_base { virtual ~custom_delims_base() { } virtual ::std::ostream & stream(::std::ostream &) = 0; virtual ::std::wostream & stream(::std::wostream &) = 0; }; template <typename T, typename Delims> struct custom_delims_wrapper : public custom_delims_base { custom_delims_wrapper(const T & t) : t(t) { } ::std::ostream & stream(::std::ostream & stream) { return stream << ::pretty_print::print_container_helper<T, char, ::std::char_traits<char>, Delims>(t); } ::std::wostream & stream(::std::wostream & stream) { return stream << ::pretty_print::print_container_helper<T, wchar_t, ::std::char_traits<wchar_t>, Delims>(t); } private: const T & t; }; template <typename Delims> struct custom_delims { template <typename Container> custom_delims(const Container & c) : base(new custom_delims_wrapper<Container, Delims>(c)) { } ~custom_delims() { delete base; } custom_delims_base * base; }; } template <typename TChar, typename TCharTraits, typename Delims> inline std::basic_ostream<TChar, TCharTraits> & operator<<(std::basic_ostream<TChar, TCharTraits> & stream, const pretty_print::custom_delims<Delims> & p) { return p.base->stream(stream); } // namespace std { template<typename T, typename TChar, typename TCharTraits, typename TDelimiters> inline basic_ostream<TChar, TCharTraits> & operator<<(basic_ostream<TChar, TCharTraits> & stream, const ::pretty_print::print_container_helper<T, TChar, TCharTraits, TDelimiters> & helper) { helper(stream); return stream; } template<typename T, typename TChar, typename TCharTraits> inline typename enable_if< ::pretty_print::is_container<T>::value, basic_ostream<TChar, TCharTraits>&>::type operator<<(basic_ostream<TChar, TCharTraits> & stream, const T & container) { return stream << ::pretty_print::print_container_helper<T, TChar, TCharTraits>(container); } template<typename T1, typename T2, typename TChar, typename TCharTraits> inline basic_ostream<TChar, TCharTraits> & operator<<(basic_ostream<TChar, TCharTraits> & stream, const pair<T1, T2> & value) { if (::pretty_print::delimiters<pair<T1, T2>, TChar>::values.prefix != NULL) stream << ::pretty_print::delimiters<pair<T1, T2>, TChar>::values.prefix; stream << value.first; if (::pretty_print::delimiters<pair<T1, T2>, TChar>::values.delimiter != NULL) stream << ::pretty_print::delimiters<pair<T1, T2>, TChar>::values.delimiter; stream << value.second; if (::pretty_print::delimiters<pair<T1, T2>, TChar>::values.postfix != NULL) stream << ::pretty_print::delimiters<pair<T1, T2>, TChar>::values.postfix; return stream; } } namespace pretty_print { struct tuple_dummy_t { }; typedef std::pair<tuple_dummy_t, tuple_dummy_t> tuple_dummy_pair; template<typename Tuple, size_t N, typename TChar, typename TCharTraits> struct pretty_tuple_helper { static inline void print(::std::basic_ostream<TChar, TCharTraits> & stream, const Tuple & value) { pretty_tuple_helper<Tuple, N - 1, TChar, TCharTraits>::print(stream, value); if (delimiters<tuple_dummy_pair, TChar>::values.delimiter != NULL) stream << delimiters<tuple_dummy_pair, TChar>::values.delimiter; stream << std::get<N - 1>(value); } }; template<typename Tuple, typename TChar, typename TCharTraits> struct pretty_tuple_helper<Tuple, 1, TChar, TCharTraits> { static inline void print(::std::basic_ostream<TChar, TCharTraits> & stream, const Tuple & value) { stream << ::std::get<0>(value); } }; } namespace std { template<typename TChar, typename TCharTraits, typename ...Args> inline basic_ostream<TChar, TCharTraits> & operator<<(basic_ostream<TChar, TCharTraits> & stream, const tuple<Args...> & value) { if (::pretty_print::delimiters< ::pretty_print::tuple_dummy_pair, TChar>::values.prefix != NULL) stream << ::pretty_print::delimiters< ::pretty_print::tuple_dummy_pair, TChar>::values.prefix; ::pretty_print::pretty_tuple_helper<const tuple<Args...> &, sizeof...(Args), TChar, TCharTraits>::print(stream, value); if (::pretty_print::delimiters< ::pretty_print::tuple_dummy_pair, TChar>::values.postfix != NULL) stream << ::pretty_print::delimiters< ::pretty_print::tuple_dummy_pair, TChar>::values.postfix; return stream; } } namespace pretty_print { template <typename T, size_t N> struct array_wrapper { typedef const T * const_iterator; typedef T value_type; array_wrapper(const T (& a)[N]) : _array(a) { } inline const_iterator begin() const { return _array; } inline const_iterator end() const { return _array + N; } private: const T * const _array; }; } template <typename T, size_t N> inline pretty_print::array_wrapper<T, N> pretty_print_array(const T (& a)[N]) { return pretty_print::array_wrapper<T, N>(a); }
__lb__lang-c unsigned long i = 0; while (1) { if (++i == 1000000000) break; } unsigned long i = 0; while (2) { if (++i == 1000000000) break; }
__lb__lang-php $collection = new UserCollection(); $collection->add(new User(1)); $collection->add(new User(2)); $collection->add(new User(3)); foreach ($collection as $user) { $user->printLogin(); }
__lb__lang-cs public class CustomStringEnumConverter : Newtonsoft.Json.Converters.StringEnumConverter { public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) { Type type = value.GetType() as Type; if (!type.IsEnum) throw new InvalidOperationException("Only type Enum is supported"); foreach (var field in type.GetFields()) { if (field.Name == value.ToString()) { var attribute = Attribute.GetCustomAttribute(field, typeof(DescriptionAttribute)) as DescriptionAttribute; writer.WriteValue(attribute != null ? attribute.Description : field.Name); return; } } throw new ArgumentException("Enum not found"); } }
__lb__lang-cpp class MySingleton { private: MySingleton() {} friend MySingleton& GetMySingleton(); } MySingleton& GetMySingleton(); MySingleton& GetMySingleton() { static MySingleton theInstance; return theInstance; }
__lb__lang-cs var suits = Enum.GetValues(typeof(Suit)).Cast<Suit>();
__lb__lang-cpp using namespace std; int main() { int x = 3, y = 3; int **ptr = new int *[x]; for(int i = 0; i<y; i++) { ptr[i] = new int[y]; } srand(time(0)); for(int j = 0; j<x; j++) { for(int k = 0; k<y; k++) { int a = rand()%10; ptr[j][k] = a; cout<<ptr[j][k]<<" "; } cout<<endl; } }
__lb__lang-cs int i = 0; foreach (var item in Collection) { item.index = i; ++i; }
__lb__lang-hs sugarSym :: (sub :<: AST sup, ApplySym sig fi sup, SyntacticN f fi) => sub sig -> f sugarSym = sugarN . appSym
__lb__lang-php $response = (new FacebookRequest( FacebookSession::newAppSession($this->appId, $this->appSecret), $params ))->execute()->getResponse(true); if (isset($response[ return new FacebookSession($response[ }
__lb__lang-cs bool[][] booleanTable = { new bool[] { true, true, true, false }, new bool[] { false, false, false, true }, new bool[] { true, false, false, true }, new bool[] { true, true, false, false } }; IEnumerable<int> rowCounts = booleanTable .Select(row => row.Select(value => value ? 1 : 0).Sum()); IEnumerable<int> seed = new int[booleanTable.First().Length]; IEnumerable<int> colCounts = booleanTable .Aggregate(seed, (priorSums, currentRow) => priorSums.Select((priorSum, index) => priorSum + (currentRow[index] ? 1 : 0)).ToArray() ); Console.WriteLine("rowCounts: " + string.Join(", ", rowCounts)); Console.WriteLine("colCounts: " + string.Join(", ", colCounts));
__lb__lang-c union foobarbazquux_u { int foo; long bar; double baz; long double quux; }
__lb__lang-golang package main import "fmt" type fn func(int) func myfn1(i int) { fmt.Printf("\ni is %v", i) } func myfn2(i int) { fmt.Printf("\ni is %v", i) } func test(f fn, val int) { f(val) } func main() { test(myfn1, 123) test(myfn2, 321) }
__lb__lang-cpp bool icasecmp(const string& l, const string& r) { return l.size() == r.size() && equal(l.cbegin(), l.cend(), r.cbegin(), [](string::value_type l1, string::value_type r1) { return toupper(l1) == toupper(r1); }); } bool icasecmp(const wstring& l, const wstring& r) { return l.size() == r.size() && equal(l.cbegin(), l.cend(), r.cbegin(), [](wstring::value_type l1, wstring::value_type r1) { return towupper(l1) == towupper(r1); }); }
__lb__lang-java public class World { List<Listener> listeners; void addListener(Listener item) { listeners.add(item); } void doAction(Action goal,Object obj) { setState("i received"); goal.doAction(obj); setState("i finished"); } private string state; } public class WorldTest implements Listener { @Test public void word{ World w= mock(World.class); w.addListener(this); ... ... } } interface Listener { void doAction(); }
__lb__lang-cs public static string ToTitleCase(this string mText) { if (mText == null) return mText; System.Globalization.CultureInfo cultureInfo = System.Threading.Thread.CurrentThread.CurrentCulture; System.Globalization.TextInfo textInfo = cultureInfo.TextInfo; return textInfo.ToTitleCase(mText.ToLower()); }
__lb__lang-sh VARTEST="value of VARTEST" sudo env | grep -i vartest sudo echo ${SUDO_USER} ${SUDO_UID}:${SUDO_GID} "${VARTEST}" sudo bash -c
__lb__lang-java package com.java2s; import java.io.IOException; import javax.servlet.jsp.JspWriter; import javax.servlet.jsp.tagext.BodyContent; import javax.servlet.jsp.tagext.BodyTagSupport; public class BodyContentTag extends BodyTagSupport{ private int iterations, howMany; public void setHowMany(int i){ this.howMany = i; } public void setBodyContent(BodyContent bc){ super.setBodyContent(bc); System.out.println("BodyContent = } public int doAfterBody(){ try{ BodyContent bodyContent = super.getBodyContent(); String bodyString = bodyContent.getString(); JspWriter out = bodyContent.getEnclosingWriter(); if ( iterations % 2 == 0 ) out.print(bodyString.toLowerCase()); else out.print(bodyString.toUpperCase()); iterations++; bodyContent.clear(); } catch (IOException e) { System.out.println("Error in BodyContentTag.doAfterBody()" + e.getMessage()); e.printStackTrace(); } int retValue = SKIP_BODY; if ( iterations < howMany ) retValue = EVAL_BODY_AGAIN; return retValue; } }
__lb__lang-sh while true; do sleep 0.25 && echo -ne "\rActivity: \\" && sleep 0.25 && echo -ne "\rActivity: |" && sleep 0.25 && echo -ne "\rActivity: /" && sleep 0.25 && echo -ne "\rActivity: -"; done;
__lb__lang-php $seconds = 8525; $zero = new DateTime("@0"); $offset = new DateTime("@$seconds"); $diff = $zero->diff($offset); echo sprintf("%02d:%02d:%02d", $diff->days * 24 + $diff->h, $diff->i, $diff->s);
__lb__lang-sh getopt "hv:t::" "-v 123 -t123" getopt "hv:t::" "-v123 -t123" getopt "hv:t::" "-h -v123" getopt "hv:t::" "-v 123 -t 123" getopt "h:v:t::g::" "-h abc -v 123 -t21" getopt "hvt" "-htv" getopt "hvt" "-h -t -v" getopt "hvt" "-tv -h"
__lb__lang-cs public static class StringExtensions { public static string Repeat(this char chatToRepeat, int repeat) { return new string(chatToRepeat,repeat); } public static string Repeat(this string stringToRepeat,int repeat) { var builder = new StringBuilder(repeat*stringToRepeat.Length); for (int i = 0; i < repeat; i++) { builder.Append(stringToRepeat); } return builder.ToString(); } }
__lb__lang-c int days[] = { 5, 1,2,3,4,5 }; int *ptr = days + 1; printf("array length: %u\n", ptr[-1]); return 0;
__lb__lang-cpp /usr/bin/ld: cannot find -lc /usr/bin/ld: cannot find -lltdl /usr/bin/ld: cannot find -lXtst
__lb__lang-java View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_image_and_text, parent, false); v.setOnClickListener(new MyOnClickListener());
__lb__lang-cs <ItemGroup> <ProjectReference Include="..\..\..\MySiteOld\MySite.Entities\MySite.Entities.csproj"> <Project>{5b0a347e-cd9a-4746-a3b6-99d6d010a6c2}</Project> <Name>Beeyp.Entities</Name> </ProjectReference> ...
__lb__lang-cs static void Main(string[] args) { foreach (var trip in CreatePossibleTrips(trips)) { if (IsTripGood(trip)) { } } }
__lb__lang-css .ratio { display: grid; position: relative; } .ratio > * { grid-area: 1/1/1/1; } .ratio > div { height: 100%; overflow-y: auto; position: absolute; border: 1px solid red; padding: 0 1rem; }
__lb__lang-cs class MyClass { public string prop1 { set; get; } public object this[string propertyName] { get { return this.GetType().GetProperty(propertyName).GetValue(this, null); } set { this.GetType().GetProperty(propertyName).SetValue(this, value, null); } } }
__lb__lang-php function isAssoc($array) { return ($array !== array_values($array)); }
__lb__lang-c struct foo *foo; printf("foo->bar = %p", foo->bar);
__lb__lang-cs if ("strcmpstring1".IndexOf(Convert.ToString("strcmpstring2"), StringComparison.CurrentCultureIgnoreCase) >= 0){return true;}else{return false;}
__lb__lang-java int[] spam = new int[] { 1, 2, 3 }; Arrays.stream(spam) .boxed() .collect(Collectors.toList());
__lb__lang-sh `ps aux | grep -ie amarok | awk $(ps aux | grep -ie amarok | awk
__lb__lang-css fieldset { text-align:left; border:none } fieldset ol, fieldset ul { padding:0; list-style:none } fieldset li { padding-bottom:1.5em; float:none; clear:left } label { float:left; width:7em; margin-right:1em } fieldset.checkboxes li { clear:both; padding:.75em } fieldset.checkboxes label { margin:0 0 0 1em; width:20em } fieldset.checkboxes input { float:left }
__lb__lang-c class stack { public: stack(); void push(thing *); thing * pop(); static int this_is_here_as_an_example_only; private: ... };
__lb__lang-php echo "My index value is: " . ($my_array["my_index"] ??
__lb__lang-php ; Maximum amount of memory a script may consume (128MB) ; http: memory_limit = 512M
__lb__lang-cpp print("enum Items {") print(",\n".join(items)) print("}")
__lb__lang-css .tri { width:100px; height:100px; background:linear-gradient(45deg, transparent 50%,red 0); border:1px solid; }
__lb__lang-php <pre> <?php $origarray1 = array(2.4, 2.6, 3.5); $origarray2 = array(2.4, 2.6, 3.5); print_r(array_map( array_walk($origarray2, function (&$v, $k) { $v = floor($v); }); print_r($origarray2); array_walk($origarray1, function ($v, $k) { echo "$k => $v", "\n"; }); print_r( array_map(function ($a, $b) { return $a * $b; }, $origarray1, $origarray2) ); print_r( array_filter($origarray1, function ($a) { return $a > 2.5; }) ); ?> </pre>
__lb__lang-cs string a = "Hello"; string b = "goodbye"; b = a; a = "testing"; Console.WriteLine(b);
__lb__lang-java String pageName = JsonPath.read(yourJsonString, "$.pageInfo.pageName"); String pagePic = JsonPath.read(yourJsonString, "$.pageInfo.pagePic"); String post_id = JsonPath.read(yourJsonString, "$.pagePosts[0].post_id");
__lb__lang-sh sudo bash -c "cat <<EOIPFW >> /etc/ipfw.conf <?xml version=\"1.0\" encoding=\"UTF-8\"?> <plist version=\"1.0\"> <dict> <key>Label</key> <string>com.company.ipfw</string> <key>Program</key> <string>/sbin/ipfw</string> <key>ProgramArguments</key> <array> <string>/sbin/ipfw</string> <string>-q</string> <string>/etc/ipfw.conf</string> </array> <key>RunAtLoad</key> <true></true> </dict> </plist> EOIPFW"
__lb__lang-java DecimalFormat df = new DecimalFormat(" df.format(0.912385);
__lb__lang-cs if (!string.IsNullOrEmpty(stringTest) && stringTest.All(char.IsDigit)){ }
__lb__lang-cs void TextBox_KeyDown(object sender, KeyEventArgs e) { char c = Convert.ToChar(e.PlatformKeyCode); if (!char.IsDigit(c)) { e.Handled = true; } }
__lb__lang-php function exhaustYourBytes() { return exhaustYourBytes(); }
__lb__lang-cs AuthenticationMethod myCurrentSetting = AuthenticationMethod.FORMS; Console.WriteLine(myCurrentSetting); string name = Enum.GetNames(typeof(AuthenticationMethod))[(int)myCurrentSetting-1]; Console.WriteLine(name);
__lb__lang-cpp Base(std::unique_ptr<Base> n) : next(std::move(n)) {}
__lb__lang-hs class (Functor f) => MonoidalFunctor f where mfEmpty :: f ? mfAppend :: f ? -> f ? -> f ?
__lb__lang-java Benchmark (size) Mode Cnt Score Error Units LoopTest.fast 1000000000 avgt 5 694,868 ± 36,470 ms/op LoopTest.slow 1000000000 avgt 5 769,840 ± 135,006 ms/op
__lb__lang-cpp struct Base { virtual void f() = 0; protected: ~Base() = default; }; void CallsF(Base& base); struct Derived : Base { void f() override { ... } }; int main() { Derived derived; CallsF(derived); }
__lb__lang-cpp using namespace std; /** * This function gets the current date time * @param useLocalTime true if want to use local time, default to false (UTC) * @return current datetime in the format of "YYYYMMDD HHMMSS" */ string getCurrentDateTime(bool useLocalTime) { stringstream currentDateTime; time_t ttNow = time(0); tm * ptmNow; if (useLocalTime) ptmNow = localtime(&ttNow); else ptmNow = gmtime(&ttNow); currentDateTime << 1900 + ptmNow->tm_year; if (ptmNow->tm_mon < 9) currentDateTime << "0" << 1 + ptmNow->tm_mon; else currentDateTime << (1 + ptmNow->tm_mon); if (ptmNow->tm_mday < 10) currentDateTime << "0" << ptmNow->tm_mday << " "; else currentDateTime << ptmNow->tm_mday << " "; if (ptmNow->tm_hour < 10) currentDateTime << "0" << ptmNow->tm_hour; else currentDateTime << ptmNow->tm_hour; if (ptmNow->tm_min < 10) currentDateTime << "0" << ptmNow->tm_min; else currentDateTime << ptmNow->tm_min; if (ptmNow->tm_sec < 10) currentDateTime << "0" << ptmNow->tm_sec; else currentDateTime << ptmNow->tm_sec; return currentDateTime.str(); }
__lb__lang-c MY_TYPE a = { .stuff = 0.456, .flag = true, .value = 123 };
__lb__lang-cs bool IsPowerOf(int n,int b) { if (n > 1) { while (n % b == 0) { n /= b; } } return n == 1; }
__lb__lang-php ---------------------------------- 10000000 repetitions... ---------------------------------- substr() took 2.0285921096802seconds array access took 1.7474739551544seconds
__lb__lang-cs ((AssemblyFileVersionAttribute)Attribute.GetCustomAttribute( Assembly.GetExecutingAssembly(), typeof(AssemblyFileVersionAttribute), false) ).Version;
__lb__lang-cs using Contract = System.Diagnostics.Contracts.Contract; using Exprs = System.Linq.Expressions; static string PropertyNameFromMemberExpr(Exprs.MemberExpression expr) { return expr.Member.Name; } static string PropertyNameFromUnaryExpr(Exprs.UnaryExpression expr) { if (expr.NodeType == Exprs.ExpressionType.ArrayLength) return "Length"; var mem_expr = expr.Operand as Exprs.MemberExpression; return PropertyNameFromMemberExpr(mem_expr); } static string PropertyNameFromLambdaExpr(Exprs.LambdaExpression expr) { if (expr.Body is Exprs.MemberExpression) return PropertyNameFromMemberExpr(expr.Body as Exprs.MemberExpression); else if (expr.Body is Exprs.UnaryExpression) return PropertyNameFromUnaryExpr(expr.Body as Exprs.UnaryExpression); throw new NotSupportedException(); } public static string PropertyNameFromExpr<TProp>(Exprs.Expression<Func<TProp>> expr) { Contract.Requires<ArgumentNullException>(expr != null); Contract.Requires<ArgumentException>(expr.Body is Exprs.MemberExpression || expr.Body is Exprs.UnaryExpression); return PropertyNameFromLambdaExpr(expr); } public static string PropertyNameFromExpr<T, TProp>(Exprs.Expression<Func<T, TProp>> expr) { Contract.Requires<ArgumentNullException>(expr != null); Contract.Requires<ArgumentException>(expr.Body is Exprs.MemberExpression || expr.Body is Exprs.UnaryExpression); return PropertyNameFromLambdaExpr(expr); }
__lb__lang-sh # # CODE_SAVE_CURSOR="\033[s" CODE_RESTORE_CURSOR="\033[u" CODE_CURSOR_IN_SCROLL_AREA="\033[1A" COLOR_FG="\e[30m" COLOR_BG="\e[42m" RESTORE_FG="\e[39m" RESTORE_BG="\e[49m" function setup_scroll_area() { lines=$(tput lines) let lines=$lines-1 echo -en "\n" echo -en "$CODE_SAVE_CURSOR" echo -en "\033[0;${lines}r" echo -en "$CODE_RESTORE_CURSOR" echo -en "$CODE_CURSOR_IN_SCROLL_AREA" draw_progress_bar 0 } function destroy_scroll_area() { lines=$(tput lines) echo -en "$CODE_SAVE_CURSOR" echo -en "\033[0;${lines}r" echo -en "$CODE_RESTORE_CURSOR" echo -en "$CODE_CURSOR_IN_SCROLL_AREA" clear_progress_bar echo -en "\n\n" } function draw_progress_bar() { percentage=$1 lines=$(tput lines) let lines=$lines echo -en "$CODE_SAVE_CURSOR" echo -en "\033[${lines};0f" tput el print_bar_text $percentage echo -en "$CODE_RESTORE_CURSOR" } function clear_progress_bar() { lines=$(tput lines) let lines=$lines echo -en "$CODE_SAVE_CURSOR" echo -en "\033[${lines};0f" tput el echo -en "$CODE_RESTORE_CURSOR" } function print_bar_text() { local percentage=$1 let remainder=100-$percentage progress_bar=$(echo -ne "["; echo -en "${COLOR_FG}${COLOR_BG}"; printf_new " if [ $1 -gt 99 ] then echo -ne "${progress_bar}" else echo -ne "${progress_bar}" fi } printf_new() { str=$1 num=$2 v=$(printf "%-${num}s" "$str") echo -ne "${v }
__lb__lang-sh printf "> [%s]\n" "${fields[@]}" > [bla@some.com] > [john@home.com] > [Full Name <fulnam@other.org>]
__lb__lang-cs static class Program { [STAThread] static void Main() { Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); Application.Run(new Form1()); } }
__lb__lang-cs public class ConfigurationSettings:BaseConfiguration { public static string ApplicationName { get { return (string)GetAppSetting(typeof(string), "ApplicationName"); } } public static string MailBccAddress { get { return (string)GetAppSetting(typeof(string), "MailBccAddress"); } } public static string DefaultConnection { get { return (string)GetAppSetting(typeof(string), "DefaultConnection"); } } }
__lb__lang-java 030 B2: 030 addl R11, RBP 033 movl RBP, R13 036 addl RBP, 039 imull RBP, RBP 03c movl R9, R13 03f addl R9, 043 imull R9, R9 047 sall RBP, 049 sall R9, 04c movl R8, R13 04f addl R8, 053 movl R10, R8 056 movdl XMM1, R8 05b imull R10, R8 05f movl R8, R13 062 addl R8, 066 imull R8, R8 06a sall R10, 06d movl [rsp + 072 sall R8, 075 movl RBX, R13 078 addl RBX, 07b imull RBX, RBX 07e movl RCX, R13 081 addl RCX, 084 imull RCX, RCX 087 sall RBX, 089 sall RCX, 08b movl RDX, R13 08e addl RDX, 091 imull RDX, RDX 094 movl RDI, R13 097 addl RDI, 09a imull RDI, RDI 09d sall RDX, 09f sall RDI, 0a1 movl RAX, R13 0a4 addl RAX, 0a7 imull RAX, RAX 0aa movl RSI, R13 0ad addl RSI, 0b0 imull RSI, RSI 0b3 sall RAX, 0b5 sall RSI, 0b7 movl R10, R13 0ba addl R10, 0be imull R10, R10 0c2 movl R14, R13 0c5 incl R14 0c8 imull R14, R14 0cc sall R10, 0cf sall R14, 0d2 addl R14, R11 0d5 addl R14, R10 0d8 movl R10, R13 0db addl R10, 0df imull R10, R10 0e3 movl R11, R13 0e6 addl R11, 0ea imull R11, R11 0ee sall R10, 0f1 addl R10, R14 0f4 addl R10, RSI 0f7 sall R11, 0fa addl R11, R10 0fd addl R11, RAX 100 addl R11, RDI 103 addl R11, RDX 106 movl R10, R13 109 addl R10, 10d imull R10, R10 111 sall R10, 114 addl R10, R11 117 addl R10, RCX 11a addl R10, RBX 11d addl R10, R8 120 addl R9, R10 123 addl RBP, R9 126 addl RBP, [RSP + 12a addl R13, 12e movl R11, R13 131 imull R11, R13 135 sall R11, 138 cmpl R13, 13f jl B2
__lb__lang-c uint32_t arc4random(void) void arc4random_buf(void *buf, size_t bytes) uint32_t arc4random_uniform(uint32_t limit) void arc4random_stir(void) void arc4random_addrandom(unsigned char *dat, int datlen)
__lb__lang-php function rndStr($len = 64) { $randomData = file_get_contents( $str = substr(str_replace(array( return $str; }
__lb__lang-hs *Main> let xs = map (sum . map fst . mgsort . g) [20, 40, 80, 160, 320, 640] [138,342,810,1866,4218,9402] *Main> map (logBase 2) $ zipWith (/) (tail xs) xs [1.309328,1.2439256,1.2039552,1.1766101,1.1564085]
__lb__lang-php sudo apt-get install php5-mcrypt sudo php5enmod mcrypt
__lb__lang-cs public enum Gender { [EnumMember(Value = "male")] Male, [EnumMember(Value = "female")] Female } class Person { int Age { get; set; } [JsonConverter(typeof(StringEnumConverter))] Gender Gender { get; set; } }
__lb__lang-cs public static int CountOccurrences(string original, string substring) { if (string.IsNullOrEmpty(substring)) return 0; if (substring.Length == 1) return CountOccurrences(original, substring[0]); if (string.IsNullOrEmpty(original) || substring.Length > original.Length) return 0; int substringCount = 0; for (int charIndex = 0; charIndex < original.Length; charIndex++) { for (int subCharIndex = 0, secondaryCharIndex = charIndex; subCharIndex < substring.Length && secondaryCharIndex < original.Length; subCharIndex++, secondaryCharIndex++) { if (substring[subCharIndex] != original[secondaryCharIndex]) goto continueOuter; } if (charIndex + substring.Length > original.Length) break; charIndex += substring.Length - 1; substringCount++; continueOuter: ; } return substringCount; } public static int CountOccurrences(string original, char @char) { if (string.IsNullOrEmpty(original)) return 0; int substringCount = 0; for (int charIndex = 0; charIndex < original.Length; charIndex++) if (@char == original[charIndex]) substringCount++; return substringCount; }
__lb__lang-golang export PATH=$PATH:/usr/local/opt/go/libexec/bin export GOPATH=/usr/local/opt/go/bin
__lb__lang-golang b = make([]interface{}, len(a), len(a)) for i := range a { b[i] = a[i] }
__lb__lang-java SimpleDateFormat ISO8601DATEFORMAT = new SimpleDateFormat("yyyy-MM-dd String date = "2010-01-01T12:00:00+01:00".replaceAll("\\+0([0-9]){1}\\:00", "+0$100"); System.out.println(ISO8601DATEFORMAT.parse(date));
__lb__lang-sh list=(1 2 3 4 5) string= for elm in "${list[@]}"; do string="${string} ${elm}" done echo ${string}
__lb__lang-cs persons[0] = new Person { PersonID = 1, car = "Ferrari" }; persons[1] = new Person { PersonID = 1, car = "BMW" }; persons[2] = new Person { PersonID = 2, car = "Audi" };
__lb__lang-c mrj10@mjlap:~/code$ gcc -fopenmp -std=c99 -o reverse_lookup reverse_lookup.c mrj10@mjlap:~/code$ ./reverse_lookup Time: 1.201127 seconds mrj10@mjlap:~/code$ ./reverse_lookup Time: 1.196129 seconds mrj10@mjlap:~/code$ ./reverse_lookup Time: 1.235972 seconds mrj10@mjlap:~/code$ gcc -fopenmp -std=c99 -O2 -o reverse_lookup reverse_lookup.c mrj10@mjlap:~/code$ ./reverse_lookup Time: 0.633042 seconds mrj10@mjlap:~/code$ ./reverse_lookup Time: 0.655880 seconds mrj10@mjlap:~/code$ ./reverse_lookup Time: 0.633390 seconds mrj10@mjlap:~/code$ gcc -fopenmp -std=c99 -O3 -o reverse_lookup reverse_lookup.c mrj10@mjlap:~/code$ ./reverse_lookup Time: 0.652322 seconds mrj10@mjlap:~/code$ ./reverse_lookup Time: 0.631739 seconds mrj10@mjlap:~/code$ ./reverse_lookup Time: 0.652431 seconds
__lb__lang-java class outerclass A { static class nestedclass B { static int x = 10; } }
__lb__lang-php $url = $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_PROXY, "http: curl_setopt($ch, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5); $output = curl_exec($ch); $curl_error = curl_error($ch); curl_close($ch); print_r($output); print_r($curl_error);
__lb__lang-java StringTokenizer strings = new StringTokenizer("Welcome to EXPLAINJAVA.COM!", "."); while(strings.hasMoreTokens()){ String substring = strings.nextToken(); System.out.println(substring); }
__lb__lang-java set WLS_HOME=%WL_HOME%\server set XMS_SUN_64BIT=**256** set XMS_SUN_32BIT=**256** set XMX_SUN_64BIT=**3072** set XMX_SUN_32BIT=**3072** set XMS_JROCKIT_64BIT=**256** set XMS_JROCKIT_32BIT=**256** set XMX_JROCKIT_64BIT=**1024** set XMX_JROCKIT_32BIT=**1024** if "%JAVA_VENDOR%"=="Sun" ( set WLS_MEM_ARGS_64BIT=**-Xms256m -Xmx512m** set WLS_MEM_ARGS_32BIT=**-Xms256m -Xmx512m** ) else ( set WLS_MEM_ARGS_64BIT=**-Xms512m -Xmx512m** set WLS_MEM_ARGS_32BIT=**-Xms512m -Xmx512m** )
__lb__lang-html <script src="https: <input type="checkbox" name="planned_checked" checked id="planned_checked"> Planned
__lb__lang-php function insertBefore($input, $index, $newKey, $element) { if (!array_key_exists($index, $input)) { throw new Exception("Index not found"); } $tmpArray = array(); foreach ($input as $key => $value) { if ($key === $index) { $tmpArray[$newKey] = $element; } $tmpArray[$key] = $value; } return $input; } function insertAfter($input, $index, $newKey, $element) { if (!array_key_exists($index, $input)) { throw new Exception("Index not found"); } $tmpArray = array(); foreach ($input as $key => $value) { $tmpArray[$key] = $value; if ($key === $index) { $tmpArray[$newKey] = $element; } } return $tmpArray; }
__lb__lang-cpp std::string old_x = x; std::string old_x = x.c_str(); std::vector<char> old_x(x.data(), x.data() + x.size()); std::vector<char> old_x(x.c_str(), x.c_str() + x.size() + 1); char y[N + 1]; strcpy(y, x.c_str()); char y[N + 1]; strncpy(y, x.c_str(), N); y[N] = char* y = alloca(x.size() + 1); strcpy(y, x.c_str()); char y[x.size() + 1]; strcpy(y, x.c_str()); char* y = new char[x.size() + 1]; strcpy(y, x.c_str()); delete[] y; char* y = strdup(x.c_str()); free(y);
__lb__lang-c 17: c7 45 f0 61 62 63 00 movl $0x636261,-0x10(%rbp)
__lb__lang-perl $ for M in `perldoc -t perllocal|grep Module |sed -e Class::Inspector * "VERSION: 1.28" Crypt::CBC * "VERSION: 2.33" Crypt::Rijndael * "VERSION: 1.11" Data::Dump * "VERSION: 1.22" DBD::Oracle * "VERSION: 1.68" DBI * "VERSION: 1.630" Digest::SHA * "VERSION: 5.92" ExtUtils::MakeMaker * "VERSION: 6.84" install * "VERSION: 6.84" IO::SessionData * "VERSION: 1.03" IO::Socket::SSL * "VERSION: 2.016" JSON * "VERSION: 2.90" MIME::Base64 * "VERSION: 3.14" MIME::Base64 * "VERSION: 3.14" Mozilla::CA * "VERSION: 20141217" Net::SSLeay * "VERSION: 1.68" parent * "VERSION: 0.228" REST::Client * "VERSION: 271" SOAP::Lite * "VERSION: 1.08" Task::Weaken * "VERSION: 1.04" Term::ReadKey * "VERSION: 2.31" Test::Manifest * "VERSION: 1.23" Test::Simple * "VERSION: 1.001002" Text::CSV_XS * "VERSION: 1.16" Try::Tiny * "VERSION: 0.22" XML::LibXML * "VERSION: 2.0108" XML::NamespaceSupport * "VERSION: 1.11" XML::SAX::Base * "VERSION: 1.08"
__lb__lang-cpp class test2 { static constexpr int function(int value) { return(value+1); } void f() { int x[function(10)]; } };
__lb__lang-perl 0 dev device number of filesystem 1 ino inode number 2 mode file mode (type and permissions) 3 nlink number of (hard) links to the file 4 uid numeric user ID of file 5 gid numeric group ID of file 6 rdev the device identifier (special files only) 7 size total size of file, in bytes 8 atime last access time since the epoch 9 mtime last modify time since the epoch 10 ctime inode change time (NOT creation time!) since the epoch 11 blksize preferred block size for file system I/O 12 blocks actual number of blocks allocated
__lb__lang-html <div class="center-div"> <h3>This is center div</h3> </div>
__lb__lang-java Iterable<String> result = Splitter.on(",").split("1,2,3,4");
__lb__lang-cs internal class Test { public Test(string input1) { input1.ThrowIfArgumentIsNull("input1"); } }
__lb__lang-java public void toString() { return new ToStringBuilder(this).append("a", a).append("b", b").toString(); }
__lb__lang-java ObjectMapper objectMapper = new ObjectMapper(); ObjectReader objectReader = objectMapper.reader().forType(new TypeReference<List<MyClass>>(){});
__lb__lang-php [root@tamilan src] Configuration File (php.ini) Path: /etc Loaded Configuration File: /etc/php.ini Scan for additional .ini files in: /etc/php.d Additional .ini files parsed: /etc/php.d/apc.ini, /etc/php.d/bcmath.ini, /etc/php.d/curl.ini, /etc/php.d/dba.ini, /etc/php.d/dom.ini, /etc/php.d/fileinfo.ini, /etc/php.d/gd.ini, /etc/php.d/imap.ini, /etc/php.d/json.ini, /etc/php.d/mbstring.ini, /etc/php.d/memcache.ini, /etc/php.d/mysql.ini, /etc/php.d/mysqli.ini, /etc/php.d/pdo.ini, /etc/php.d/pdo_mysql.ini, /etc/php.d/pdo_sqlite.ini, /etc/php.d/phar.ini, /etc/php.d/posix.ini, /etc/php.d/sqlite3.ini, /etc/php.d/ssh2.ini, /etc/php.d/sysvmsg.ini, /etc/php.d/sysvsem.ini, /etc/php.d/sysvshm.ini, /etc/php.d/wddx.ini, /etc/php.d/xmlreader.ini, /etc/php.d/xmlwriter.ini, /etc/php.d/xsl.ini, /etc/php.d/zip.ini
__lb__lang-cs static string ByteArrayToHexStringViaStringJoinArrayConvertAll(byte[] bytes) { return string.Join(string.Empty, Array.ConvertAll(bytes, b => b.ToString("X2"))); } static string ByteArrayToHexStringViaStringConcatArrayConvertAll(byte[] bytes) { return string.Concat(Array.ConvertAll(bytes, b => b.ToString("X2"))); } static string ByteArrayToHexStringViaBitConverter(byte[] bytes) { string hex = BitConverter.ToString(bytes); return hex.Replace("-", ""); } static string ByteArrayToHexStringViaStringBuilderAggregateByteToString(byte[] bytes) { return bytes.Aggregate(new StringBuilder(bytes.Length * 2), (sb, b) => sb.Append(b.ToString("X2"))).ToString(); } static string ByteArrayToHexStringViaStringBuilderForEachByteToString(byte[] bytes) { StringBuilder hex = new StringBuilder(bytes.Length * 2); foreach (byte b in bytes) hex.Append(b.ToString("X2")); return hex.ToString(); } static string ByteArrayToHexStringViaStringBuilderAggregateAppendFormat(byte[] bytes) { return bytes.Aggregate(new StringBuilder(bytes.Length * 2), (sb, b) => sb.AppendFormat("{0:X2}", b)).ToString(); } static string ByteArrayToHexStringViaStringBuilderForEachAppendFormat(byte[] bytes) { StringBuilder hex = new StringBuilder(bytes.Length * 2); foreach (byte b in bytes) hex.AppendFormat("{0:X2}", b); return hex.ToString(); } static string ByteArrayToHexViaByteManipulation(byte[] bytes) { char[] c = new char[bytes.Length * 2]; byte b; for (int i = 0; i < bytes.Length; i++) { b = ((byte)(bytes[i] >> 4)); c[i * 2] = (char)(b > 9 ? b + 0x37 : b + 0x30); b = ((byte)(bytes[i] & 0xF)); c[i * 2 + 1] = (char)(b > 9 ? b + 0x37 : b + 0x30); } return new string(c); } static string ByteArrayToHexViaByteManipulation2(byte[] bytes) { char[] c = new char[bytes.Length * 2]; int b; for (int i = 0; i < bytes.Length; i++) { b = bytes[i] >> 4; c[i * 2] = (char)(55 + b + (((b - 10) >> 31) & -7)); b = bytes[i] & 0xF; c[i * 2 + 1] = (char)(55 + b + (((b - 10) >> 31) & -7)); } return new string(c); } static string ByteArrayToHexViaSoapHexBinary(byte[] bytes) { SoapHexBinary soapHexBinary = new SoapHexBinary(bytes); return soapHexBinary.ToString(); } static string ByteArrayToHexViaLookupAndShift(byte[] bytes) { StringBuilder result = new StringBuilder(bytes.Length * 2); string hexAlphabet = "0123456789ABCDEF"; foreach (byte b in bytes) { result.Append(hexAlphabet[(int)(b >> 4)]); result.Append(hexAlphabet[(int)(b & 0xF)]); } return result.ToString(); } static readonly uint* _lookup32UnsafeP = (uint*)GCHandle.Alloc(_Lookup32, GCHandleType.Pinned).AddrOfPinnedObject(); static string ByteArrayToHexViaLookup32UnsafeDirect(byte[] bytes) { var lookupP = _lookup32UnsafeP; var result = new string((char)0, bytes.Length * 2); fixed (byte* bytesP = bytes) fixed (char* resultP = result) { uint* resultP2 = (uint*)resultP; for (int i = 0; i < bytes.Length; i++) { resultP2[i] = lookupP[bytesP[i]]; } } return result; } static uint[] _Lookup32 = Enumerable.Range(0, 255).Select(i => { string s = i.ToString("X2"); return ((uint)s[0]) + ((uint)s[1] << 16); }).ToArray(); static string ByteArrayToHexViaLookupPerByte(byte[] bytes) { var result = new char[bytes.Length * 2]; for (int i = 0; i < bytes.Length; i++) { var val = _Lookup32[bytes[i]]; result[2*i] = (char)val; result[2*i + 1] = (char) (val >> 16); } return new string(result); } static string ByteArrayToHexViaLookup(byte[] bytes) { string[] hexStringTable = new string[] {}; StringBuilder result = new StringBuilder(bytes.Length * 2); foreach (byte b in bytes) { result.Append(hexStringTable[b]); } return result.ToString(); }
__lb__lang-php $client = new GuzzleHttp\Client(); $response = $client->request( [ ] ] ); $headers = $response->getHeaders(); $body = $response->getBody(); var_dump($headers, $body);
__lb__lang-sh declare -p array declare -a array= 4]="Use%" [5]="Mounted" [6]="on" [7]="/dev/dm-0" [8]="999320" [9]="529020" [10]= "401488" [11]="57%" [12]="/")'
__lb__lang-cs public class MyClass { public int ID { get; private set; } public MyClass(int id) { ID = id; } }
__lb__lang-sh -bash-4.1$ head file 1 11 111 -bash-4.1$ grep -v "11" file 1 -bash-4.1$ grep -w -v "11" file 1 111
__lb__lang-cs <add name="RecipeManagerEntities" connectionString="metadata=res:
__lb__lang-css .sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); border: 0; }
__lb__lang-cs public static byte[] HexToBytes(this string hexString) { byte[] b = new byte[hexString.Length / 2]; char c; for (int i = 0; i < hexString.Length / 2; i++) { c = hexString[i * 2]; b[i] = (byte)((c < 0x40 ? c - 0x30 : (c < 0x47 ? c - 0x37 : c - 0x57)) << 4); c = hexString[i * 2 + 1]; b[i] += (byte)(c < 0x40 ? c - 0x30 : (c < 0x47 ? c - 0x37 : c - 0x57)); } return b; }
__lb__lang-golang path := GetSomePath(); if stat, err := os.Stat(path); err == nil && stat.IsDir() { }
__lb__lang-java DateFormat df1 = new SimpleDateFormat("yyyy-MM-dd String string1 = "2001-07-04T12:08:56.235-0700"; Date result1 = df1.parse(string1); DateFormat df2 = new SimpleDateFormat("yyyy-MM-dd String string2 = "2001-07-04T12:08:56.235-07:00"; Date result2 = df2.parse(string2);
__lb__lang-cs string title = "STRING"; bool contains = title.IndexOf("string", StringComparison.OrdinalIgnoreCase) >= 0;
__lb__lang-cpp int i; float f; double d; std::string str; try { int i = std::stoi(s); float f = std::stof(s); double d = std::stod(s); } catch (...) { }
__lb__lang-c static int x; int main() { printf("Accessing in same file%d", x): }
__lb__lang-c double f(int, double); double f(int, double); extern double f(int, double); extern double f(int, double);
__lb__lang-java import org.apache.commons.io.FileUtils; public class Program { public static void main(String[] args) throws IOException { File file = new File(args[0]); byte[] data = FileUtils.readFileToByteArray(file); ... } }
__lb__lang-html <a class="disabled" href="javascript:void(0)">LINK</a>
__lb__lang-java (for (i <- 0 until rnd.nextInt(64)) yield { ( }) mkString("")
__lb__lang-java int[] intArray = new int[] {1, 2, 3, 4, 5}; String[] strArray = new String[] {"John", "Mary", "Bob"};
__lb__lang-cpp typedef int Number; void foo(Number); typedef float Number; void foo(Number);
__lb__lang-hs impureUpperCase :: String -> RealWorld -> (String, RealWorld) impureUpperCase str world = (upperCase str, world)
__lb__lang-php /** * Replace the first occurence of given string * * @param string $search a char to search in `$subject` * @param string $replace a char to replace in `$subject` * @param string $subject * @return string * * @throws InvalidArgumentException if `$search` or `$replace` are invalid or if `$subject` is a multibytes string */ function str_replace_first(string $search , string $replace , string $subject) : string { if(strlen($replace) != 1 || strlen($search) != 1) { throw new InvalidArgumentException( }elseif(mb_strlen($subject) != strlen($subject)){ throw new InvalidArgumentException( } $pos = strpos($subject, $search); if($pos === false) { return $subject; } $subject[$replace] = $subject; return $subject; }
__lb__lang-hs (λab.(b(λcd.(c(λe.(d(λfg.(f(efg)))e))))(λc.(c(λde.e)))(λc.(a(b(λdef.(d(λg.(egf))))(λd.d)(λde.(ed)))(b(λde.d)(λd.d)(λd.d))))))
__lb__lang-c int sum (int a, char *b); int (*psplsum) (int a, int b); psplsum = sum; psplsum = (int (*)(int a, int b)) sum; psplsum = (int *(int a, int b)) sum;
__lb__lang-perl use strict; use warnings; BEGIN { push @INC, } use Modules::Rest; gone(@_);
__lb__lang-cs bool IsPowerOfTwo(ulong x) { return (x & (x - 1)) == 0; }
__lb__lang-cs byte[] fileData; var table = (Encoding.Default.GetString( fileData, 0, fileData.Length - 1)).Split(new string[] { "\r\n", "\r", "\n" }, StringSplitOptions.None);
__lb__lang-java public void saveDataInFile(String data) throws IOException { FileOutputStream fos = new FileOutputStream(fileName); DataOutputStream outStream = new DataOutputStream(new BufferedOutputStream(fos)); outStream.writeUTF(data); outStream.close(); }
__lb__lang-cpp static inline bool qFuzzyIsNull(double d) { return qAbs(d) <= 0.000000000001; } static inline bool qFuzzyIsNull(float f) { return qAbs(f) <= 0.00001f; }
__lb__lang-cpp template<class T> void g_tmpl () { SomeTrait<T>::type foo; SomeTrait<T>::NestedTrait<int>::type bar; foo.data<int> (); }
__lb__lang-golang package main import "fmt" func foo(a interface{}) { fmt.Println(a.(int)) } func main() { var a int = 10 foo(a) }
__lb__lang-cs var results= persons.GroupBy(n => new { n.PersonId, n.car}) .Select(g => new { g.Key.PersonId, g.Key.car)}).ToList();
__lb__lang-java class Student{ int rollno; String name; void m1(int x,int y){ System.out.println("add is" +(x+y)); } private void m3(String name){ this.name=name; System.out.println("danger yappa:"+name); } void m4(){ System.out.println("This is m4"); } }
__lb__lang-cpp int main() { int x = 10; while (x-- > 0) printf("%d ",x); return 0; }
__lb__lang-cpp using Size = ptrdiff_t; template< class Type, Size n > constexpr auto n_items( Type (&)[n] ) -> Size { return n; }
__lb__lang-cs public static List<T> GetItemsList<T>(this int enums) where T : struct, IConvertible { if (!typeof (T).IsEnum) { throw new Exception("Type given must be an Enum"); } return (from int item in Enum.GetValues(typeof (T)) where (enums & item) == item select (T) Enum.Parse(typeof (T), item.ToString(new CultureInfo("en")))).ToList(); }
__lb__lang-c struct stat st; stat(filename, &st); size = st.st_size;
__lb__lang-php https: url=www.stackoverflow.com/&key={your_api_key}&screenshot=true
__lb__lang-golang someString := "one two three four " words := strings.Fields(someString) fmt.Println(words, len(words))
__lb__lang-java @SuppressWarnings("unchecked") public static <K, V> HashMap<K, V> toHashMap(Object input, Class<K> key, Class<V> value) { assert input instanceof Map : input; for (Map.Entry<?, ?> e : ((HashMap<?, ?>) input).entrySet()) { assert key.isAssignableFrom(e.getKey().getClass()) : "Map contains invalid keys"; assert value.isAssignableFrom(e.getValue().getClass()) : "Map contains invalid values"; } if (input instanceof HashMap) return (HashMap<K, V>) input; return new HashMap<K, V>((Map<K, V>) input); }
__lb__lang-php <?php use Doctrine\Common\Collections\ArrayCollection; /** @Entity */ class Order { /** @Id @Column(type="integer") @GeneratedValue */ private $id; /** @ManyToOne(targetEntity="Customer") */ private $customer; /** @OneToMany(targetEntity="OrderItem", mappedBy="order") */ private $items; /** @Column(type="boolean") */ private $payed = false; /** @Column(type="boolean") */ private $shipped = false; /** @Column(type="datetime") */ private $created; public function __construct(Customer $customer) { $this->customer = $customer; $this->items = new ArrayCollection(); $this->created = new \DateTime("now"); } } /** @Entity */ class Product { /** @Id @Column(type="integer") @GeneratedValue */ private $id; /** @Column(type="string") */ private $name; /** @Column(type="decimal") */ private $currentPrice; public function getCurrentPrice() { return $this->currentPrice; } } /** @Entity */ class OrderItem { /** @Id @ManyToOne(targetEntity="Order") */ private $order; /** @Id @ManyToOne(targetEntity="Product") */ private $product; /** @Column(type="integer") */ private $amount = 1; /** @Column(type="decimal") */ private $offeredPrice; public function __construct(Order $order, Product $product, $amount = 1) { $this->order = $order; $this->product = $product; $this->offeredPrice = $product->getCurrentPrice(); } }
__lb__lang-java import java.io.IOException; import java.nio.file.Files; import java.nio.file.Paths; public class StringWriteSample { public static void main(String[] args) { String text = "This is text to be saved in file"; try { Files.write(Paths.get("my-file.txt"), text.getBytes()); } catch (IOException e) { e.printStackTrace(); } } }
__lb__lang-php class Your_Class_Name { /** * @see http: * @see http: * @see http: * @see http: * @param string $path */ public function delete($path) { if (is_dir($path)) { array_map(function($value) { $this->delete($value); rmdir($value); },glob($path . array_map( } } }
__lb__lang-cs [TypeConverter(typeof(CustomEnumTypeConverter(typeof(MyEnum))] public enum MyEnum { [Description("A custom description")] ValueWithCustomDescription, Exact }
__lb__lang-php $dateTime = new DateTime( echo $dateTime->format( $date = new DateTime( echo $date->getTimestamp();
__lb__lang-php Array ( [canine] => dog [feline] => cat [porcine] => pig )
__lb__lang-cpp TextLineSplitter::TextLineSplitter( const size_t max_line_len ): mStorageSize ( max_line_len + 1L ) { mBuff = new char [ mStorageSize ]; mTokens = new char* [ mStorageSize ]; ResetContent(); } TextLineSplitter::~TextLineSplitter() { delete [] mBuff; delete [] mTokens; } void TextLineSplitter::SplitLine( const char *line, const char sep_char , ) { assert( sep_char != ResetContent(); strncpy( mBuff, line, mMaxLineLen ); size_t idx = 0L; do { assert( idx < mStorageSize ); const char chr = line[ idx ]; if( mTokens[ mNumTokens ] == NULL ) { mTokens[ mNumTokens ] = &mBuff[ idx ]; } if( chr == sep_char || chr == { mBuff[ idx ] = mNumTokens ++; } } while( line[ idx++ ] ); }
__lb__lang-cs var struct1 = new IntStruct() { Value = 0 }; var struct2 = struct1; var struct3 = struct2; var struct4 = struct3; var struct5 = struct4;
__lb__lang-java private Hashtable<InputObject, OutputObject> table = new Hashtable<InputObject, OutputObject>(); table.put(input1, ouput1); table.put(input2, ouput2); ... when(mockObject.method(any(InputObject.class))).thenAnswer( new Answer<OutputObject>() { @Override public OutputObject answer(final InvocationOnMock invocation) throws Throwable { InputObject input = (InputObject) invocation.getArguments()[0]; if (table.containsKey(input)) { return table.get(input); } else { return null; } } } );
__lb__lang-java try { File file = new File ("c:/new-file.txt"); if(file.createNewFile()) { System.out.println("Successful created!"); } else { System.out.println("Failed to create!"); } } catch (IOException e) { e.printStackTrace(); }
__lb__lang-c 1) NSStringFromCGPoint, 2) NSStringFromCGSize, 3) NSStringFromCGRect, 4) NSStringFromCGAffineTransform, 5) NSStringFromUIEdgeInsets,
__lb__lang-cs int now = int.Parse(DateTime.Now.ToString("yyyyMMdd")); int dob = int.Parse(dateOfBirth.ToString("yyyyMMdd")); int age = (now - dob) / 10000;
__lb__lang-css .triangle { border-bottom:15px solid border-left:10px solid transparent; border-right:10px solid transparent; width:0; height:0; }
__lb__lang-hs getTime :: (UTCTime -> IO₂) -> IO₂ randomRIO :: Random r => (r,r) -> (r -> IO₂) -> IO₂ findFile :: RegEx -> (Maybe FilePath -> IO₂) -> IO₂
__lb__lang-cs public interface IQueueItem { CloudQueueMessage ToMessage(); }
__lb__lang-sh save () { local param for param; do printf %s\\n "$param" \ | sed "s/ done printf %s\\n " " } exiterr () { printf %s\\n "$2" >&2 exit $1 } # # posix_getopt () { local shortopts longopts \ arg argtype getopt nonopt opt optchar optword suffix shortopts="$1" longopts="$2" shift 2 getopt= nonopt= while [ $ opt= arg= argtype= case "$1" in ( -- ) { getopt="${getopt}$(save "$@")" shift $# break };; ( -[!-]* ) { suffix=${1 opt=${1%$suffix} optchar=${opt case "${shortopts}" in ( *${optchar}::* ) { argtype=optional arg="${suffix}" shift };; ( *${optchar}:* ) { argtype=required if [ -n "${suffix}" ]; then arg="${suffix}" shift else case "$2" in ( -* ) exiterr 1 "$1 requires an argument";; ( ?* ) arg="$2"; shift 2;; ( * ) exiterr 1 "$1 requires an argument";; esac fi };; ( *${optchar}* ) { argtype=none arg= shift if [ -n "${suffix}" ]; then eval "set -- $(save "-${suffix}")$(save "$@")" fi };; ( * ) exiterr 1 "Unknown option $1";; esac };; ( --?* ) { suffix=${1 if [ "${suffix}" = "$1" ]; then suffix= fi opt=${1%=$suffix} optword=${opt case ",${longopts}," in ( *,${optword}::,* ) { argtype=optional arg="${suffix}" shift };; ( *,${optword}:,* ) { argtype=required if [ -n "${suffix}" ]; then arg="${suffix}" shift else case "$2" in ( -* ) exiterr 1 \ "--${optword} requires an argument";; ( ?* ) arg="$2"; shift 2;; ( * ) exiterr 1 \ "--${optword} requires an argument";; esac fi };; ( *,${optword},* ) { if [ -n "${suffix}" ]; then exiterr 1 "--${optword} does not take an argument" fi argtype=none arg= shift };; ( * ) exiterr 1 "Unknown option $1";; esac };; ( -* ) exiterr 1 "Unknown option $1";; ( * ) nonopt="${nonopt}$(save "$1")"; shift;; esac if [ -n "${opt}" ]; then getopt="${getopt}$(save "$opt")" case "${argtype}" in ( optional|required ) { getopt="${getopt}$(save "$arg")" };; esac fi done printf %s "${getopt}" if [ -n "${nonopt}" ]; then printf %s "$(save "--")${nonopt}" fi }
__lb__lang-perl content_analyzer content_analyzer2 content_analyzer_items
__lb__lang-php ?list_a=1&list_a=2&list_a=3&list_b[]=1&list_b[]=2&list_b[]=3&list_c=1,2,3
__lb__lang-php $grabzIt->URLToImage("http: $grabzIt->URLToPDF("http: $grabzIt->URLToAnimation("http: $grabzIt->URLToTable("http:
__lb__lang-cpp UCS2String ConvertToUCS2( const UTF8String &str ); UTF8String ConvertToUTF8( const UCS2String &str );
__lb__lang-cs public class FullConditionUITypeEditor : UITypeEditor { [PermissionSetAttribute(SecurityAction.LinkDemand, Name = "FullTrust")] public FullConditionUITypeEditor() { } }
__lb__lang-java char[] passw = request.getPassword().toCharArray() if (comparePasswords(dbPassword, passw) { allowUser = true; cleanPassword(passw); cleanPassword(dbPassword); passw=null; } private static void cleanPassword (char[] pass) { for (char ch: pass) { ch = } }
__lb__lang-php <?php function foo() { unset($GLOBALS[ } $bar = "something"; foo(); ?>
__lb__lang-cpp class Foo { X<int>* m; void method() { m->someMethod(); int i = m->someField; } };
__lb__lang-cs int hWnd = xl.Application.Hwnd; TryKillProcessByMainWindowHwnd(hWnd);
__lb__lang-php function getFunctionTextInASecond(value) { return function () { document.getElementsByName( } } var textToDisplay = prompt( var myFunction = getFunctionTextInASecond(textToDisplay); window.setTimeout(myFunction, 1000);
__lb__lang-php <?php $a = Array ( var_dump($a); $b = (object)$a; var_dump($b); var_dump($b->status);
__lb__lang-cs class Foo{ readonly Animal animal; public Foo(object o){ animal = o as Animal; } public void Interact(){ animal.Speak(); } }
__lb__lang-php class Sample{ var $usingVar; public $usingPublic; function ..... }
__lb__lang-php pathinfo(basename( $_FILES["fileToUpload"]["name"]),PATHINFO_EXTENSION)
__lb__lang-sh if [[ -d "${DIRECTORY}" && ! -L "${DIRECTORY}" ]] ; then echo "It fi
__lb__lang-hs interp --when we have lambda term, we can just return it interp = do env <- ask return $ Lam nv (t, env) --when we run into a value we look it up in the environment interp = do (Env env) <- ask case lookup (show v) env of -- if it is not in the environment we have a problem Nothing -> return . Failure $ "unbound variable: " ++ (show v) -- if it is in the environment, then we should interpret it Just (term, env) -> local (const env) $ interp --the complicated case is an application interp = do v1 <- interp case v1 of Failure s -> return (Failure s) Lam nv clos -> local (\(Env ls) -> Env ((nv,clos):ls)) $ interp --I guess not that complicated!
__lb__lang-php class Constants { private static $array = array( public static function getArray() { return self::$array; } } $constantArray = Constants::getArray();
__lb__lang-java static final Map<Integer, String> MY_MAP = ImmutableMap.<Integer, String>builder() .put(1, "one") .put(2, "two") .put(15, "fifteen") .build();
__lb__lang-php <?php define( E_COMPILE_ERROR | E_RECOVERABLE_ERROR); define( define( define( define( register_shutdown_function( set_error_handler( function shut(){ $error = error_get_last(); if($error && ($error[ handler($error[ } } function handler( $errno, $errstr, $errfile, $errline ) { switch ($errno){ case E_ERROR: $typestr = case E_WARNING: $typestr = case E_PARSE: $typestr = case E_NOTICE: $typestr = case E_CORE_ERROR: $typestr = case E_CORE_WARNING: $typestr = case E_COMPILE_ERROR: $typestr = case E_CORE_WARNING: $typestr = case E_USER_ERROR: $typestr = case E_USER_WARNING: $typestr = case E_USER_NOTICE: $typestr = case E_STRICT: $typestr = case E_RECOVERABLE_ERROR: $typestr = case E_DEPRECATED: $typestr = case E_USER_DEPRECATED: $typestr = } $message = if(($errno & E_FATAL) && ENV === header( header( } if(!($errno & ERROR_REPORTING)) return; if(DISPLAY_ERRORS) printf( if(LOG_ERRORS) error_log(strip_tags($message), 0); } ob_start(); @include ob_end_flush(); ?>
__lb__lang-php Configuration File (php.ini) Path => /etc Loaded Configuration File: (none)
__lb__lang-cpp $ g++ -c src1.cpp -o src1.o $ g++ -c src2.cpp -o src2.o
__lb__lang-java public abstract class Shape { public abstract void draw(Canvas c); } public class Circle extends Shape { private int x, y, radius; public void draw(Canvas c) { ... } } public class Rectangle extends Shape { private int x, y, width, height; public void draw(Canvas c) { ... } }
__lb__lang-java java -cp C:/java/MyClasses C:/java/MyClasses/utilities/myapp/Cool
__lb__lang-css .inverse{ direction: rtl; display: inline-block; } span:hover ~ span{ /* On hover target it background:gold; }
__lb__lang-java int foo() { int ret = 42; System.out.println("done"); return 42; }
__lb__lang-cpp CREATE_MEMBER_CHECKS(x); bool has_any_func_x = has_member_func_x<class_to_check_for_x>::value;
__lb__lang-php $url = $_SERVER[ echo "$url<br />"; $host=$_SERVER[ echo "$host<br />"; $fullurl = "http: echo $fullurl;
__lb__lang-java public class PassByValue { public static void main(String[] args) { Test t = new Test(); t.name = "initialvalue"; new PassByValue().changeRefence(t); System.out.println(t.name); } public void changeRefence(Test f) { f = null; } } class Test { String name; }
__lb__lang-perl (() => { var Animal = function(args) { this.name = args.name; this.sound = args.sound; return this; }; var animal = new Animal({ }); console.log(animal.sound); })();
__lb__lang-golang -v Verbose output: log all tests as they are run. Also print all text from Log and Logf calls even if the test succeeds.
__lb__lang-perl if ( $value + 0 eq $value) { push @args, $value; } else { push @args, " }
__lb__lang-cpp std::stringstream trimmer; trimmer << str; str.clear(); trimmer >> str;
__lb__lang-sh IN="bla@some.com;john@home.com" mails=$(echo $IN | tr ";" "\n") for addr in $mails do echo "> [$addr]" done
__lb__lang-php function filter_array_keys(array $array, $callback) { $matchedKeys = array_filter(array_keys($array), $callback); return array_intersect_key($array, array_flip($matchedKeys)); } $result = filter_array_keys($my_array, function ($k) use ($allowed) { return in_array($k, $allowed); });
__lb__lang-java Set<Integer> set1 = Sets.mutable.of(1, 2, 3, 4, 5); Set<Integer> set2 = Sets.mutable.of(new Integer[]{1, 2, 3, 4, 5}); MutableSet<Integer> mutableSet = Sets.mutable.of(1, 2, 3, 4, 5); ImmutableSet<Integer> immutableSet = Sets.immutable.of(1, 2, 3, 4, 5); Set<Integer> unmodifiableSet = Sets.mutable.of(1, 2, 3, 4, 5).asUnmodifiable(); Set<Integer> synchronizedSet = Sets.mutable.of(1, 2, 3, 4, 5).asSynchronized(); ImmutableSet<Integer> immutableSet = Sets.mutable.of(1, 2, 3, 4, 5).toImmutable();
__lb__lang-java Path currentRelativePath = Paths.get(""); String s = currentRelativePath.toAbsolutePath().toString(); System.out.println("Current relative path is: " + s);
__lb__lang-golang ch := make(chan int, 100) go func(){ for { ch <- do_stuff() } }()
__lb__lang-java Map<String,Thing> map = ...; for (Map.Entry<String,Thing> entry : map.entrySet()) { String key = entry.getKey(); Thing thing = entry.getValue(); ... }
__lb__lang-cs MyClass myClass = new MyClass(); myclass.CopyTo ((IList)myClass).CopyTo
__lb__lang-php $files = new Files(); $results = $files->copyOrMove(
__lb__lang-cs public bool Test() { return RunTheMethod(Method1); }
__lb__lang-php <?php declare(ticks = 1); set_time_limit(1); function foo() { for (;;) {} } class Invoker_TimeoutException extends RuntimeException {} class Invoker { public function invoke($callable, $timeout) { pcntl_signal(SIGALRM, function() { throw new Invoker_TimeoutException; }, TRUE); pcntl_alarm($timeout); call_user_func($callable); } } try { $invoker = new Invoker; $invoker->invoke( } catch (Exception $e) { sleep(10); echo "Still running despite of the timelimit"; }
__lb__lang-java java version "1.8.0_191" Java(TM) 2 Runtime Environment, Standard Edition (IBM build 1.8.0_191-b12 26_Oct_2018_18_45 Mac OS X x64(SR5 FP25)) Java HotSpot(TM) 64-Bit Server VM (build 25.191-b12, mixed mode)
__lb__lang-java BigDecimal bd = new BigDecimal(Double.toString(d)); bd = bd.setScale(decimalPlace, BigDecimal.ROUND_HALF_UP); return bd.doubleValue();
__lb__lang-cs Regex.IsMatch(title, "string", RegexOptions.IgnoreCase);
__lb__lang-hs type f :-> g = forall state. f state -> g state class MonadIx (m :: (state -> *) -> (state -> *)) where returnIx :: x :-> m x flipBindIx :: (a :-> m b) -> (m a :-> m b) -- tidier than bindIx
__lb__lang-cpp class A { public: A(int) {} }; class B { public: B() {} }; int main() { A a1[3] = {A(2), A(1), A(14)}; A a2[3] = {A(2)}; B b1[3] = {B()}; int Array1[1000] = {0}; int Array2[1000] = {1}; bool Array3[1000] = {}; int Array4[1000]; int array[2] = {1, 2, 3, 4}; }
__lb__lang-cpp template<typename T> class unique_ptr { T* ptr; public: T* operator->() const { return ptr; } T& operator*() const { return *ptr; }
__lb__lang-java for (Map.Entry<String, Object> entry : map.entrySet()) { String key = entry.getKey(); Object value = entry.getValue(); }
__lb__lang-java java.io.FileNotFoundException: / (Is a directory) at java.io.FileOutputStream.open0(Native Method) at java.io.FileOutputStream.open(FileOutputStream.java:270) at java.io.FileOutputStream.<init>(FileOutputStream.java:213) at java.io.FileOutputStream.<init>(FileOutputStream.java:101) at Test.main(Test.java:9)
__lb__lang-java /** * Singleton pattern example using Java Enum */ public enum Singleton { INSTANCE; public void execute (String arg) { } }
__lb__lang-hs mapUserIDsToUsernames :: (Num -> IO String) -> [Num] -> IO [String] mapUserIDsToUsernames fn ids = traverse fn ids
__lb__lang-cpp template <typename _Func, typename _P1,typename _arg1,typename _arg2,typename _arg3> binder3<_Func, _P1, _arg1, _arg2, _arg3> bind3(_Func func, _P1 p1,_arg1 i,_arg2 j,_arg3 k) { return binder3<_Func, _P1, _arg1, _arg2, _arg3> (func, p1,i,j,k); }
__lb__lang-css .foo { background-color: white; color: black; } .bar { background-color: inherit; color: inherit; font-weight: normal; }
__lb__lang-golang package main import ( "net/http" "sync" ) func main() { var wg sync.WaitGroup var urls = []string{ "http: "http: "http: } for _, url := range urls { wg.Add(1) go func(url string) { defer wg.Done() http.Get(url) }(url) } wg.Wait() }
__lb__lang-html <form> <div> <label><input type="checkbox" /> Label text</label> </div> </form>
__lb__lang-hs let a @ (b @ (Just c), Just d) = (Just 1, Just 2) in (a, b, c, d)
__lb__lang-perl if ( "4" eq "4.0" ) { print "true"; } else { print "false"; } false if ( "4.0" eq "4.0" ) { print "true"; } else { print "false"; } true
__lb__lang-cs var reader = new JsonReader(); var writer = new JsonWriter(); string input = @"{ ""foo"": true, ""array"": [ 42, false, ""Hello!"", null ] }"; dynamic output = reader.Read(input); Console.WriteLine(output.array[0]); string json = writer.Write(output); Console.WriteLine(json);
__lb__lang-golang $ $ ls -l $GOPATH/bin total 5248 -rwxr-xr-x 1 sammingolelli staff 2686320 Jun 9 12:28 json2csv
__lb__lang-sh cat > /etc/cron.d/<job> << EOF SHELL=/bin/bash PATH=/sbin:/bin:/usr/sbin:/usr/bin MAILTO=root HOME=/ 01 * * * * <user> <command> EOF
__lb__lang-java try { } catch(Exception e) { e.printStackTrace(); }
__lb__lang-java Object[] objectArray = list.toArray(); MyClass[] array = (MyClass[])list.toArray(new MyClass[list.size()]); objectArray = set.toArray(); array = (MyClass[])set.toArray(new MyClass[set.size()]);
__lb__lang-sh exec 3>&1 4>&2 1> >(tee >(logger -i -t trap get_pids_of_ppid() { local ppid="$1" RETVAL= local pids=`ps x -o pid,ppid | awk "\\$2 == \\"$ppid\\" { print \\$1 }"` RETVAL="$pids" } cleanup() { local current_pid element local pids=( "$$" ) running_pids=("${pids[@]}") while :; do current_pid="${running_pids[0]}" [ -z "$current_pid" ] && break running_pids=("${running_pids[@]:1}") get_pids_of_ppid $current_pid local new_pids="$RETVAL" [ -z "$new_pids" ] && continue for element in $new_pids; do running_pids+=("$element") pids=("$element" "${pids[@]}") done done kill ${pids[@]} 2>/dev/null }
__lb__lang-java String fileName="/home/shriram/Desktop/Images/"+"test.txt"; FileWriter fw=new FileWriter(fileName,true); fw.write("here will be you content to insert or append in file"); fw.close(); FileWriter fw1=new FileWriter(fileName,true); fw1.write("another content will be here to be append in the same file"); fw1.close();
__lb__lang-php $parent_category_name = "new clothes & shoes" ; $parent_category = strval($parent_category_name); $parent_category = "
__lb__lang-cs File.Move(@"C:\ScanPDF\Test.pdf", @"C:\BackupPDF\" + string.Format("backup-{0:yyyy-MM-dd_HH:mm:ss}.pdf",DateTime.Now));
__lb__lang-sh if [[ ( $g == 1 && $c == 123 ) || ( $g == 2 && $c == 456 ) ]]
__lb__lang-cs public static byte[] HexadecimalStringToByteArray(string input) { var outputLength = input.Length / 2; var output = new byte[outputLength]; var numeral = new char[2]; for (int i = 0, j = 0; i < outputLength; i++, j += 2) { input.CopyTo(j, numeral, 0, 2); output[i] = Convert.ToByte(new string(numeral), 16); } return output; }
__lb__lang-php /** * Makes a config object from an array, making the first level keys properties a new object. * Property values are converted to camelCase and are not set if one already exists. * @param array $configArray Config array. * @param boolean $strict To return an empty object if $configArray is not an array * @return stdObject The config object */ public function makeConfigFromArray($configArray = [],$strict = true) { $object = new stdClass(); if (!is_array($configArray)) { if(!$strict && !is_null($configArray)) { return $configArray; } return $object; } foreach ($configArray as $name => $value) { $_name = camel_case($name); if(is_array($value)) { $makeobject = true; foreach($value as $key => $val) { if(is_numeric(substr($key,0,1))) { $makeobject = false; } if(is_array($val)) { $value[$key] = $this->makeConfigFromArray($val,false); } } if($makeobject) { $object->{$name} = $object->{$_name} = $this->makeConfigFromArray($value,false); } else { $object->{$name} = $object->{$_name} = $value; } } else { $object->{$name} = $object->{$_name} = $value; } } return $object; }
__lb__lang-cpp template <typename T> bool compareNumber(const T& a, const T& b) { return std::abs(a - b) < std::numeric_limits<T>::epsilon(); }
__lb__lang-cs if (i > 0) { HttpPostedFileBase file = Request.Files["Image"]; if (file != null && file.ContentLength > 0) { if (!string.IsNullOrEmpty(file.FileName)) { string extension = Path.GetExtension(file.FileName); switch ((extension.ToLower())) { case ".doc": break; case ".docx": break; case ".pdf": break; default: ViewBag.result = "Please attach file with extension .doc , .docx , .pdf"; return View(); } if (!Directory.Exists(Server.MapPath("~") + "\\Resume\\")) { System.IO.Directory.CreateDirectory(Server.MapPath("~") + "\\Resume\\"); } string documentpath = Server.MapPath("~") + "\\Resume\\" + i + "_" + file.FileName; file.SaveAs(documentpath); string filename = i + "_" + file.FileName; result = _objbalResume.UpdateResume(filename, i); Attachment at = new Attachment(documentpath); } } else { ... } }
__lb__lang-cpp ifstream ifs ("filename.txt"); string s; getline (ifs, s, (char) ifs.eof());
__lb__lang-php echo $c->RED_LIGHT(); echo $c->YELLOW_LIGHT(); echo $c->GREEN_LIGHT();
__lb__lang-perl use strict; my $path = $0; $path =~ s/\.\ if ($path =~ /\ if ($path =~ /^\ $path =~ /^((\/[^\/]+){1,}\/)[^\/]+$/; $path = $1; } else { $path =~ /^(([^\/]+\/){1,})[^\/]+$/; my $path_b = $1; my $path_a = `pwd`; chop($path_a); $path = $path_a."/".$path_b; } } else{ $path = `pwd`; chop($path); $path.="/"; } $path =~ s/\/\ print "\n$path\n";
__lb__lang-cs public static string GenerateRandomString(int length) { var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"; var result = new StringBuilder(length); for (int i = 0; i < length; ++i) { result.Append(CryptographicBuffer.GenerateRandomNumber() % chars.Length); } return result.ToString(); }
__lb__lang-java Map<String, String> test = ImmutableMap.of("k1", "v1", "k2", "v2");
__lb__lang-sh if (whoami != root) then echo "Please run as root" else (do stuff) fi exit
__lb__lang-sh cp -? file /path/to/copy/file/to/is/very/deep/there
__lb__lang-html <script src="http: <input type="checkbox" id="isAgeSelected"/> <div id="txtAge" style="display:none">Age is something</div>
__lb__lang-cs using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Text; using System.Threading; using System.Threading.Tasks; namespace ConsoleApp2 { public static class AsyncHelper { private static readonly TaskFactory _myTaskFactory = new TaskFactory(CancellationToken.None, TaskCreationOptions.None, TaskContinuationOptions.None, TaskScheduler.Default); public static void RunSync(Func<Task> func) { _myTaskFactory.StartNew(func).Unwrap().GetAwaiter().GetResult(); } public static TResult RunSync<TResult>(Func<Task<TResult>> func) { return _myTaskFactory.StartNew(func).Unwrap().GetAwaiter().GetResult(); } } class SomeClass { public async Task<object> LoginAsync(object loginInfo) { return await Task.FromResult(0); } public object Login(object loginInfo) { return AsyncHelper.RunSync(() => LoginAsync(loginInfo)); } } class Program { static void Main(string[] args) { var someClass = new SomeClass(); Console.WriteLine(someClass.Login(1)); Console.ReadLine(); } } }
__lb__lang-java int[][] array2d = new int[x][y]; int[][] array2d = { {1,2,3 ...}, {4,5,6 ...} ...};
__lb__lang-java boolean hasAccess = false; for (int i = 0; i < x && hasAccess == false; i++){ for (int j = 0; j < y; j++){ if (condition == true){ hasAccess = true; break; } } }
__lb__lang-java void doSomething(Widget widget) { assert widget != null; if (widget != null) { widget.someMethod(); ... } }
__lb__lang-c int main() { struct foo { int x; float y; } var1; struct foo var; struct foo* pvar; pvar = &var1; var.x = 5; (&var)->y = 14.3; printf("%i - %.02f\n", var.x, (&var)->y); pvar->x = 6; pvar->y = 22.4; printf("%i - %.02f\n", pvar->x, pvar->y); return 0; }
__lb__lang-css .triangle { width: 0; height: 0; border-left: 50px solid transparent; border-right: 50px solid transparent; border-bottom: 100px solid red; margin:20px auto; } .triangle-down { border-bottom:none; border-top: 100px solid red; } .triangle-left { border-left:none; border-right: 100px solid red; border-bottom: 50px solid transparent; border-top: 50px solid transparent; } .triangle-right { border-right:none; border-left: 100px solid red; border-bottom: 50px solid transparent; border-top: 50px solid transparent; } .triangle-after:after { width: 0; height: 0; border-left: 5px solid transparent; border-right: 5px solid transparent; border-bottom: 5px solid red; margin:0 5px; content:""; display:inline-block; } .triangle-after-right:after { border-right:none; border-left: 5px solid blue; border-bottom: 5px solid transparent; border-top: 5px solid transparent; } .triangle-before:before { width: 0; height: 0; border-left: 5px solid transparent; border-right: 5px solid transparent; border-bottom: 5px solid blue; margin:0 5px; content:""; display:inline-block; } .triangle-before-left:before { border-left:none; border-right: 5px solid blue; border-bottom: 5px solid transparent; border-top: 5px solid transparent; }
__lb__lang-cs myDictionary.ForEach((x,y) => Console.WriteLine(x + " - " + y));
__lb__lang-golang import ("net/http"; "io"; "os") ... out, err := os.Create("output.txt") defer out.Close() ... resp, err := http.Get("http: defer resp.Body.Close() ... n, err := io.Copy(out, resp.Body)
__lb__lang-java Usage: jstack [-l] <pid> (to connect to running process) jstack -F [-m] [-l] <pid> (to connect to a hung process) jstack [-m] [-l] <executable> <core> (to connect to a core file) jstack [-m] [-l] [server_id@]<remote server IP or hostname> (to connect to a remote debug server) Options: -F to force a thread dump. Use when jstack <pid> does not respond (process is hung) -m to print both java and native frames (mixed mode) -l long listing. Prints additional information about locks -h or -help to print this help message
__lb__lang-sh $ cat order.txt roger shah armin van buuren fpga vhdl arduino c++ java gridgain $ tac order.txt > inverted_file.txt $ cat inverted_file.txt fpga vhdl arduino c++ java gridgain armin van buuren roger shah
__lb__lang-cpp static char UtoL[256]; void InitUtoLMap() { for (int i = 0; i < sizeof(UtoL); i++) { if (isupper(i)) { UtoL[i] = (char)(i + 32); } else { UtoL[i] = i; } } } char *LowerStr(char *szMyStr) { char *p = szMyStr; while (*p) { *p = UtoL[*p]; p++; } return szMyStr; } int main() { time_t start; char *Lowered, Upper[128]; InitUtoLMap(); strcpy(Upper, "Every GOOD boy does FINE!"); Lowered = LowerStr(Upper); return 0; }
__lb__lang-cs long unixTimeStampInSeconds = dateTimeOffset.ToUnixTimeSeconds();
__lb__lang-sh exec 4>&1 exitstatus=`{ { command1; printf $? 1>&3; } | command2 1>&4; } 3>&1`
__lb__lang-hs newtype Env = Env ([(String,Closure)]) type Closure = (Term, Env)
__lb__lang-sh string="-12,345" if [[ "$string" =~ ^-?[0-9]+$ ]] then echo $string is an integer elif [[ "$string" =~ ^-?[0-9]*[.,]?[0-9]*$ ]] then echo $string is a float elif [[ "$string" =~ ^-?[0-9]*[.,]?[0-9]*[eE]-?[0-9]+$ ]] then echo $string is a scientific number else echo $string is not a number fi
__lb__lang-java List<ArrayList<String>> aa = (List<ArrayList<String>>) getIntent() .getSerializableExtra("IntentExamResultDetail");
__lb__lang-cpp using namespace std; void g(const int&) { cout << "const int&\n"; } void g(int&) { cout << "int&\n"; } void g(int&&) { cout << "int&&\n"; } template <typename T> void f(T&& a) { g(static_cast<T&&>(a)); } int main() { cout << "f(1)\n"; f(1); int a = 2; cout << "f(a)\n"; f(a); const int b = 3; cout << "f(const b)\n"; f(b); cout << "f(a * b)\n"; f(a * b); }
__lb__lang-cs using System.Diagnostics; Process cmd = new Process(); cmd.StartInfo.FileName = "cmd.exe"; cmd.StartInfo.RedirectStandardInput = true; cmd.StartInfo.RedirectStandardOutput = true; cmd.StartInfo.CreateNoWindow = true; cmd.StartInfo.UseShellExecute = false; cmd.Start(); cmd.StandardInput.WriteLine("echo Oscar"); cmd.StandardInput.Flush(); cmd.StandardInput.Close(); cmd.WaitForExit(); Console.WriteLine(cmd.StandardOutput.ReadToEnd());
__lb__lang-java public class MyClass { private static final Map<Integer, String> myMap = prepareMap(); private static Map<Integer, String> prepareMap() { Map<Integer, String> hashMap = new HashMap<>(); hashMap.put(1, "one"); hashMap.put(2, "two"); return hashMap; } }
__lb__lang-cs var distincts = customers.ToLookup(c => c.CustomerId).Select(g => g.First());
__lb__lang-cs public class MainViewModel { public virtual string MainTextBox { get; set; } public RelayCommand TestActionCommand { get { return new RelayCommand(TestAction); } } public void TestAction() { Trace.WriteLine(MainTextBox); } }
__lb__lang-html <link href="https: <span class="btn btn-primary btn-file"> Browse...<input type="file"> </span>
__lb__lang-sh if [[ $(grep "SomeString" $File) ]] ; then echo "Found" else echo "Not Found" fi
__lb__lang-java BinaryOperator<TestObject> binary = new BinaryOperator<TestObject>() { @Override public TestObject apply(TestObject t, TestObject u) { return t; } };
__lb__lang-css span { position: relative; color: rgba(50,50,200,0.5); } span:before { content: attr(data-char); position: absolute; width: 50%; overflow: hidden; color: rgb(50,50,200); }
__lb__lang-perl alias modver="perl -e\"eval qq{use \\\$ARGV[0];\\\\\\\$v=\\\\\\\$\\\${ARGV[0]}::VERSION;};\ print\\\$@?qq{No module found\\n}:\\\$v?qq{Version \\\$v\\n}:qq{Found.\\n};\"\$1"
__lb__lang-cpp class Foo { public: Foo(int x) : m_x(x) { } private: int m_x; };
__lb__lang-java public final class Switch<T> { private final HashMap<T, Runnable> cases = new HashMap<T, Runnable>(0); public void addCase(T object, Runnable action) { this.cases.put(object, action); } public void SWITCH(T object) { for (T t : this.cases.keySet()) { if (object.equals(t)) { this.cases.get(t).run(); break; } } } }
__lb__lang-cpp using namespace std; int main() { int count = 0; string holdWord = ""; string holdTemp = ""; string holdLetter = "Big Java 7th Ed,Horstman,978-1118431115,99.85"; for (int j = 0; j < holdLetter.length(); j++) { if (holdLetter[j] == if ( count == 0 ) { holdWord = holdLetter.replace(j, 1, " | "); } else { string holdTemp1 = holdLetter.replace(j, 1, " | "); holdTemp = holdTemp1.replace(0, j-3, holdWord, 0, j-3); holdWord = ""; holdWord = holdTemp; } holdTemp = ""; count++; } } cout << holdWord << endl; return 0; } Big Java 7th Ed | Horstman | 978-1118431115 | 99.85
__lb__lang-html <div style="width:100%;"> <div style="width: 50%; margin: 0px auto;">Text</div> </div>
__lb__lang-php echo for($i = 0; $i < 100000; ++$i) { if($i % 2500 === 0) echo $test_cases[] = [ random_bytes(random_int(1, 7000)), random_bytes(random_int(1, 3000)), ]; } echo "done!\n"; $functions = [ $results = []; foreach($functions as $func) { $start = microtime(true); foreach($test_cases as $tc) { $func(...$tc); } $results[$func] = (microtime(true) - $start) * 1000; } asort($results); foreach($results as $func => $time) { echo "$func: " . number_format($time, 1) . " ms\n"; }
__lb__lang-php $var = 5; echo "I echo "I $items = (string)$var; $items = strval($var);
__lb__lang-java public class GenSet<Item> { private Item[] a; public GenSet(int s) { a = (Item[]) new Object[s]; } }
__lb__lang-java export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home export PATH=$JAVA_HOME/bin:$PATH
__lb__lang-c static char const* g_rgDialog[g_rgDialogRows][g_rgDialogCols] = { { " ", " ", " ", " 494", " 210", " Generic Sample Dialog", " " }, { " 1", " 330", " 174", " 88", " ", " OK", " " }, };
__lb__lang-cs IResolver resolver = new Resolver(); var path = "Property1.Property2"; object result = r.Resolve(o, path);
__lb__lang-cpp struct A { int m; }; struct B { ~B(); int m; }; struct C { C() : m() {}; ~C(); int m; };
__lb__lang-java import static java.util.stream.Collectors.*; Set<String> strSet5 = Stream.of("A", "B", "C", "D").collect(collectingAndThen( toCollection(HashSet::new),Collections::unmodifiableSet));
__lb__lang-cpp string(string&& that) { data = that.data; that.data = nullptr; }
__lb__lang-html <div class="container"> <div class="centered-content"> Center this! </div> </div>
__lb__lang-cpp sstm.str(""); sstm.clear(); sstm << "crap" << "morecrap";
__lb__lang-java public <T> Set<T> GetSetFromArray(T[] array) { return new HashSet<T>(Arrays.asList(array)); }
__lb__lang-cpp class myFunctor { public: /* myFunctor is the constructor. parameterVar is the parameter passed to the constructor. : is the initializer list operator. myObject is the private member object of the myFunctor class. parameterVar is passed to the () operator which takes it and adds it to myObject in the overloaded () operator function. */ myFunctor (int parameterVar) : myObject( parameterVar ) {} /* the "operator" word is a keyword which indicates this function is an overloaded operator function. The () following this just tells the compiler that () is the operator being overloaded. Following that is the parameter for the overloaded operator. This parameter is actually the argument "parameterVar" passed by the constructor we just wrote. The last part of this statement is the overloaded operators body which adds the parameter passed to the member object. */ int operator() (int myArgument) { return myObject + myArgument; } private: int myObject; };
__lb__lang-java public static void printMap(Map mp) { Iterator it = mp.entrySet().iterator(); while (it.hasNext()) { Map.Entry pair = (Map.Entry)it.next(); System.out.println(pair.getKey() + " = " + pair.getValue()); it.remove(); } }
__lb__lang-sh if [[ "$1" == "$2" ]] then echo "." exit fi IFS="/" current=($1) absolute=($2) abssize=${ cursize=${ while [[ ${absolute[level]} == ${current[level]} ]] do (( level++ )) if (( level > abssize || level > cursize )) then break fi done for ((i = level; i < cursize; i++)) do if ((i > level)) then newpath=$newpath"/" fi newpath=$newpath".." done for ((i = level; i < abssize; i++)) do if [[ -n $newpath ]] then newpath=$newpath"/" fi newpath=$newpath${absolute[i]} done echo "$newpath"
__lb__lang-hs foldr step zero (x:xs) = step x (foldr step zero xs) foldr _ zero [] = zero myFold f z xs = foldr step id xs z where step x g a = g (f a x) myFold (+) 0 [1, 2, 3] = foldr step id [1, 2, 3] 0 -- Expanding foldr function step 1 (foldr step id [2, 3]) 0 step 1 (step 2 (foldr step id [3])) 0 step 1 (step 2 (step 3 (foldr step id []))) 0 -- Expanding step function if it is possible step 1 (step 2 (step 3 id)) 0 step 2 (step 3 id) (0 + 1) step 3 id ((0 + 1) + 2) id (((0 + 1) + 2) + 3)
__lb__lang-java Handler().postDelayed({ TODO("Do something") }, 2000)
__lb__lang-java OuterClass outer = new OuterClass(); OuterClass.Inner2 inner = outer.new Inner2();
__lb__lang-c fd = open(pathname, O_CREAT | O_WRONLY | O_EXCL, S_IRUSR | S_IWUSR); if (fd < 0) { if (errno == EEXIST) { ... } } else { }
__lb__lang-php string htmlspecialchars ( string $string [, int $quote_style [, string $charset [, bool $double_encode ]]] )
__lb__lang-cs public int Method1(string) { ... do something return myInt; } public int Method2(string) { ... do something different return myInt; } public bool RunTheMethod([Method Name passed in here] myMethodName) { ... do stuff int i = myMethodName("My String"); ... do more stuff return true; } public bool Test() { return RunTheMethod(Method1); }
__lb__lang-cs [HttpGet] public ActionResult GetDocument(int? documentID) { var doc = dataLayer.GetDocument(documentID); var cd = new System.Net.Mime.ContentDisposition { FileName = doc.FileName, Inline = true, }; Response.AppendHeader("Content-Disposition", cd.ToString()); return File(doc.Data, doc.ContentType); }
__lb__lang-cs public static class FuzzyDateExtensions { public static string ToFuzzyDateString(this TimeSpan timespan) { return timespan.ToFuzzyDateString(new Grammar()); } public static string ToFuzzyDateString(this TimeSpan timespan, Grammar grammar) { return GetFuzzyDateString(timespan, grammar); } public static string ToFuzzyDateString(this DateTime datetime) { return (DateTime.Now - datetime).ToFuzzyDateString(); } public static string ToFuzzyDateString(this DateTime datetime, Grammar grammar) { return (DateTime.Now - datetime).ToFuzzyDateString(grammar); } private static string GetFuzzyDateString(TimeSpan timespan, Grammar grammar) { timespan = timespan.Duration(); if (timespan >= grammar.AgesAgoThreshold) { return grammar.AgesAgo; } if (timespan < new TimeSpan(0, 2, 0)) { return grammar.JustNow; } if (timespan < new TimeSpan(1, 0, 0)) { return String.Format(grammar.MinutesAgo, timespan.Minutes); } if (timespan < new TimeSpan(1, 55, 0)) { return grammar.OneHourAgo; } if (timespan < new TimeSpan(12, 0, 0) && (DateTime.Now - timespan).IsToday()) { return String.Format(grammar.HoursAgo, timespan.RoundedHours()); } if ((DateTime.Now.AddDays(1) - timespan).IsToday()) { return grammar.Yesterday; } if (timespan < new TimeSpan(32, 0, 0, 0) && (DateTime.Now - timespan).IsThisMonth()) { return String.Format(grammar.DaysAgo, timespan.RoundedDays()); } if ((DateTime.Now.AddMonths(1) - timespan).IsThisMonth()) { return grammar.LastMonth; } if (timespan < new TimeSpan(365, 0, 0, 0, 0) && (DateTime.Now - timespan).IsThisYear()) { return String.Format(grammar.MonthsAgo, timespan.RoundedMonths()); } if ((DateTime.Now - timespan).AddYears(1).IsThisYear()) { return grammar.LastYear; } return String.Format(grammar.YearsAgo, timespan.RoundedYears()); } }
__lb__lang-cs class SomeData { public SomeData() { } static public IEnumerable<SomeData> CreateSomeDatas() { return new List<SomeData> { new SomeData(), new SomeData(), new SomeData() }; } }
__lb__lang-css display: flex; width: 100px; margin: 0 -5px; } .item { background: gray; width: 50px; height: 50px; margin: 0 5px; }
__lb__lang-sh $ ./lowerupper.sh i am the walrus! I AM THE WALRUS! ---------- a string with mixed stuff! A STRING WITH MIXED STUFF! ---------- a string with mixed stuff! A STRING WITH MIXED STUFF! ---------- myLowerVar: a string with mixed stuff! myUpperVar: A STRING WITH MIXED STUFF! ---------- Fine! All the same!
__lb__lang-cs Foo f = new Foo(); f["Bar"] = "asdf"; string s = (string)f["Bar"];
__lb__lang-sh scp -r prod:/path/foo /home/user/Desktop scp -r prod:/path/foo test:/tmp
__lb__lang-cs switch(value){ case 1: goto case 3; case 2: goto case 3; case 3: DoCase123(); case 4: goto case 5; case 5: goto case 6; case 6: goto case 7; case 7: DoCase4567(); }
__lb__lang-css { display: table-cell; vertical-align: middle; height: 90px; width: 270px; background: font-size: 48px; font-style: oblique; color: text-align: center; margin-top: 20px; margin-left: 5px; }
__lb__lang-css .myCheckbox input { position: relative; z-index: -9999; } .myCheckbox span { width: 20px; height: 20px; display: block; background: url("link_to_image"); } .myCheckbox input:checked + span { background: url("link_to_another_image"); }
__lb__lang-c 12345678........................................................
__lb__lang-c extern void DecodeImageNow(CGImageRef image, CGContextRef usingContext) __attribute__((overloadable)); extern void DecodeImageNow(CGImageRef image) __attribute__((overloadable));
__lb__lang-sh grep -v "pattern" filename > filename2; mv filename2 filename
__lb__lang-sh $ nc -w 2 -v microsoft.com 81 </dev/null; echo $? nc: connect to microsoft.com port 81 (tcp) timed out: Operation now in progress nc: connect to microsoft.com port 81 (tcp) timed out: Operation now in progress nc: connect to microsoft.com port 81 (tcp) timed out: Operation now in progress nc: connect to microsoft.com port 81 (tcp) timed out: Operation now in progress nc: connect to microsoft.com port 81 (tcp) timed out: Operation now in progress 1
__lb__lang-java List<String> strings = new ArrayList<String>(); Collections.addAll(strings,"A","B","C","D");
__lb__lang-css div background-image: url(/images/header-background.jpg); }
__lb__lang-cs class Program { static void Main(string[] args) { object obj = new Alpha(); Helper((dynamic)obj); } public static void Helper<T>(T obj) { GenericMethod<T>(); } public static void GenericMethod<T>() { Console.WriteLine("GenericMethod<" + typeof(T) + ">"); } }
__lb__lang-css /* * The .navi properties are for styling only * These properties can be changed or removed */ .navi { background-color: height: 40px; width: 100%; } /* * Position the * of the .wrapper element */ position: relative; display: inline-block; top: -40px; left: calc(100% - 52px); /* * Styling only, the below can be changed or removed * depending on your use case */ height: 20px; padding: 10px 10px; }
__lb__lang-java public static boolean useLoop(String[] arr, String targetValue) { for (String s: arr) { if (s.equals(targetValue)) return true; } return false; }
__lb__lang-cs HttpConfiguration config = GlobalConfiguration.Configuration; config.Formatters.JsonFormatter.SerializerSettings.Formatting = Newtonsoft.Json.Formatting.Indented; config.Formatters.JsonFormatter.SerializerSettings.Converters.Add (new Newtonsoft.Json.Converters.StringEnumConverter());
__lb__lang-css .tr { width: 30%; padding-bottom: 21.27%; /* = width / 1.41 */ position: relative; } .tr: before { content: position: absolute; top: 0; left: 0; width: 100%; height: 100%; background: }
__lb__lang-java public <A extends Animal> void passOn(Consumer<? super A> consumer, Supplier<A> supplier) { consumer.accept(supplier.get()); }
__lb__lang-java void cancelAll(Collection<TimerTask> list) { for (Iterator<TimerTask> i = list.iterator(); i.hasNext();) i.next().cancel(); }
__lb__lang-cs Assembly asm = Assembly.Load("MyAssembly"); Type[] types = asm.GetTypes(); Type[] result = types.where(x => x.GetInterface("IMyInterface") != null);
__lb__lang-html <html> <head> <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> <meta http-equiv="refresh" content="0;url=myURL" /> </head> <body> <p>You are not logged in!</p> <script language="javascript"> window.location = "myURL"; </script> </body> </html>
__lb__lang-java File f = new File("c:\\wscp.script"); FileInputStream fin = null; FileChannel ch = null; try { fin = new FileInputStream(f); ch = fin.getChannel(); int size = (int) ch.size(); MappedByteBuffer buf = ch.map(MapMode.READ_ONLY, 0, size); byte[] bytes = new byte[size]; buf.get(bytes); } catch (IOException e) { e.printStackTrace(); } finally { try { if (fin != null) { fin.close(); } if (ch != null) { ch.close(); } } catch (IOException e) { e.printStackTrace(); } }
__lb__lang-java 3: ldc 5: invokevirtual 8: invokestatic 8: invokestatic 11: lstore_1 12: iconst_0 13: istore_3 14: iconst_0 15: istore 4 17: iload 4 19: ldc 21: if_icmpge 40 24: iload_3 25: iconst_2 26: iload 4 28: iload 4 30: imul 31: imul 32: iadd 33: istore_3 34: iinc 4, 1 37: goto 17
__lb__lang-java public E remove(int index) { RangeCheck(index); modCount++; E oldValue = (E) elementData[index]; int numMoved = size - index - 1; if (numMoved > 0) System.arraycopy(elementData, index + 1, elementData, index, numMoved); elementData[--size] = null; return oldValue; }
__lb__lang-golang type T struct { A int B string } t := T{23, "skidoo"} s := reflect.ValueOf(&t).Elem() typeOfT := s.Type() for i := 0; i < s.NumField(); i++ { f := s.Field(i) fmt.Printf("%d: %s %s = %v\n", i, typeOfT.Field(i).Name, f.Type(), f.Interface()) }
__lb__lang-cs authorsList = authorsList.Except(authors).ToList();
__lb__lang-html Firefox Chrome IE-Edge with w/o with w/o with w/o box-sizing $(" $(" $(" $(" $(" $(" $(" $(" $(" $(" $(" $(" $(" $(" $(" $(" $(" $(" document.getElementById("t").getBoundingClientRect().width 200 206 200 206 200 206 document.getElementById("b").getBoundingClientRect().width 200 200 200 200 200 200 document.getElementById("d").getBoundingClientRect().width 200 206 200 206 200 206 document.getElementById("t").offsetWidth 200 206 200 206 200 206 document.getElementById("b").offsetWidth 200 200 200 200 200 200 document.getElementById("d").offsetWidth 200 206 200 206 200 206
__lb__lang-cpp class Modulo_print { ostream& os; public: Modulo_print(ostream& s, int mm) :os(s), m(mm) {} void operator()(int x) const { if (x%m==0) os << x << } };
__lb__lang-c strs[i] = malloc(strlen("foo") + 1); strcpy(strs[i], "foo");
__lb__lang-golang type IntArr []int func (a IntArr) each(fn func(index, value int)) { for i, v := range a { fn(i, v); } } func main() { var a = IntArr([]int{2,0,0,9}); var fnPrint = func (i, v int) { fmt.Println(i, ":", v); }; a.each(fnPrint); }
__lb__lang-java Hasher hasher = Hashing.md5().newHasher(); hasher.putString("my string"); byte[] md5 = hasher.hash().asBytes();
__lb__lang-java public class WaitPuzzle { public static void main(String[] args) throws InterruptedException { DoNothing doNothing = new DoNothing(); new WaitForever(doNothing).start(); new WaitForever(doNothing).start(); new WaitForever(doNothing).start(); Thread.sleep(100); doNothing.start(); while(true) { Thread.sleep(10); } } static class WaitForever extends Thread { private DoNothing doNothing; public WaitForever(DoNothing doNothing) { this.doNothing = doNothing; } @Override public void run() { synchronized (doNothing) { try { doNothing.wait(); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println("Unreachable Code"); } } } static class DoNothing extends Thread { @Override public void run() { System.out.println("Do Nothing "); } } }
__lb__lang-css so-select { position: relative; } so-select select { font-family: display: inline-block; height: 24px; width: 200px; padding: 0 1px; font-size: 12px; color: border: 1px solid border-radius: 4px; } so-select.empty:before { font-family: font-size: 12px; content: attr(placeholder); position: absolute; pointer-events: none; left: 6px; top: 3px; z-index: 0; color: }
__lb__lang-php $array = array( ), ); $object = json_decode(json_encode($array));
__lb__lang-java public DOCUMENT read(String xml, ValidationEventHandler validationEventHandler) { Validate.notNull(validationEventHandler,"ValidationHandler not Injected"); return read(new StringReader(xml), true, validationEventHandler); }
__lb__lang-c return-type function-name(parameter-list,...) { body... }
__lb__lang-cpp void readfile(const std::string &filepath,std::string &buffer){ std::ifstream fin(filepath.c_str()); getline(fin, buffer, char(-1)); fin.close(); }
__lb__lang-c void transform (float *output, float const * input, float const * matrix, int *n) { int i; for (i=0; i<*n; i++) { float x = input[i*2+0]; float y = input[i*2+1]; output[i*2+0] = matrix[0] * x + matrix[1] * y; output[i*2+1] = matrix[2] * x + matrix[3] * y; } }
__lb__lang-java @RequestMapping(value = "/upload", method = RequestMethod.POST) public void handleUpload(@RequestParam("file") MultipartFile file) throws IOException { if (!file.isEmpty()) { byte[] bytes = file.getBytes(); } }
__lb__lang-cs int[] ids = {1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233}; string csv = StringUtility.Join(",", ids, i => i.ToString() );
__lb__lang-java FileOutputStream fos = new FileOutputStream("File_Name", true); fos.write(data);
__lb__lang-hs f = sequence_ (reverse [print 1, print 2, print 3])
__lb__lang-cpp int main(int argc, char** argv) { QApplication qapp(argc,argv); QMainWindow mw; mw.show(); std::cout << "Finished Execution !" << endl << "..."; return qapp.exec(); }
__lb__lang-cs public class Person { [DeepClone(DeepCloneBehavior.Shallow)] private Job _currentJob; public string Name { get; set; } public Job CurrentJob { get{ return _currentJob; } set{ _currentJob = value; } } public Person Manager { get; set; } } public class Address { public Person PersonLivingHere { get; set; } } Address adr = new Address(); adr.PersonLivingHere = new Person("John"); adr.PersonLivingHere.BestFriend = new Person("James"); adr.PersonLivingHere.CurrentJob = new Job("Programmer"); Address adrClone = adr.Clone(); adr.PersonLivingHere == adrClone.PersonLivingHere adr.PersonLivingHere.Manager == adrClone.PersonLivingHere.Manager adr.PersonLivingHere.CurrentJob == adrClone.PersonLivingHere.CurrentJob adr.PersonLivingHere.CurrentJob.AnyProperty == adrClone.PersonLivingHere.CurrentJob.AnyProperty
__lb__lang-cs string s = o as string; if ( s == null ) { gotoPlanB(); }
__lb__lang-sh branch_name=$(git symbolic-ref -q HEAD) branch_name=${branch_name branch_name=${branch_name:-HEAD}
__lb__lang-cs public static byte[] StreamToByteArray(Stream stream) { if (stream is MemoryStream) { return ((MemoryStream)stream).ToArray(); } else { return ReadFully(stream); } }
__lb__lang-c for (j=0; j<4000; j++) { int *p = x[j]; for (i=0; i<4000; i++) { *p++ = i+j; } }
__lb__lang-php /** * My foo-bar const * @var string */ const FOO =
__lb__lang-cpp template <typename T> struct Foo { ... }; template class Foo<int>; template class Foo<float>;
__lb__lang-cs public static bool CompareByteArrays(byte[] ba0, byte[] ba1) => !(ba0.Length != ba1.Length || Enumerable.Range(1,ba0.Length) .FirstOrDefault(n => ba0[n] != ba1[n]) > 0);
__lb__lang-java import java.util.*; /** * A map where {@link * by associated values based on the the comparator provided at construction * time. The order of two or more keys with identical values is not defined. * <p> * Several contracts of the Map interface are not satisfied by this minimal * implementation. */ public class ValueSortedMap<K, V> extends HashMap<K, V> { protected Map<V, Collection<K>> valueToKeysMap; public ValueSortedMap() { this((Comparator<? super V>) null); } public ValueSortedMap(Comparator<? super V> valueComparator) { this.valueToKeysMap = new TreeMap<V, Collection<K>>(valueComparator); } public boolean containsValue(Object o) { return valueToKeysMap.containsKey(o); } public V put(K k, V v) { V oldV = null; if (containsKey(k)) { oldV = get(k); valueToKeysMap.get(oldV).remove(k); } super.put(k, v); if (!valueToKeysMap.containsKey(v)) { Collection<K> keys = new ArrayList<K>(); keys.add(k); valueToKeysMap.put(v, keys); } else { valueToKeysMap.get(v).add(k); } return oldV; } public void putAll(Map<? extends K, ? extends V> m) { for (Map.Entry<? extends K, ? extends V> e : m.entrySet()) put(e.getKey(), e.getValue()); } public V remove(Object k) { V oldV = null; if (containsKey(k)) { oldV = get(k); super.remove(k); valueToKeysMap.get(oldV).remove(k); } return oldV; } public void clear() { super.clear(); valueToKeysMap.clear(); } public Set<K> keySet() { LinkedHashSet<K> ret = new LinkedHashSet<K>(size()); for (V v : valueToKeysMap.keySet()) { Collection<K> keys = valueToKeysMap.get(v); ret.addAll(keys); } return ret; } public Set<Map.Entry<K, V>> entrySet() { LinkedHashSet<Map.Entry<K, V>> ret = new LinkedHashSet<Map.Entry<K, V>>(size()); for (Collection<K> keys : valueToKeysMap.values()) { for (final K k : keys) { final V v = get(k); ret.add(new Map.Entry<K,V>() { public K getKey() { return k; } public V getValue() { return v; } public V setValue(V v) { throw new UnsupportedOperationException(); } }); } } return ret; } }
__lb__lang-css div { color: black } :not(div) > div { color: red; }
__lb__lang-java public boolean findString(String[] strings, String desired){ for (String str : strings){ if (desired.equals(str)) { return true; } } return false; }
__lb__lang-cpp --- header file ---- class foo { public: foo() {;} virtual ~foo() = 0; virtual bool overrideMe() {return false;} }; ---- source ---- foo::~foo() { }
__lb__lang-php if ( ! array_key_exists( $this->referer = $_SERVER[ } else { $this->referer = $_SERVER[ }
__lb__lang-php function Redirect($url, $permanent = false) { header( exit(); } Redirect(
__lb__lang-java for (String key: map.keySet()) { System.out.println(key + "/" + map.get(key)); }
__lb__lang-perl my %var = ( ("bar", "baz"), fred => "barney", foo => (42, 95, 22) ); { {
__lb__lang-cpp try { MyChild &child = dynamic_cast<MyChild&>(*base); } catch(std::bad_cast &e) { std::cout << e.what(); }
__lb__lang-c long long n; unsigned long long un; printf("%lld", n); printf("%llu", un);
__lb__lang-cs foreach (var item in ForEachHelper.WithIndex(collection)) { Console.Write("Index=" + item.Index); Console.Write(";Value= " + item.Value); Console.Write(";IsLast=" + item.IsLast); Console.WriteLine(); }
__lb__lang-cpp label can only be a part of statement and declaration is not a statement
__lb__lang-cpp int main() { int x = 5; char * x_str = new char[2]; x_str = itoa(x, x_str, 10); return 0; }
__lb__lang-css input[type="checkbox"] { cursor: pointer; -webkit-appearance: none; -moz-appearance: none; appearance: none; outline: 0; background: lightgray; height: 16px; width: 16px; border: 1px solid white; } input[type="checkbox"]:checked { background: } input[type="checkbox"]:hover { filter: brightness(90%); } input[type="checkbox"]:disabled { background: opacity: 0.6; pointer-events: none; } input[type="checkbox"]:after { content: position: relative; left: 40%; top: 20%; width: 15%; height: 40%; border: solid border-width: 0 2px 2px 0; transform: rotate(45deg); display: none; } input[type="checkbox"]:checked:after { display: block; } input[type="checkbox"]:disabled:after { border-color: }
__lb__lang-php $lastEl = array_values(array_slice($array, -1))[0];
__lb__lang-sh Short | Long notation | Result -------+---------------+-------------------------------------------------------------- set -f | set -o noglob | Disable file name generation using metacharacters (globbing). set -v | set -o verbose| Prints shell input lines as they are read. set -x | set -o xtrace | Print command traces before executing command.
__lb__lang-cpp template<typename T> struct test { template<typename U> void get() const { std::cout << "get\n"; } }; template<typename T> void func(const test<T>& t) { t.get<int>(); }
__lb__lang-cs <dependentAssembly> <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" /> <bindingRedirect oldVersion="0.0.0.0-4.5.0.0" newVersion="6.0.0.0" /> </dependentAssembly>
__lb__lang-golang switch { case return c - case return c - case return c - } return 0
__lb__lang-c const char *sql_query = "SELECT statuses.word_id FROM lang1_words, statuses WHERE statuses.word_id = lang1_words.word_id ORDER BY lang1_words.word ASC";
__lb__lang-java public class ChuckNorrisException extends Exception { public ChuckNorrisException() { System.exit(1); } }
__lb__lang-cpp struct empty_pair_impl : protected empty_class_1 { non_empty_class_2 second; }; struct pair : private empty_pair_impl { non_empty_class_2 &second() { return this->second; } empty_class_1 &first() { return *this; } };
__lb__lang-hs $ ghc -O2 --make A.hs -prof -auto-all [1 of 1] Compiling Main ( A.hs, A.o ) Linking A ...
__lb__lang-golang import ( "text/template" htemplate "html/template" )
__lb__lang-php function getImageSize(url) { return new Promise((resolve, reject) => { const image = new Image() image.onload = () => resolve({ width: image.width, height: image.height }) image.onerror = reject image.src = url }) }
__lb__lang-php /** * @param array $array * @param int|string $position * @param mixed $insert */ function array_insert(&$array, $position, $insert) { if (is_int($position)) { array_splice($array, $position, 0, $insert); } else { $pos = array_search($position, array_keys($array)); $array = array_merge( array_slice($array, 0, $pos), $insert, array_slice($array, $pos) ); } }
__lb__lang-java public <T> T yourMethodSignature(Class<T> type) { Object result = ... if (type.isAssignableFrom(result.getClass())) { return (T)result; } else { } }
__lb__lang-java public static HashMap<String, String> build(String... data){ HashMap<String, String> result = new HashMap<String, String>(); if(data.length % 2 != 0) throw new IllegalArgumentException("Odd number of arguments"); String key = null; Integer step = -1; for(String value : data){ step++; switch(step % 2){ case 0: if(value == null) throw new IllegalArgumentException("Null key value"); key = value; continue; case 1: result.put(key, value); break; } } return result; }
__lb__lang-html <noscript> <meta http-equiv="refresh" content="3" /> </noscript>
__lb__lang-cs if(MyType.Implements<IInitializable>()) MyCollection.Initialize();
__lb__lang-css html, body { height: 100%; min-height: 100%; } .div-left { height: 100%; width: 50%; background: green; } .div-right { height: 100%; width: 50%; background: gray; }
__lb__lang-java List<Integer> immutableList = List.of(1, 2, 3, 4, 5); List<Integer> mutableList = new ArrayList<>(immutableList);
__lb__lang-cpp template <typename A, typename B, typename C> void f(const A& a, const B& b, const C& c) { E(const_cast<A&>(a), const_cast<B&>(b), const_cast<C&>(c)); }
__lb__lang-php Album +----+--------------------------+ | id | title | +----+--------------------------+ | 1 | Master of Puppets | | 2 | The Metallica Collection | +----+--------------------------+ Track +----+----------------------+----------+ | id | title | duration | +----+----------------------+----------+ | 1 | Battery | 00:05:13 | | 2 | Nothing Else Matters | 00:06:29 | | 3 | Damage Inc. | 00:05:33 | +----+----------------------+----------+ AlbumTrackReference +----+----------+----------+----------+------------+ | id | album_id | track_id | position | isPromoted | +----+----------+----------+----------+------------+ | 1 | 1 | 2 | 2 | 1 | | 2 | 1 | 3 | 1 | 0 | | 3 | 1 | 1 | 3 | 0 | | 4 | 2 | 2 | 1 | 0 | +----+----------+----------+----------+------------+
__lb__lang-cs using Microsoft.VisualBasic; using System; using System.Collections; using System.Collections.Generic; using System.Data; using System.Diagnostics; using System.Web; using System.Web.Script.Serialization; namespace Samples { [Serializable()] public class Customer { private int _idcustomer; public int IDCustomer { get { return _idcustomer; } set { _idcustomer = value; } } private System.DateTime _RegistrationDate; public System.DateTime RegistrationDate { get { return _RegistrationDate; } set { _RegistrationDate = value; } } private string _Name; public string Name { get { return _Name; } set { _Name = value; } } private string _Surname; public string Surname { get { return _Surname; } set { _Surname = value; } } } [Serializable()] public class Product { private int _ProductID; public int ProductID { get { return _ProductID; } set { _ProductID = value; } } private string _ProductName; public string ProductName { get { return _ProductName; } set { _ProductName = value; } } private int _Price; public int Price { get { return _Price; } set { _Price = value; } } private bool _inStock; public bool inStock { get { return _inStock; } set { _inStock = value; } } } [Serializable()] public class Order { private int _OrderId; public int OrderID { get { return _OrderId; } set { _OrderId = value; } } private int _customerID; public int CustomerID { get { return _customerID; } set { _customerID = value; } } private List<Product> _ProductsList; public List<Product> ProductsList { get { return _ProductsList; } set { _ProductsList = value; } } private System.DateTime _PurchaseDate; public System.DateTime PurchaseDate { get { return _PurchaseDate; } set { _PurchaseDate = value; } } private string _PaymentMethod; public string PaymentMethod { get { return _PaymentMethod; } set { _PaymentMethod = value; } } public string ToJson() { string json = string.Empty; JavaScriptSerializer js = new JavaScriptSerializer(); json = js.Serialize(this); js = null; return json; } } }
__lb__lang-java public static String convertStreamToString(InputStream is) { if (is == null) return null; StringBuilder sb = new StringBuilder(2048); char[] read = new char[128]; try (InputStreamReader ir = new InputStreamReader(is, StandardCharsets.UTF_8)) { for (int i; -1 != (i = ir.read(read)); sb.append(read, 0, i)); } catch (Throwable t) {} return sb.toString(); }
__lb__lang-cpp char sep = std::string s="1 This is an example"; for(size_t p=0, q=0; p!=s.npos; p=q) std::cout << s.substr(p+(p!=0), (q=s.find(sep, p+1))-p-(p!=0)) << std::endl;
__lb__lang-cs using (var context = new MyContext()) { foreach (var person in context.People) { } context.SaveChanges(); } using (var transaction = new TransactionScope()) { using (var context = new MyContext()) { foreach (var person in context.People) { context.SaveChanges(); } } transaction.Complete(); } using (var context = new MyContext()) { var people = context.People.ToList(); foreach (var person in people) { context.SaveChanges(); } }
__lb__lang-sh temp1=true temp2=false if [ "$temp1" = true ] || [ "$temp2" = true ] then echo "Do something." else echo "Do something else." fi
__lb__lang-cpp template <typename T> using has_foo = decltype(double(std::declval<T>().foo(std::declval<const char*>())));
__lb__lang-java String fName_temp = yourObject.getFname(); String lName_temp = yourObject.getLname(); String age_temp = yourObject.getAge(); String address_temp = yourObject.getAddress(); Intent i = new Intent(this, ToClass.class); i.putExtra("fname", fName_temp); i.putExtra("lname", lName_temp); i.putExtra("age", age_temp); i.putExtra("address", address_temp); startActivity(i);
__lb__lang-hs toNat :: Int -> Maybe Nat toNat i | i >= 0 = Just (Nat i) | otherwise = Nothing
__lb__lang-hs myAny :: (a -> Bool) -> [a] -> Bool myAny p list = foldl step False list where step acc item = p item || acc
__lb__lang-java mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);
__lb__lang-hs instance Functor ((->) env) where fmap = (.) instance Monad ((->) env) where return = const f >>= g = \x -> g (f x) x
__lb__lang-cs switch (mystring) { case var s when new[] { "Alpha","Beta","Gamma" }.Contains(s): break; ... }
__lb__lang-cpp int main() { auto s = "a,b, c ,,e,f,"; std::vector<std::string> fields; boost::split(fields, s, boost::is_any_of(",")); for (const auto& field : fields) std::cout << "\"" << field << "\"\n"; return 0; }
__lb__lang-c 00000000 <swap>: 0: 8b 44 24 04 mov eax,DWORD PTR [esp+0x4] 4: 8b 5c 24 08 mov ebx,DWORD PTR [esp+0x8] 8: 8b 00 mov eax,DWORD PTR [eax] a: 8b 1b mov ebx,DWORD PTR [ebx] c: 31 c3 xor ebx,eax e: 31 d8 xor eax,ebx 10: 31 c3 xor ebx,eax 12: 8b 4c 24 04 mov ecx,DWORD PTR [esp+0x4] 16: 89 01 mov DWORD PTR [ecx],eax 18: 8b 4c 24 08 mov ecx,DWORD PTR [esp+0x8] 1c: 89 19 mov DWORD PTR [ecx],ebx 1e: c3 ret not shown: the later bytes are ASCII text documentation they
__lb__lang-java Random r = new Random(); int[] fiveRandomNumbers = r.ints(5, 0, 11).toArray(); int randomNumber = r.ints(1, 0, 11).findFirst().getAsInt();
__lb__lang-golang func readline(reader io.Reader) (line []byte, err error) { line = make([]byte, 0, 100) for { b := make([]byte, 1) n, er := reader.Read(b) if n > 0 { c := b[0] if c == break } line = append(line, c) } if er != nil { err = er return } } return }
__lb__lang-php require_once( /** Set access tokens here - see: https: $settings = array( );
__lb__lang-java JsonObject jsonObject = new JsonParser().parse("{\"name\": \"John\"}").getAsJsonObject(); System.out.println(jsonObject.get("name").getAsString());
__lb__lang-cs string divisionsCSV = String.Join(",", ((List<IDivisionView>)divisions).ConvertAll<string>(d => d.DivisionID.ToString("b")).ToArray());
__lb__lang-java int a = 11; String with3digits = String.format("%03d", a); System.out.println(with3digits);
__lb__lang-sh sp="/-\|" sc=0 spin() { printf "\b${sp:sc++:1}" ((sc==${ } endspin() { printf "\r%s\n" "$@" } until work_done; do spin some_work ... done endspin
__lb__lang-java InputStream is = ... ByteArrayOutputStream buffer = new ByteArrayOutputStream(); int nRead; byte[] data = new byte[16384]; while ((nRead = is.read(data, 0, data.length)) != -1) { buffer.write(data, 0, nRead); } return buffer.toByteArray();
__lb__lang-cs var results = from myRow in myDataTable.Rows.Cast<DataRow>() where myRow.Field<int>("RowNo") == 1 select myRow;
__lb__lang-php curl_setopt($ch, CURLOPT_HEADER, 1); curl_setopt($ch, CURLOPT_HTTPPROXYTUNNEL, 1);
__lb__lang-hs -- literator main = translateLn <$> getLine >>= putStrLn translateLn :: String -> String translateLn = unwords . map t . words t :: String -> String -- t(ranslate) -- historical accurate naming t "=" = "is equal too" -- The Whetstone of Witte - Robert Recorde (1557) -- proposed namings -- src http: t ">>=" = "bind" t "*>" = "then" t "->" = "to" -- a -> b: a to b t "<$" = "map-replace by" -- 0 <$ f: "f map-replace by 0" t "<*>" = "ap(ply)" -- (as it is the same as Control.Monad.ap) t "!!" = "index" t "!" = "index/strict" -- a ! b: "a index b", foo !x: foo strict x t "<|>" = "or/alternative" -- expr <|> term: "expr or term" t "[]" = "empty list" t ":" = "cons" t "\\" = "lambda" t "@" = "as" -- go ll@(l:ls): go ll as l cons ls t "~" = "lazy" -- go ~(a,b): go lazy pair a, b -- t ">>" = "then" -- t "<-" = "bind" -- (as it desugars to >>=) -- t "<$>" = "(f)map" -- t "$" = "" -- (none, just as " " [whitespace]) -- t "." = "pipe to" -- a . b: "b pipe-to a" -- t "++" = "concat/plus/append" -- t "::" = "ofType/as" -- f x :: Int: f x of type Int -- additional names -- src http: t "|" = "such that" t "<-" = "is drawn from" t "::" = "is of type" t "_" = "whatever" t "++" = "append" t "=>" = "implies" t "." = "compose" t "<=<" = "left fish" -- t "=" = "is defined as" -- t "<$>" = "(f)map" -- src http: t "$" = "of" -- src http: t ">>" = "sequence" -- t "<$>" = "infix fmap" -- t ">>=" = "bind" -------------- -- Examples -- -------------- -- "(:) <$> Just 3 <*> Just [4]" -- meaning "Cons applied to just three applied to just list with one element four" t "(:)" = "Cons" t "Just" = "just" t "<$>" = "applied to" t "3" = "three" -- this is might go a bit too far t "[4]" = "list with one element four" -- this one too, let -- additional expressions to translate from -- src http: -- delete (0, 0) $ (,) <$> [-1..1] <*> [-1..1] -- (,) <$> [-1..1] <*> [-1..1] & delete (0, 0) -- liftA2 (,) [-1..1] [-1..1] & delete (0, 0) t "(,)" = "tuple constructor" t "&" = "then" -- flipped `$` -- everything not matched until this point stays at it is t x = x
__lb__lang-golang export GOPATH=$HOME/go export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
__lb__lang-java import com.google.gson.*; public class SerialUtils { public static String serializeObject(Object o) { Gson gson = new Gson(); String serializedObject = gson.toJson(o); return serializedObject; } public static Object unserializeObject(String s, Object o){ Gson gson = new Gson(); Object object = gson.fromJson(s, o.getClass()); return object; } public static Object cloneObject(Object o){ String s = serializeObject(o); Object object = unserializeObject(s,o); return object; } }
__lb__lang-cs return alphabet .OrderBy(c => Guid.NewGuid()) .Take(strLength) .Aggregate( new StringBuilder(), (builder, c) => builder.Append(c)) .ToString();
__lb__lang-cs object objClassInstance = GetInstance("Vehicles.Car");
__lb__lang-cpp bool GetFooArray(array &foo); bool GetFooArray(array *foo);
__lb__lang-php class UserRoles { public static function getDefaultRoles() { return array( } } initMyRoles( UserRoles::getDefaultRoles() );
__lb__lang-golang package bufio: unrecognized import path "bufio" package bytes: unrecognized import path "bytes" package crypto/rand: unrecognized import path "crypto/rand" package crypto/sha1: unrecognized import path "crypto/sha1" package crypto/tls: unrecognized import path "crypto/tls" package encoding/base64: unrecognized import path "encoding/base64" package encoding/binary: unrecognized import path "encoding/binary" package encoding/json: unrecognized import path "encoding/json" package errors: unrecognized import path "errors" package fmt: unrecognized import path "fmt"
__lb__lang-cs <appSettings> <add key="mailCfg" value="yourmail@example.com"/> </appSettings> <system.net> <mailSettings> <smtp deliveryMethod="Network" from="yourmail@example.com"> <network defaultCredentials="false" host="mail.exapmple.com" userName="yourmail@example.com" password="your_password" port="25"/> </smtp> </mailSettings> </system.net>
__lb__lang-cpp int main() { std::cout << std::numeric_limits<int>::max() << std::endl; }
__lb__lang-golang package httpclient import ( "net" "net/http" "time" ) func TimeoutDialer(cTimeout time.Duration, rwTimeout time.Duration) func(net, addr string) (c net.Conn, err error) { return func(netw, addr string) (net.Conn, error) { conn, err := net.DialTimeout(netw, addr, cTimeout) if err != nil { return nil, err } conn.SetDeadline(time.Now().Add(rwTimeout)) return conn, nil } } func NewTimeoutClient(connectTimeout time.Duration, readWriteTimeout time.Duration) *http.Client { return &http.Client{ Transport: &http.Transport{ Dial: TimeoutDialer(connectTimeout, readWriteTimeout), }, } }
__lb__lang-java Map<String, Choice> result = choices.stream().collect(Collectors.toMap(Choice::getName, Function.identity()));
__lb__lang-php ./app/MyApp/Facades/Helper.php ./app/MyApp/Facades/HelperFacade.php ./app/MyApp/Providers/HelperServiceProvider.php
__lb__lang-sh function proj cd /home/tree/projects/java end funcsave proj
__lb__lang-java class Bar { private static class BarHolder { public static Bar bar = new Bar(); } public static Bar getBar() { return BarHolder.bar; } }
__lb__lang-java package pizza; public class Rhino { public class Goat { ... } private void jerry() { Goat g = new Goat(); } }
__lb__lang-cpp int arr[5] = {1, 2, 3, 4, 5}; int arr[] = {1, 2, 3, 4, 5}; arr = { 1, 2, 3, 4, 5 };
__lb__lang-php $str = $max = 7; if(strlen($str) > $max) { $str = substr($str, 0, $max) . }
__lb__lang-java public static double round(double valueToRound, int numberOfDecimalPlaces) { double multipicationFactor = Math.pow(10, numberOfDecimalPlaces); double interestedInZeroDPs = valueToRound * multipicationFactor; return Math.round(interestedInZeroDPs) / multipicationFactor; }
__lb__lang-golang _, filename, _, _ := runtime.Caller(1) f, err := os.Open(path.Join(path.Dir(filename), "data.csv"))
__lb__lang-cs String.Format("{0:t}", dt); String.Format("{0:d}", dt); String.Format("{0:T}", dt); String.Format("{0:D}", dt); String.Format("{0:f}", dt); String.Format("{0:F}", dt); String.Format("{0:g}", dt); String.Format("{0:G}", dt); String.Format("{0:m}", dt); String.Format("{0:y}", dt); String.Format("{0:r}", dt); String.Format("{0:s}", dt); String.Format("{0:u}", dt); /* Specifier DateTimeFormatInfo property Pattern value (for en-US culture) t ShortTimePattern h:mm tt d ShortDatePattern M/d/yyyy T LongTimePattern h:mm:ss tt D LongDatePattern dddd, MMMM dd, yyyy f (combination of D and t) dddd, MMMM dd, yyyy h:mm tt F FullDateTimePattern dddd, MMMM dd, yyyy h:mm:ss tt g (combination of d and t) M/d/yyyy h:mm tt G (combination of d and T) M/d/yyyy h:mm:ss tt m, M MonthDayPattern MMMM dd y, Y YearMonthPattern MMMM, yyyy r, R RFC1123Pattern ddd, dd MMM yyyy HH s SortableDateTi­mePattern yyyy u UniversalSorta­bleDateTimePat­tern yyyy (*) = culture independent */
__lb__lang-perl awk a=$1 sub( " [^"FS"]+ ["FS"]+ " , "" ) print $0, a United Arab Emirates AE Antigua & Barbuda AG Netherlands Antilles AN American Samoa AS Bosnia and Herzegovina BA Burkina Faso BF Brunei Darussalam BN
__lb__lang-cs string test = GetDefault(typeof(string)); if (test is string) Console.WriteLine("This will never be hit.");
__lb__lang-c int main(){ int a[10]; int *p; printf("%p\n", (void *)a); printf("%p\n", (void *)(&a+1)); printf("---- diff----\n"); printf("%zu\n", sizeof(a[0])); printf("The size of array a is %zu\n", ((char *)(&a+1)-(char *)a)/(sizeof(a[0]))); return 0; };
__lb__lang-c int main(int argc, char ** argv) { int i = 0; i = i++ + ++i; printf("%d\n", i); i = 1; i = (i++); printf("%d\n", i); volatile int u = 0; u = u++ + ++u; printf("%d\n", u); u = 1; u = (u++); printf("%d\n", u); register int v = 0; v = v++ + ++v; printf("%d\n", v);
__lb__lang-sh check=`echo "$1" | grep -E ^\-?[0-9]*\.?[0-9]+$` if [ "$check" != echo "Yeap!" else echo "nooop" fi
__lb__lang-hs Illegal instance declaration for `Fooable String' (All instance types must be of the form (T t1 ... tn) where T is not a synonym. Use -XTypeSynonymInstances if you want to disable this.) In the instance declaration for `Fooable String'
__lb__lang-java private static Random random = new Random(); public static int getRandomInt(int min, int max){ return random.nextInt(max - min + 1) + min; }
__lb__lang-php <?php error_reporting(E_ALL); ini_set( include ("tst3.php"); ?>
__lb__lang-java ArrayList<String> places = new ArrayList<>(Arrays.asList("Buenos Aires", "Córdoba", "La Plata"));
__lb__lang-java map.entrySet().forEach((e) -> { System.out.println(e.getKey() + " : " + e.getValue()); });
__lb__lang-cs public int Foo { get { return _foo; } set { SetValue(ref _foo, value); } }
__lb__lang-css filter: url("data:image/svg+xml;utf8,<svg%20xmlns= filter: grayscale(100%); -webkit-filter: grayscale(100%); -moz-filter: grayscale(100%); -ms-filter: grayscale(100%); -o-filter: grayscale(100%); filter: gray;
__lb__lang-java String loc="./webapps/prjct name/server folder/"+contentid+extension; File uploadFile=new File(loc); item.write(uploadFile);
__lb__lang-hs typedef enum { MONOME_BUTTON_UP = 0x00, MONOME_BUTTON_DOWN = 0x01, MONOME_ENCODER_DELTA = 0x02, MONOME_ENCODER_KEY_UP = 0x03, MONOME_ENCODER_KEY_DOWN = 0x04, MONOME_TILT = 0x05, MONOME_EVENT_MAX = 0x06 } monome_event_type_t; typedef struct monome monome_t; typedef struct monome_event monome_event_t; typedef void (*monome_event_callback_t) (const monome_event_t *event, void *data); struct monome_event { monome_t *monome; monome_event_type_t event_type; __extension__ union { struct { unsigned int x; unsigned int y; } grid; struct { unsigned int number; int delta; } encoder; struct { unsigned int sensor; int x; int y; int z; } tilt; }; };
__lb__lang-php echo floor($seconds / 3600) . gmdate(":i:s", $seconds % 3600);
__lb__lang-c void foo(bool flag); ... int flag = TRUE; foo(flag);
__lb__lang-java StringWriter sw = new StringWriter(); e.printStackTrace(new PrintWriter(sw)); String exceptionAsString = sw.toString();
__lb__lang-java @Test public void testMapStringDoubleComparator(){ HashMap<String, Double> unSoretedMap = new HashMap<String, Double>(); Comparators.MapStringDoubleComparator bvc = new Comparators.MapStringDoubleComparator( unSoretedMap); TreeMap<String, Double> sorted_map = new TreeMap<String, Double>(bvc); unSoretedMap.put("D",new Double(67.3)); unSoretedMap.put("A",new Double(99.5)); unSoretedMap.put("B",new Double(67.4)); unSoretedMap.put("C",new Double(67.5)); unSoretedMap.put("E",new Double(99.5)); sorted_map.putAll(unSoretedMap); Object[] targetKeys={"D","B","C","E","A"}; Object[] currecntKeys=sorted_map.keySet().toArray(); assertArrayEquals(targetKeys,currecntKeys); }
__lb__lang-cpp using namespace std; class StudentT { public: int id; string name; public: StudentT(int _id, string _name) : id(_id), name(_name) { } int getId() { return id; } string getName() { return name; } }; inline bool operator< (StudentT s1, StudentT s2) { return s1.getId() < s2.getId(); } int main() { set<StudentT> st; StudentT s1(0, "Tom"); StudentT s2(1, "Tim"); st.insert(s1); st.insert(s2); set<StudentT> :: iterator itr; for (itr = st.begin(); itr != st.end(); itr++) { cout << itr->getId() << " " << itr->getName() << endl; } return 0; }
__lb__lang-php final class EnumException extends Exception{} abstract class Enum { /** * @var array ReflectionClass */ protected static $reflectorInstances = array(); /** * Массив конфигурированного объекта-константы enum * @var array */ protected static $enumInstances = array(); /** * Массив соответствий значение->ключ используется для проверки - * если ли константа с таким значением * @var array */ protected static $foundNameValueLink = array(); protected $constName; protected $constValue; /** * Реализует паттерн "Одиночка" * Возвращает объект константы, но но как объект его использовать не стоит, * т.к. для него реализован "волшебный метод" __toString() * Это должно использоваться только для типизачии его как параметра * @paradm Node */ final public static function get($value) { $name = self::getName($value); if ($name === false) throw new EnumException("Неизвестая константа"); $className = get_called_class(); if (!isset(self::$enumInstances[$className][$name])) { $value = constant($className. self::$enumInstances[$className][$name] = new $className($name, $value); } return self::$enumInstances[$className][$name]; } /** * Возвращает массив констант пар ключ-значение всего перечисления * @return array */ final public static function toArray() { $classConstantsArray = self::getReflectorInstance()->getConstants(); foreach ($classConstantsArray as $k => $v) $classConstantsArray[$k] = (string)$v; return $classConstantsArray; } /** * Для последующего использования в toArray для получения массива констант ключ->значение * @return ReflectionClass */ final private static function getReflectorInstance() { $className = get_called_class(); if (!isset(self::$reflectorInstances[$className])) { self::$reflectorInstances[$className] = new ReflectionClass($className); } return self::$reflectorInstances[$className]; } /** * Получает имя константы по её значению * @param string $value */ final public static function getName($value) { $className = (string)get_called_class(); $value = (string)$value; if (!isset(self::$foundNameValueLink[$className][$value])) { $constantName = array_search($value, self::toArray(), true); self::$foundNameValueLink[$className][$value] = $constantName; } return self::$foundNameValueLink[$className][$value]; } /** * Используется ли такое имя константы в перечислении * @param string $name */ final public static function isExistName($name) { $constArray = self::toArray(); return isset($constArray[$name]); } /** * Используется ли такое значение константы в перечислении * @param string $value */ final public static function isExistValue($value) { return self::getName($value) === false ? false : true; } final private function __clone(){} final private function __construct($name, $value) { $this->constName = $name; $this->constValue = $value; } final public function __toString() { return (string)$this->constValue; } }
__lb__lang-cs FileStream objFileStream = File.Open(Server.MapPath("TextFile.txt"), FileMode.Open); Response.Write(string.Format("FileStream Content length: {0}", objFileStream.Length.ToString())); MemoryStream objMemoryStream = new MemoryStream(); objFileStream.CopyTo(objMemoryStream); Response.Write("<br/><br/>"); Response.Write(string.Format("MemoryStream Content length: {0}", objMemoryStream.Length.ToString())); Response.Write("<br/><br/>");
__lb__lang-java public class StringFromFileFast { public static void main(String[] args) { InputStream is = StringFromFileFast.class.getResourceAsStream("file.txt"); InputStreamReader input = new InputStreamReader(is ); final int CHARS_PER_PAGE = 5000; final char[] buffer = new char[CHARS_PER_PAGE]; StringBuilder output = new StringBuilder(CHARS_PER_PAGE); try { for(int read = input.read(buffer, 0, buffer.length); read != -1; read = input.read(buffer, 0, buffer.length)) { output.append(buffer, 0, read); } } catch (IOException ignore) { } String text = output.toString(); System.out.println(text); } }
__lb__lang-hs Prelude> foldl (flip (:)) [] [1..] ^CInterrupted. Prelude> foldl (\x y -> y) 0 [1..] ^CInterrupted.
__lb__lang-java private boolean defaultOptionalFlagValue = true; public void doSomething(boolean optionalFlag) { ... } public void doSomething() { doSomething(defaultOptionalFlagValue); }
__lb__lang-cs Type type = abc.GetType().GetGenericArguments()[0];
__lb__lang-cs public static int GetAge(DateTime bithDay, DateTime today) { } public static int GetAge(DateTime birthDay) { return GetAge(birthDay, DateTime.Now); }
__lb__lang-java for(int i = l.size() - 1; i >= 0; i --) { if (l.get(i) == 5) { l.remove(i); } }
__lb__lang-cpp int main() { int num = 19 ; num = (num << 3) + (num >> 3); }
__lb__lang-java class Test{ private static int x = 1; static class A{ private static int y = 2; public static int getZ(){ return B.z+x; } } static class B{ private static int z = 3; public static int getY(){ return A.y; } } } class TestDemo{ public static void main(String[] args){ Test t = new Test(); System.out.println(Test.A.getZ()); System.out.println(Test.B.getY()); } }
__lb__lang-css select{ color: grey; } option { color: black; } option[default] { display: none; }
__lb__lang-html <script language="javascript"> window.location = "http: </script>
__lb__lang-css .outer { display: table; position: absolute; top: 0; left: 0; height: 100%; width: 100%; } .middle { display: table-cell; vertical-align: middle; } .inner { margin-left: auto; margin-right: auto; width: 400px; }
__lb__lang-golang var out io.Writer enc := json.NewEncoder(out) enc.SetIndent("", " ") if err := enc.Encode(data); err != nil { panic(err) }
__lb__lang-java java [ <option> ... ] -jar <jar-file-name> [<argument> ...]
__lb__lang-php Warning: var_export does not handle circular references in example.php on line 3 array ( array ( ), )
__lb__lang-java class Foo { private final String a; private final Integer b; Foo(String a, Integer b) { this.a = a; this.b = b; } } class FooBuilder { private String a = ""; private Integer b = 0; FooBuilder setA(String a) { this.a = a; return this; } FooBuilder setB(Integer b) { this.b = b; return this; } Foo build() { return new Foo(a, b); } } Foo foo = new FooBuilder().setA("a").build();
__lb__lang-cs using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Collections; using System.Collections.ObjectModel; namespace System { public static class StringExtensions { public static string[] Split(this string s, string delimiter, StringSplitOptions options = StringSplitOptions.None) { return s.Split(new string[] { delimiter }, options); } } }
__lb__lang-php array:3 [ "foo" => array:2 [ "elapsed" => 9.000766992569 "percent" => 0.4736904954747 ] "bar" => array:2 [ "elapsed" => 7.0004580020905 "percent" => 0.36841864946596 ] "baz" => array:2 [ "elapsed" => 3.0001420974731 "percent" => 0.15789085505934 ] ]
__lb__lang-css html, body, .container { height: 100%; width: 100%; } .container { display: flex; align-items: center; justify-content: center; } .mydiv { width: 80px; }
__lb__lang-c intmax_t powjii(int x, int y) { if (y < 0) { switch (x) { case 0: return INTMAX_MAX; case 1: return 1; case -1: return y % 2 ? -1 : 1; } return 0; } intmax_t z = 1; intmax_t base = x; for (;;) { if (y % 2) { z *= base; } y /= 2; if (y == 0) { break; } base *= base; } return z; }
__lb__lang-php $arr = [4,2,1,3]; usort($arr, function ($a, $b) { if ($a < $b) { return -1; } elseif ($a > $b) { return 1; } else { return 0; } });
__lb__lang-php public function getTimeToMicroseconds() { $t = microtime(true); $micro = sprintf("%06d", ($t - floor($t)) * 1000000); $d = new DateTime(date( return $d->format("Y-m-d H:i:s.u"); }
__lb__lang-c void *PrintHello(void *threadid) { long tid; tid = (long)threadid; printf("Hello World! It pthread_exit(NULL); } int main (int argc, char *argv[]) { pthread_t threads[NUM_THREADS]; int rc; long t; for(t=0; t<NUM_THREADS; t++){ printf("In main: creating thread %ld\n", t); rc = pthread_create(&threads[t], NULL, PrintHello, (void *)t); if (rc){ printf("ERROR; return code from pthread_create() is %d\n", rc); exit(-1); } } pthread_exit(NULL); }
__lb__lang-sh $ unset a $ b= $ c= $ [[ -v a ]] && echo "a is set" $ [[ -v b ]] && echo "b is set" b is set $ [[ -v c ]] && echo "c is set" c is set
__lb__lang-golang const romanNumeralDict map[int]string = { 1000: "M", 900 : "CM", 500 : "D", 400 : "CD", 100 : "C", 90 : "XC", 50 : "L", 40 : "XL", 10 : "X", 9 : "IX", 5 : "V", 4 : "IV", 1 : "I", }
__lb__lang-hs facSlim :: (Integral a) => a -> a facSlim x = facS facS facS
__lb__lang-java class Stack<T> { private final T[] array; public Stack(int capacity) { array = (T[]) new Object[capacity]; } }
__lb__lang-html <table> <tr> <td> <div class="centered">This div<br />is centered</div> <p> Lorem ipsum dolor sit amet, nam sint laoreet at, his ne sumo causae, simul decore deterruisset ne mel. Exerci atomorum est ut. At choro vituperatoribus usu. Dico epicurei persequeris quo ex, ea ius zril phaedrum eloquentiam, duo in aperiam admodum fuisset. No quidam consequuntur usu, in amet hinc simul eos. Ex soleat meliore percipitur mea, nihil omittam salutandi ut eos. Mea et impedit facilisi pertinax, ea viris graeci fierent pri, te sonet intellegebat his. Vis denique albucius instructior ad, ex eum iudicabit elaboraret. Sit ea intellegam liberavisse. Nusquam quaestio maiestatis ut qui, eam decore altera te. Unum cibo aliquip ut qui, te mea doming prompta. Ex rebum interesset nam, te nam zril suscipit, qui suavitate explicari appellantur te. Usu brute corpora mandamus eu. Dicit soluta his eu. In sint consequat sed, quo ea tota petentium. Adhuc prompta splendide mel ad, soluta delenit nec cu. </p> </td> <td> <p> Lorem ipsum dolor sit amet, dico choro recteque te cum, ex omnesque consectetuer sed, alii esse utinam et has. An qualisque democritum usu. Ea has habeo labores, laoreet intellegat te mea. Eius equidem inermis vel ne. Ne eum sonet labitur, nec id natum munere. Primis graecis est cu, quis dictas eu mea, eu quem offendit forensibus nec. Id animal mandamus his, vis in sonet tempor luptatum. Ne civibus oporteat comprehensam vix, per facete discere atomorum eu. Mucius probatus volutpat sit an, sumo nominavi democritum eam ut. Ea sit choro graece debitis, per ex verear voluptua epicurei. Id eum wisi dicat, ea sit velit doming cotidieque, eu sea amet delenit. Populo tacimates dissentiunt has cu. Has wisi hendrerit at, et quo doming putent docendi. Ea nibh vide omnium usu. </p> </td> </tr> </table>
__lb__lang-java String str="004-034556" String[] sTemp=str.split("-"); string1=004 string2=034556
__lb__lang-php function usortarr(&$array, $key, $callback = uasort($array, function($a, $b) use($key, $callback) { return call_user_func($callback, $a[$key], $b[$key]); }); }
__lb__lang-hs {- import THEnv main = print $( lookupCompileEnvExp "DEBUG" )
__lb__lang-php class test { } $res = new test(); $res->success = false;
__lb__lang-cs string myresult = System.Text.Encoding.UTF8.GetString(byteArray);
__lb__lang-hs > tree ^? element 0 Just 1 > tree ^? element 1 Just 2 > tree ^? element 2 Just 4 > tree ^? element 3 Just 5 > tree ^? element 4 Just 3 > tree ^? element 5 Just 6 > tree ^? element 6 Just 7
__lb__lang-cpp struct node; typedef std::unique_ptr<node> list; struct node { int entry; list next; }
__lb__lang-cs return RedirectToAction("ACTION", "CONTROLLER", new { id = 99, otherParam = "Something", anotherParam = "OtherStuff" });
__lb__lang-java <%@ taglib prefix="h" tagdir="/WEB-INF/tags/bold"%> <h:bold>Make me bold</h:bold>
__lb__lang-cs "SELECT TOP 1 * FROM [dbo].[WebLog] WHERE [DurationSeconds] > 10 AND [WebLogID] > 100 AND LEN([EmailAddress]) > 11"
__lb__lang-cs var people = new List<Person>(); people.Add(new Person(1, "a", "b")); people.Add(new Person(2, "c", "d")); people.Add(new Person(1, "a", "b")); foreach (var person in people.Distinct(p => p.ID))
__lb__lang-php function str_replace_limit($search, $replace, $string, $limit) { $i = 0; $searchLength = mb_strlen($search); while(($pos = mb_strpos($string, $search)) !== false && $i < $limit) { $string = mb_substr_replace($string, $replace, $pos, $searchLength); $i += 1; } return $string; } function mb_substr_replace($string, $replacement, $start, $length = null, $encoding = null) { $string = (array)$string; $encoding = is_null($encoding) ? mb_internal_encoding() : $encoding; $length = is_null($length) ? mb_strlen($string) - $start : $length; $string = array_map(function($str) use ($replacement, $start, $length, $encoding){ $begin = mb_substr($str, 0, $start, $encoding); $end = mb_substr($str, ($start + $length), mb_strlen($str), $encoding); return $begin . $replacement . $end; }, $string); return ( count($string) === 1 ) ? $string[0] : $string; }
__lb__lang-perl curl -L http: eval `perl -I ~/Library/perl5/lib/perl5 -Mlocal::lib=~/Library/perl5` echo
__lb__lang-cs using System.Net.Mail; using System.Net; var fromAddress = new MailAddress("from@gmail.com", "From Name"); var toAddress = new MailAddress("to@yahoo.com", "To Name"); const string fromPassword = "password"; const string subject = "test"; const string body = "Hey now!!"; var smtp = new SmtpClient { Host = "smtp.gmail.com", Port = 587, EnableSsl = true, DeliveryMethod = SmtpDeliveryMethod.Network, Credentials = new NetworkCredential(fromAddress.Address, fromPassword), Timeout = 20000 }; using (var message = new MailMessage(fromAddress, toAddress) { Subject = subject, Body = body }) { smtp.Send(message); }
__lb__lang-cs public Sample(string str) : this(int.Parse(str)) { }
__lb__lang-cpp 3n+1 -> ???? 0000 0100 / 2 -> ???? ?000 0010 / 2 -> ???? ??00 0001 3n+1 -> ???? ??00 0100 / 2 -> ???? ???0 0010 / 2 -> ???? ???? 0001 3n+1 -> ???? ???? 0100 / 2 -> ???? ???? ?010 / 2 -> ???? ???? ??01 3n+1 -> ???? ???? ??00 / 2 -> ???? ???? ???0 / 2 -> ???? ???? ????
__lb__lang-perl if( do{ my $match = 0; for( @list ){ if( $element eq $_ ){ $match = 1; last; } } $match; } ){ ... }
__lb__lang-cs public static T ToEnum<T>(this string value, T defaultValue) { if (string.IsNullOrEmpty(value)) { return defaultValue; } T result; return Enum.TryParse<T>(value, true, out result) ? result : defaultValue; }
__lb__lang-php $url = array_filter($data, function ($value) { return (!empty($value) || $value === 0 || $value=== });
__lb__lang-hs intersperse 11 [1, 3, 5, 7, 9] = [1, 11, 3, 11, 5, 11, 7, 11, 9] intersperse "*" ["foo","bar","baz","quux"] = ["foo", "*", "bar", "*", "baz", "*", "quux"]
__lb__lang-c MY_TYPE a; a = (MY_TYPE) { .flag = true, .value = 123, .stuff = 0.456 }; ... a = (MY_TYPE) { .value = 234, .stuff = 1.234, .flag = false };
__lb__lang-java String a="string with multi spaces "; String b= a.replaceAll("\\s+"," "); String c= a.replace(" "," ").replace(" "," ").replace(" "," ").replace(" "," ").replace(" "," ");
__lb__lang-cs TimeSpan diff = DateTime.Now - birthdayDateTime; string age = String.Format("{0:%y} years, {0:%M} months, {0:%d}, days old", diff);
__lb__lang-php trait A { function calc($v) { return $v+1; } } class IntClass { use A; } class MyClass extends IntClass { function calc($v) { $v++; return parent::calc($v); } }
__lb__lang-cs Microsoft (R) Roslyn C Loading context from Type " > var x = new List<int>() { 3, 4 }; > var y = x.ToList(); > x.Add(5) > x List<int>(3) { 3, 4, 5 } > y List<int>(2) { 3, 4 } >
__lb__lang-cpp bool iequals(const string& a, const string& b) { return std::equal(a.begin(), a.end(), b.begin(), b.end(), [](char a, char b) { return tolower(a) == tolower(b); }); }
__lb__lang-php $response = curl_exec($ch); $x = explode("\r\n\r\n", $v, 3); $header=http_parse_headers($x[0]); if ($header=[ $header=http_parse_headers($x[1]); $body=$x[2]; }else{ $body=$x[1]; }
__lb__lang-php $value = "concert"; $Enumvalue = EnumCategory::enum($value); class EnumCategory{ const concert = 1; const festival = 2; const sport = 3; const nightlife = 4; const theatre = 5; const musical = 6; const cinema = 7; const charity = 8; const museum = 9; const other = 10; public function enum($string){ return constant( } }
__lb__lang-cpp template <typename T = char> inline T* AlignUp(void* pointer, uintptr_t boundary_byte_count) { uintptr_t value = reinterpret_cast<uintptr_t>(pointer); value += (((~value) + 1) & (boundary_byte_count - 1)); return reinterpret_cast<T*>(value); } struct Foo { Foo () {} }; char buffer[sizeof (Foo) + 64]; Foo* foo = new (AlignUp<Foo> (buffer, 64)) Foo ();
__lb__lang-cpp auto local = make_zoned("Australia/Sydney", system_clock::now());
__lb__lang-c gcc -c a.c -o a.o gcc -c main.c -o main.o gcc -o main main.o a.o
__lb__lang-cpp class Pet { public: string name; }; class Dog : public Pet { public: string breed; }; int main() { Dog dog; Pet pet; dog.name = "Tommy"; dog.breed = "Kangal Dog"; pet = dog; cout << pet.breed;
__lb__lang-php $dbConnection = new PDO( $dbConnection->setAttribute(PDO::ATTR_EMULATE_PREPARES, false); $dbConnection->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
__lb__lang-java public static String zeroPad(long number, int width) { long wrapAt = (long)Math.pow(10, width); return String.valueOf(number % wrapAt + wrapAt).substring(1); }
__lb__lang-sh try { echo try { echo false echo } catch { echo "Nested Caught (@ $__EXCEPTION_LINE__)" } false echo } catch { echo "Error in $__EXCEPTION_SOURCE__ at line: $__EXCEPTION_LINE__!" }
__lb__lang-java Set<Integer> seen = Collections.synchronizedSet(new HashSet<>()); stream.parallel().map(e -> { if (seen.add(e)) return 0; else return e; })...
__lb__lang-hs do x <- [10, 20] y <- [3,5] return (x+y) [10,20] >>= \x -> [3,5] >>= \y -> return (x+y) ([10,20] >>=) $ \x -> ([3,5] >>=) $ \y -> return (x+y)
__lb__lang-cs char[] arr = str.Where(c => (char.IsLetterOrDigit(c) || char.IsWhiteSpace(c) || c == str = new string(arr);
__lb__lang-cpp int main() { static_cast<int&&>(7); std::move(7); return 0; }
__lb__lang-golang uint8 : 0 to 255 uint16 : 0 to 65535 uint32 : 0 to 4294967295 uint64 : 0 to 18446744073709551615 int8 : -128 to 127 int16 : -32768 to 32767 int32 : -2147483648 to 2147483647 int64 : -9223372036854775808 to 9223372036854775807
__lb__lang-golang import net package host, port, err := net.SplitHostPort("0.0.0.1:8080") if err != nil { fmt.Println("Error is splitting : "+err.error()); } fmt.Println(host, port)
__lb__lang-java class MyType<E> { List<String> getNames() { return Arrays.asList("John", "Mary"); } public static void main(String[] args) { MyType rawType = new MyType(); List<String> names = rawType.getNames(); for (String str : rawType.getNames()) System.out.print(str); } }
__lb__lang-cs using System.Net; ... using (var wb = new WebClient()) { var response = wb.DownloadString(url); }
__lb__lang-php <?php function endc($array) { return end($array); } $items = array( $lastItem = endc($items); $current = current($items); ?>
__lb__lang-sh [susam@cube ~]$ read a b c foo \bar baz \qux [susam@cube ~]$ echo a=$a b=$b c=$c a=foo b=bar c=baz qux [susam@cube ~]$ unset a b c [susam@cube ~]$ read_secret a b c [susam@cube ~]$ echo a=$a b=$b c=$c a=foo b=bar c=baz qux [susam@cube ~]$ unset a b c
__lb__lang-sh resolve_path() { # local owd="$PWD" local opath="$1" local npath="" local obase=$(basename "$opath") local odir=$(dirname "$opath") if [[ -L "$opath" ]] then cd $odir npath=$(readlink "$obase") if [[ -L $npath ]] then resolve_path "$npath" return $? elif [[ -f $npath ]] then nbase=$(basename $npath) npath=$(dirname $npath) cd "$npath" ndir=$(pwd -P) retval=0 elif [[ -d $npath ]] then cd "$npath" ndir=$(pwd -P) retval=0 else echo "$FUNCNAME: ERROR: unknown condition inside link!!" >&2 echo "opath [[ $opath ]]" >&2 echo "npath [[ $npath ]]" >&2 return 1 fi else if ! [[ -e "$opath" ]] then echo "$FUNCNAME: $opath: No such file or directory" >&2 return 1 elif [[ -d "$opath" ]] then cd "$opath" ndir=$(pwd -P) retval=0 elif [[ -f "$opath" ]] then cd $odir ndir=$(pwd -P) nbase=$(basename "$opath") retval=0 else echo "$FUNCNAME: ERROR: unknown condition outside link!!" >&2 echo "opath [[ $opath ]]" >&2 return 1 fi fi echo -n "$ndir" if [[ "x${nbase:=}" != "x" ]] then echo "/$nbase" else echo fi cd "$owd" return $retval }
__lb__lang-java public class MyDownloader extends AsyncTask<String,Void,Bitmap> { @Override protected void onPreExecute() { super.onPreExecute(); } @Override protected void onPostExecute(Bitmap bitmap) { super.onPostExecute(bitmap); } @Override protected Bitmap doInBackground(String... params) { return result; } @Override protected void onProgressUpdate(Void... values) { super.onProgressUpdate(values); } } }
__lb__lang-perl my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time); my $now = sprintf("%04d-%02d-%02d %02d:%02d:%02d", $year+1900, $mon+1, $mday, $hour, $min, $sec);
__lb__lang-golang Formatting control flags: -comments=true Print comments; if false, all comments are elided from the output. -tabs=true Indent with tabs; if false, spaces are used instead. -tabwidth=8 Tab width in spaces.
__lb__lang-cs decimal test = 5.00; test.ToString("0.00"); decimal? test2 = 5.05; test2.ToString("0.00"); decimal? test3 = 0; test3.ToString("0.00");
__lb__lang-java /** * @param smallLists * @return one big list containing all elements of the small ones, in the same order. */ public static <E> List<E> concatenate (final List<E> ... smallLists) { final ArrayList<E> bigList = new ArrayList<E>(); for (final List<E> list: smallLists) { bigList.addAll(list); } return bigList; }
__lb__lang-hs concat :: [[a]] -> [a] concat (x : xs) = x ++ concat xs concat [] = []
__lb__lang-java int[] spam = new int[] { 1, 2, 3 }; Arrays.asList(ArrayUtils.toObject(spam));
__lb__lang-c irb(main):101:0> div3 = -> n { s = => irb(main):102:0> div3[12] => 4 irb(main):103:0> div3[666] => 222
__lb__lang-perl use Scalar::Util qw(reftype); my $x = bless {}, my $y = { }; print "type of x: " . ref($x) . "\n"; print "type of y: " . ref($y) . "\n"; print "base type of x: " . reftype($x) . "\n"; print "base type of y: " . reftype($y) . "\n";
__lb__lang-sh -F, --fixed-strings Interpret PATTERN as a list of fixed strings, separated by newlines, any of which is to be matched. (-F is specified by POSIX.) -x, --line-regexp Select only those matches that exactly match the whole line. (-x is specified by POSIX.) -q, --quiet, --silent Quiet; do not write anything to standard output. Exit immediately with zero status if any match is found, even if an error was detected. Also see the -s or --no-messages option. (-q is specified by POSIX.)
__lb__lang-golang u := make([]byte, 16) _, err := rand.Read(u) if err != nil { return } u[8] = (u[8] | 0x80) & 0xBF u[6] = (u[6] | 0x40) & 0x4F return hex.EncodeToString(u)
__lb__lang-perl given is experimental at .\[...].pl line [...]. when is experimental at .\[...].pl line [...]. Smartmatch is experimental at C:/strawberry/perl/site/lib/[...] line [...].
__lb__lang-php function startsWith($haystack, $needle) { $length = strlen($needle); return (substr($haystack, 0, $length) === $needle); } function endsWith($haystack, $needle) { $length = strlen($needle); if ($length == 0) { return true; } return (substr($haystack, -$length) === $needle); }
__lb__lang-sh $ cd && touch a\ a && rm A 2>/dev/null $ fullpath "a a" /home/user/a a $ fullpath ~/a\ a /home/user/a a $ fullpath A A: No such file or directory.
__lb__lang-html <div class="box"> <span>margin:auto on a flex item centers it both horizontally and vertically</span> </div>
__lb__lang-php <?php $d=mktime(11, 14, 54, 8, 12, 2014); echo "Created date is " . date("Y-m-d h:i:sa", $d); ?>
__lb__lang-java void MyParameterizedFunction(String param1, int param2, bool param3=false) {}
__lb__lang-hs triaList = U.scanl (+) 0 (U.enumFrom 1 top) where top = 10^6
__lb__lang-cpp void f6(X*) {} void f7(X&) {} void f8(X* x_ptr, X& x_ref) { f6(x_ptr); f7(x_ref); }
__lb__lang-golang package main import ( "fmt" "sync" "time" ) func dosomething(millisecs time.Duration, wg *sync.WaitGroup) { duration := millisecs * time.Millisecond time.Sleep(duration) fmt.Println("Function in background, duration:", duration) wg.Done() } func main() { var wg sync.WaitGroup wg.Add(4) go dosomething(200, &wg) go dosomething(400, &wg) go dosomething(150, &wg) go dosomething(600, &wg) wg.Wait() fmt.Println("Done") }
__lb__lang-sh file="foo" if [[ -e "$file" ]]; then echo "File Exists"; fi;
__lb__lang-java public final class IntRandomNumberGenerator { private PrimitiveIterator.OfInt randomIterator; /** * Initialize a new random number generator that generates * random numbers in the range [min, max] * @param min - the min value (inclusive) * @param max - the max value (inclusive) */ public IntRandomNumberGenerator(int min, int max) { randomIterator = new Random().ints(min, max + 1).iterator(); } /** * Returns a random number in the range (min, max) * @return a random number in the range (min, max) */ public int nextInt() { return randomIterator.nextInt(); } }
__lb__lang-cs class B { protected virtual void Foo() { } } class A : B { public A() { Foo(); } }
__lb__lang-sh $ adb shell -s 7f1c864e error: more than one device and emulator
__lb__lang-sh ssh -T myuser@mydomain "cd /home/myuser/somedir; ./commandThatMustBeRunInside_somedir"
__lb__lang-java public static class JulesWinnfield extends Exception { JulesWinnfield() throws JulesWinnfield, VincentVega { throw new VincentVega(); } } public static class VincentVega extends Exception { VincentVega() throws JulesWinnfield, VincentVega { throw new JulesWinnfield(); } } public static void main(String[] args) throws VincentVega { try { throw new JulesWinnfield(); } catch(JulesWinnfield jw) { } catch(VincentVega vv) { } }
__lb__lang-java URLConnection connection = new URL(url + "?" + query).openConnection(); connection.setRequestProperty("Accept-Charset", charset); InputStream response = connection.getInputStream();
__lb__lang-html <script src="https: <div id="source"> I am source </div> <div id="destination"> I am destination </div> <button onclick="move();">Move</button>
__lb__lang-sh cd [dir_to_delete_svn_folders] find . -depth -name .svn -exec rm -fr {} \;
__lb__lang-php Route::get( return MyFuncs::full_name("John","Doe"); });
__lb__lang-sh bash-3.00$ myvar="TEST" bash-3.00$ is_set myvar ; echo $? 0 bash-3.00$ mavar="" bash-3.00$ is_set myvar ; echo $? 0 bash-3.00$ unset myvar bash-3.00$ is_set myvar ; echo $? 1
__lb__lang-java URL url= new URL("http: URI uri = new URI(url.getProtocol(), url.getUserInfo(), IDN.toASCII(url.getHost()), url.getPort(), url.getPath(), url.getQuery(), url.getRef()); String correctEncodedURL=uri.toASCIIString(); System.out.println(correctEncodedURL);
__lb__lang-java import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.util.stream.Collectors; public static String inputStreamToString(InputStream is) throws IOException { try (BufferedReader br = new BufferedReader(new InputStreamReader(is))) { return br.lines().collect(Collectors.joining(System.lineSeparator())); } }
__lb__lang-php $arr = array("blue", "green", "red", "yellow", "green", "orange", "yellow", "indigo", "red"); print_r($arr); $arr = array_diff($arr, array("yellow", "red")); print_r($arr);
__lb__lang-perl nohup restart.sh pidFileName yourScript.sh script args >script.out 2>&1 &
__lb__lang-java public class Randomizer { public static int generate(int min,int max) { return min + (int)(Math.random() * ((max - min) + 1)); } public static void main(String[] args) { System.out.println(Randomizer.generate(0,10)); } }
__lb__lang-php $EmptyTestArray = array_filter($ArrayOne); if (!empty($EmptyTestArray)) { } else { }
__lb__lang-cs MethodInfo method = typeof(Sample).GetMethod("GenericMethod"); MethodInfo generic = method.MakeGenericMethod(myType); generic.Invoke(this, null);
__lb__lang-php <?php echo dateDiff("2018-01-01","2018-12-31"); $firstDate = "2018-01-01"; $secondDate = "2018-01-01"; echo dateDiff($firstDate,$secondDate); ?>
__lb__lang-java wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http:
__lb__lang-c void main (void) { double x = 1e-13; double y = 0.0; double K = 1e22; int i = 0; for (; i < 32; i++, K = K/10.0) { printf ("K:%40.16lf -> ", K); if (fabs(x-y) < K * DBL_EPSILON * fabs(x+y) || fabs(x-y) < DBL_MIN) printf ("YES\n"); else printf ("NO\n"); } } ebg@ebg$ gcc -o test test.c ebg@ebg$ ./test
__lb__lang-css @media screen and (max-width: 995px OR max-height: 700px) { ... }
__lb__lang-css tr.d0 td { background-color: color: black; } tr.d1 td { background-color: color: black; }
__lb__lang-java java.io.FileNotFoundException: / (Is a directory) at java.io.FileOutputStream.open0(Native Method) at java.io.FileOutputStream.open(FileOutputStream.java:270) at java.io.FileOutputStream.<init>(FileOutputStream.java:213) at java.io.FileOutputStream.<init>(FileOutputStream.java:101) at Test.main(Test.java:9)
__lb__lang-css .not-selectable { -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; }
__lb__lang-java package main_package; import java.util.ArrayList; public class Stackkkk { public static void main(String[] args) { ArrayList<Object> list = new ArrayList<Object>(); add(list, "1", "2", "3", "4", "5", "6"); System.out.println("I added " + list.size() + " element in one line"); } public static void add(ArrayList<Object> list,Object...objects){ for(Object object:objects) list.add(object); } }
__lb__lang-cpp class Matrix { ... size_t index( int x, int y ) const { return x + m_width * y; } };
__lb__lang-sh [ $(git rev-parse HEAD) = $(git ls-remote $(git rev-parse --abbrev-ref @{u} | \ sed
__lb__lang-cs var results = from p in persons group p by p.PersonID into g select new { PersonID = g.Key, /**/car = g.Select(g=>g.car).FirstOrDefault()/**/}
__lb__lang-hs para psi = snd . cata (\ fxt -> (In (fmap fst fxt), psi fxt))
__lb__lang-php const FOOBAR = const FORTY_TWO = 6 * 9; const ULTIMATE_ANSWER =
__lb__lang-php $first_string = "aabo"; $second_string = "aaao"; echo $n = strcmp($first_string,$second_string);
__lb__lang-cs public static object GetNewObject(Type t) { try { return t.GetConstructor(new Type[] { }).Invoke(new object[] { }); } catch { return null; } }
__lb__lang-java @Rule public ExpectedException exceptions = ExpectedException.none();
__lb__lang-php $arr = [ "name" => [ "type" => "string", "maxlength" => "30", ], "email" => [ "type" => "email", "maxlength" => "150", ], ]; array_insert( $arr, "email", [ "phone" => [ "type" => "string", "format" => "phone", ], ] ); array ( array ( ), array ( ), array ( ), )
__lb__lang-php $greeting = "Hello, ".exst($user_name, /** * Function exst() - Checks if the variable has been set * (copy/paste it in any place of your code) * * If the variable is set and not empty returns the variable (no transformation) * If the variable is not set or empty, returns the $default value * * @param mixed $var * @param mixed $default * * @return mixed */ function exst( & $var, $default = "") { $t = ""; if ( !isset($var) || !$var ) { if (isset($default) && $default != "") $t = $default; } else { $t = $var; } if (is_string($t)) $t = trim($t); return $t; }
__lb__lang-hs (&) :: a -> (a -> b) -> b (&) = flip ($) infixl 0 &
__lb__lang-html <div id="container"> <!-- Other elements here --> <div id="copyright"> Copyright Foo web designs </div> </div>
__lb__lang-cs public static bool Contains(this string source, string toCheck, StringComparison comp) { if (string.IsNullOrEmpty(toCheck) || string.IsNullOrEmpty(source)) return true; return source.IndexOf(toCheck, comp) >= 0; }
__lb__lang-java Files.lines(Paths.get("text.txt")).collect(Collectors.toList());
__lb__lang-java public class Test{ public static void main(String[] args){ long startTime = System.currentTimeMillis(); StringBuffer sb = new StringBuffer("Yasir"); for (int i=0; i<10000; i++){ sb.append("Shabbir"); } System.out.println("Time taken by StringBuffer: " + (System.currentTimeMillis() - startTime) + "ms"); startTime = System.currentTimeMillis(); StringBuilder sb2 = new StringBuilder("Yasir"); for (int i=0; i<10000; i++){ sb2.append("Shabbir"); } System.out.println("Time taken by StringBuilder: " + (System.currentTimeMillis() - startTime) + "ms"); } }
__lb__lang-java String fromFile = new BufferedReader(new InputStreamReader(inputStream)).lines().reduce(String::concat).get();
__lb__lang-golang ctx, cncl := context.WithTimeout(context.Background(), time.Second*3) defer cncl() req, _ := http.NewRequest(http.MethodGet, "https: resp, _ := http.DefaultClient.Do(req.WithContext(ctx))
__lb__lang-hs data CommandIxMonad :: (state -> state -> * -> *) -> state -> state -> * -> * where CReturn :: a -> CommandIxMonad c i i a (:?) :: c i j a -> (a -> CommandIxMonad c j k b) -> CommandIxMonad c i k b instance IxMonad (CommandIxMonad c) where ireturn = CReturn ibind (CReturn a) k = k a ibind (c :? j) k = c :? \ a -> ibind (j a) k
__lb__lang-java public static void main(String[] args) { Random rdm; long start; rdm = new Random(0); start = System.nanoTime(); for(int i = 10000000; i != 0; i--){ lPadZero(rdm.nextInt(20000) - 10000, 4); } System.out.println("Own function: " + ((System.nanoTime() - start) / 1000000) + "ms"); rdm = new Random(0); start = System.nanoTime(); for(int i = 10000000; i != 0; i--){ String.format("%04d", rdm.nextInt(20000) - 10000); } System.out.println("String.format: " + ((System.nanoTime() - start) / 1000000) + "ms"); }
__lb__lang-hs λ: let addTwo :: Int -> Int -> Int | addTwo x y = x + y | λ: addTwo 1 2 3
__lb__lang-golang switch v := myInterface.(type) { case int: fmt.Printf("Integer: %v", v) case float64: fmt.Printf("Float64: %v", v) case string: fmt.Printf("String: %v", v) default: fmt.Printf("I don }
__lb__lang-cs public enum FooEnum { [Description("Not Applicable")] NotApplicable, Applicable }
__lb__lang-hs split :: Eq a => a -> [a] -> [[a]] split x y = func x y [[]] where func x [] z = reverse $ map (reverse) z func x (y:ys) (z:zs) = if y==x then func x ys ([]:(z:zs)) else func x ys ((y:z):zs)
__lb__lang-html <script src="https: <a class="cancel-action">Cancel this action</a>
__lb__lang-java import java.io.BufferedReader; import java.io.File; import java.io.FileReader; import java.io.IOException; public class ReadTextFile { public static void main(String[] args) throws IOException { try { File f = new File("src/com/data.txt"); BufferedReader b = new BufferedReader(new FileReader(f)); String readLine = ""; System.out.println("Reading file using Buffered Reader"); while ((readLine = b.readLine()) != null) { System.out.println(readLine); } } catch (IOException e) { e.printStackTrace(); } } }
__lb__lang-cs using System; class Sample { public static void Main() { Console.WriteLine(); Console.WriteLine("UserName: {0}", Environment.UserName); } }
__lb__lang-php function objetToArray($adminBar){ $reflector = new ReflectionObject($adminBar); $nodes = $reflector->getProperties(); $out=[]; foreach ($nodes as $node) { $nod=$reflector->getProperty($node->getName()); $nod->setAccessible(true); $out[$node->getName()]=$nod->getValue($adminBar); } return $out; }
__lb__lang-java output : output student : Student [id=10, name=Anand]
__lb__lang-cs class FootballTeam : ... ICollection<Player>, ICollection<StaffMember>, ICollection<Score> { .... }
__lb__lang-php **Symbol, Year, Author/Owner and Rights statement.**
__lb__lang-java ArrayList<String> list = new ArrayList<String>() {{ add("A"); add("B"); add("C"); }};
__lb__lang-java root@tecadmin ~ java version "1.8.0_51" Java(TM) SE Runtime Environment (build 1.8.0_51-b16) Java HotSpot(TM) 64-Bit Server VM (build 25.51-b03, mixed mode)
__lb__lang-golang func testEq(a, b []Type) bool { if (a == nil) != (b == nil) { return false; } if len(a) != len(b) { return false } for i := range a { if a[i] != b[i] { return false } } return true }
__lb__lang-php function sizeIsAvailable ($productId, ShirtSize $size) { } if(sizeIsAvailable($_GET["id"], ShirtSize::LARGE())) { echo "Available"; } else { echo "Out of stock."; } $s2 = ShirtSize::SMALL(); $s3 = ShirtSize::MEDIUM(); echo $s2->equals($s3) ? "SMALL == MEDIUM" : "SMALL != MEDIUM";
__lb__lang-cs public void CopyFolder(string source, string destination) { string xcopyPath = Environment.GetEnvironmentVariable("WINDIR") + @"\System32\xcopy.exe"; ProcessStartInfo info = new ProcessStartInfo(xcopyPath); info.UseShellExecute = false; info.RedirectStandardOutput = true; info.Arguments = string.Format("\"{0}\" \"{1}\" /E /I", source, destination); Process process = Process.Start(info); process.WaitForExit(); string result = process.StandardOutput.ReadToEnd(); if (process.ExitCode != 0) { throw new InvalidOperationException(string.Format("Failed to copy {0} to {1}: {2}", source, destination, result)); } }
__lb__lang-golang func Exists(name string) bool { if _, err := os.Stat(name); err != nil { if os.IsNotExist(err) { return false } } return true }
__lb__lang-java URL myURL = getClass().getProtectionDomain().getCodeSource().getLocation(); java.net.URI myURI = null; try { myURI = myURL.toURI(); } catch (URISyntaxException e1) {} return java.nio.file.Paths.get(myURI).toFile().toString()
__lb__lang-html <div> <div style="float: left;">Div 1</div> <div style="float: left;">Div 2</div> <div class="spacer" style="clear: both;"></div> </div>
__lb__lang-css .flex-container { display: flex; justify-content: space-between; flex-wrap: wrap; } .flex-container:after { content: ""; } .flex-container > div, .flex-container:after { box-sizing: border-box; width: calc((100%/3) - ((1em/3)*2)); } .flex-container > :nth-child(n + 4) { margin-top: 1em; } .flex-container > div, .flex-container:after { font-size: 2em; } .flex-container { margin-bottom:4em; } .flex-container > div { text-align: center; background-color: padding: 1em; } .flex-container:after { border: 1px dashed red; }
__lb__lang-html <div class="field_with_errors">Label:</div> <div class="field_with_errors"> <input type="text" /><span></span> </div>
__lb__lang-sh source=$1 target=$2 common_part=$source result="" while [[ "${target common_part="$(dirname $common_part)" if [[ -z $result ]]; then result=".." else result="../$result" fi done if [[ $common_part == "/" ]]; then result="$result/" fi forward_part="${target if [[ -n $result ]] && [[ -n $forward_part ]]; then result="$result$forward_part" elif [[ -n $forward_part ]]; then result="${forward_part:1}" fi echo $result
__lb__lang-cs public static Stream ToStream(this string value) => ToStream(value, Encoding.UTF8); public static Stream ToStream(this string value, Encoding encoding) => new MemoryStream(encoding.GetBytes(value ?? string.Empty));
__lb__lang-html <div class="box"> Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh </div>
__lb__lang-java for (Iterator<String> i = someIterable.iterator(); i.hasNext();) { String item = i.next(); System.out.println(item); }
__lb__lang-cpp string myArray[] = { "Example1", "Example2", "Example3", "Example4" }; int size_of_array=size(myArray);
__lb__lang-cs static void ThreadMethod() { while(!autoResetEvent.WaitOne(TimeSpan.FromSeconds(2))) { Console.WriteLine("Continue"); Thread.Sleep(TimeSpan.FromSeconds(1)); } Console.WriteLine("Thread got signal"); }
__lb__lang-hs > (square (square 2)) * (square (square 2)) > ((square 2) * (square 2)) * ((square 2) * (square 2)) > ((2 * 2) * (2 * 2)) * ((2 * 2) * (2 * 2)) > (4 * 4) * (4 * 4) > 16 * 16 > 256
__lb__lang-hs {- foo :: FooType a => a foo = bar (return ()) class FooType a where bar :: IO () -> a instance FooType (IO ()) where bar = id instance (Show x, FooType r) => FooType (x -> r) where bar s x = bar (s >> print x)
__lb__lang-cpp std::vector<string> Tokenize( const string str, const std::regex regex ) { using namespace std; std::vector<string> result; sregex_token_iterator it( str.begin(), str.end(), regex, -1 ); sregex_token_iterator reg_end; for ( ; it != reg_end; ++it ) { if ( !it->str().empty() ) result.emplace_back( it->str() ); } return result; }
__lb__lang-java Path sampleOutputPath = Paths.get("/tmp/testfile") try (BufferedWriter writer = Files.newBufferedWriter(sampleOutputPath)) { writer.write("Hello, world!"); }
__lb__lang-cpp const int min_int = INT_MIN; const int max_int = INT_MAX;
__lb__lang-java @Override public void OnCardClicked(View view, int position) { Log.d("OnClick", "Card Position" + position); }
__lb__lang-java Gson g = new Gson(); Person person = g.fromJson("{\"name\": \"John\"}", Person.class); System.out.println(person.name); System.out.println(g.toJson(person));
__lb__lang-php [CONTRIBUTED BY] => too much php [OOO.OOO.OOO.S] => B.OOO.OOO.S [AVERAGE TIME] => 0.0000073902 [SLOWER BY] => 17.52%
__lb__lang-sh KEY=bitbucket.org/lsheehan git-clone git@bitbucket.org:dave_andersen/exchange.git
__lb__lang-java public static final void main(final String[] args) { final my m1 = new my() { }; final my m2 = new my() { }; System.out.println(m1 == m2); System.out.println(m1.getClass().toString()); System.out.println(m2.getClass().toString()); }
__lb__lang-php <?php /** * @Entity */ class myEntity { /** * @var string * * @ORM\Column(name="myColumn", type="integer", options={"default" : 0}) */ private $myColumn; ... }
__lb__lang-cpp class ResHeavy{ public: ResHeavy(int len=10):_upInt(new int[len]),_len(len){ cout<<"default ctor"<<endl; } ResHeavy(const ResHeavy& rhs):_upInt(new int[rhs._len]),_len(rhs._len){ cout<<"copy ctor"<<endl; } ResHeavy& operator=(const ResHeavy& rhs){ _upInt.reset(new int[rhs._len]); _len = rhs._len; cout<<"operator= ctor"<<endl; } ResHeavy(ResHeavy&& rhs){ _upInt = std::move(rhs._upInt); _len = rhs._len; rhs._len = 0; cout<<"move ctor"<<endl; } bool is_up_valid(){ return _upInt != nullptr; } private: std::unique_ptr<int[]> _upInt; int _len; };
__lb__lang-php $str = $pos = strpos($str, $str = substr_replace($str,
__lb__lang-cs public static RouteValueDictionary GetInfo<T>(this HtmlHelper html, Expression<Func<T, object>> action) where T : class { var name = action.GetMemberName(); return GetInfo(html, name); }
__lb__lang-php php_flag display_errors on php_value error_reporting 2039
__lb__lang-java public final static boolean isPerfectSquareDurronTwo(long n) { if(n < 0) return false; if(n == 0) return true; long x = n; while((x & 0x3) == 0) x >>= 2; if((x & 0x7) == 1) { long sqrt; if (x < 41529141369L) { int i; float x2, y; x2 = x * 0.5F; y = x; i = Float.floatToRawIntBits(y); i = 0x5f375a86 - (i >> 1); y = Float.intBitsToFloat(i); y = y * (1.5F - (x2 * y * y)); y = y * (1.5F - (x2 * y * y)); sqrt = (long) ((1.0F/y) + 0.2); } else { sqrt = (long) Math.sqrt(x); } return sqrt*sqrt == x; } return false; }
__lb__lang-sh > word=$(cat $sposi | cut -d " " -f 2) > new_word="filone"
__lb__lang-sh mapfile -t -s $((42-1)) -n $((666-42+1)) ary < file printf
__lb__lang-java public static String md5( String input ) { try { java.security.MessageDigest md = java.security.MessageDigest.getInstance("MD5"); byte[] array = md.digest(input.getBytes( "UTF-8" )); StringBuffer sb = new StringBuffer(); for (int i = 0; i < array.length; i++) { sb.append( String.format( "%02x", array[i])); } return sb.toString(); } catch ( NoSuchAlgorithmException | UnsupportedEncodingException e) { return null; } }
__lb__lang-golang func OSReadDir(root string) ([]string, error) { var files []string f, err := os.Open(root) if err != nil { return files, err } fileInfo, err := f.Readdir(-1) f.Close() if err != nil { return files, err } for _, file := range fileInfo { files = append(files, file.Name()) } return files, nil }
__lb__lang-sh echo $ 0000000: 2855 2b32 3632 3029 20e2 98a0 0a (U+2620) .... That means that the UTF8 encoding is: e2 98 a0
__lb__lang-java /** * See {@link <a href="http: */ public static final String ACCEPT = "Accept"; /** * See {@link <a href="http: */ public static final String ACCEPT_CHARSET = "Accept-Charset";
__lb__lang-cs using System; using System.Windows.Forms; using System.Threading; namespace Test { public partial class UIThread : Form { Worker worker; Thread workerThread; public UIThread() { InitializeComponent(); worker = new Worker(); worker.ProgressChanged += new EventHandler<ProgressChangedArgs>(OnWorkerProgressChanged); workerThread = new Thread(new ThreadStart(worker.StartWork)); workerThread.Start(); } private void OnWorkerProgressChanged(object sender, ProgressChangedArgs e) { if (this.InvokeRequired) { this.BeginInvoke((MethodInvoker)delegate { OnWorkerProgressChanged(sender, e); }); return; } this.label1.Text = e.Progress; } } public class Worker { public event EventHandler<ProgressChangedArgs> ProgressChanged; protected void OnProgressChanged(ProgressChangedArgs e) { if(ProgressChanged!=null) { ProgressChanged(this,e); } } public void StartWork() { Thread.Sleep(100); OnProgressChanged(new ProgressChangedArgs("Progress Changed")); Thread.Sleep(100); } } public class ProgressChangedArgs : EventArgs { public string Progress {get;private set;} public ProgressChangedArgs(string progress) { Progress = progress; } } }
__lb__lang-cs var ds1 = (null as DataSet).Create(); DataSet ds2 = null; ds2 = ds2.Create(); (null as Console).WriteBlueLine(...);
__lb__lang-java boolean atLeastTwo(boolean a, boolean b, boolean c) { return a && (b || c) || (b && c); }
__lb__lang-java public byte[] read(File file) throws IOException, FileTooBigException { if (file.length() > MAX_FILE_SIZE) { throw new FileTooBigException(file); } byte[] buffer = new byte[(int) file.length()]; InputStream ios = null; try { ios = new FileInputStream(file); if (ios.read(buffer) == -1) { throw new IOException( "EOF reached while trying to read the whole file"); } } finally { try { if (ios != null) ios.close(); } catch (IOException e) { } } return buffer; }
__lb__lang-cs "123".IsParseableAs<double>() ? double.Parse(sNumber) : 0;
__lb__lang-html <body> <div id="slideshowWrapper"> <ul id="slideshow"> <li><img src="http: <li><img src="http: <li><img src="http: </ul> </div> </body>
__lb__lang-c extern int UIApplicationMain(int, ...); int main(int argc, char *argv[]) { id autoreleasePool = objc_msgSend(objc_msgSend(objc_getClass("NSAutoreleasePool"), sel_registerName("alloc")), sel_registerName("init")); UIApplicationMain(argc, argv, nil, CFSTR("AppDelegate")); objc_msgSend(autoreleasePool, sel_registerName("drain")); }
__lb__lang-html <p>Make sure to sign up <em>before</em> the day of the event, September 16, 2016</p>
__lb__lang-java public class Foo { private static final Foo INSTANCE = new Foo(); private Foo() { if (INSTANCE != null) { throw new IllegalStateException("Already instantiated"); } } public static Foo getInstance() { return INSTANCE; } }
__lb__lang-cs using FooConsole = System.Console; public static class Console { public static void WriteBlueLine(string text) { FooConsole.ForegroundColor = ConsoleColor.Blue; FooConsole.WriteLine(text); FooConsole.ResetColor(); } }
__lb__lang-php $script_exec = "c:/php/php.exe c:/path/my_ascyn_script.php"; pclose(popen("start /B ". $script_exec, "r"));
__lb__lang-php /** * takes an object parameter and returns the pretty json format. * this is a space saving version that uses 2 spaces instead of the regular 4 * * @param $in * * @return string */ function pretty_json ($in): string { return preg_replace_callback( function (array $matches): string { return str_repeat( }, json_encode($in, JSON_PRETTY_PRINT | JSON_HEX_APOS) ); } /** * takes a JSON string an adds colours to the keys/values * if the string is not JSON then it is returned unaltered. * * @param string $in * * @return string */ function markup_json (string $in): string { $string = $number = $null = $key = $pattern = return preg_replace_callback($pattern, function (array $matches) use ($string, $number, $null, $key): string { $match = $matches[0]; $colour = $number; if (preg_match( { $colour = preg_match( ? $key : $string; } elseif ($match === { $colour = $null; } return "<span style= }, str_replace([ ) ?? $in; } public function test_pretty_json_object () { $ob = new \stdClass(); $ob->test = $json = pretty_json($ob); $expected = <<<JSON { "test": "unit-tester" } JSON; $this->assertEquals($expected, $json); } public function test_pretty_json_str () { $ob = $json = pretty_json($ob); $this->assertEquals("\"$ob\"", $json); } public function test_markup_json () { $json = <<<JSON [{"name":"abc","id":123,"warnings":[],"errors":null},{"name":"abc"}] JSON; $expected = <<<STR [ { <span style= <span style= <span style= <span style= }, { <span style= } ] STR; $output = markup_json(pretty_json(json_decode($json))); $this->assertEquals($expected,$output); }
__lb__lang-java List<String> persons = new ArrayList<String>(){{add("a"); add("b"); add("c");}}; Stream<String> stream = persons.stream();
__lb__lang-golang git commit git checkout enhancement git cherry-pick <<commit_id>>
__lb__lang-cs public static T ParseEnum<T>(string value, T defaultValue) where T : struct { try { T enumValue; if (!Enum.TryParse(value, true, out enumValue)) { return defaultValue; } return enumValue; } catch (Exception) { return defaultValue; } }
__lb__lang-cs public class HomeController : Controller { public ActionResult Index() { return View(); } [HttpPost] public ActionResult Index(HttpPostedFileBase file) { if (file != null && file.ContentLength > 0) { var fileName = Path.GetFileName(file.FileName); var path = Path.Combine(Server.MapPath("~/App_Data/uploads"), fileName); file.SaveAs(path); } return RedirectToAction("Index"); } }
__lb__lang-c ui8 = 5; | movb $0x5,-0x45(%rbp) i = 5; | movl $0x5,-0x3c(%rbp) ui32 = 5; | movl $0x5,-0x38(%rbp) ui64 = 5; | movq $0x5,-0x10(%rbp) doub = 5; | movsd 0x328(%rip),%xmm0 movsd %xmm0,-0x8(%rbp)
__lb__lang-perl sub f { return 11 } $action = print $action->(); $ perl subfromscalar.pl 11
__lb__lang-sh oneTimeSetUp() { int_values="0 123 -0 -123" float_values="0.0 0. .0 -0.0 -0. -.0 \ 123.456 123. .456 -123.456 -123. -.456 123.456E08 123.E08 .456E08 -123.456E08 -123.E08 -.456E08 \ 123.456E+08 123.E+08 .456E+08 -123.456E+08 -123.E+08 -.456E+08 \ 123.456E-08 123.E-08 .456E-08 -123.456E-08 -123.E-08 -.456E-08" } testIsIntegerIsFloat() { local value for value in ${int_values} do assertTrue "${value} should be tested as integer" "isInteger ${value}" assertFalse "${value} should not be tested as float" "isFloat ${value}" done for value in ${float_values} do assertTrue "${value} should be tested as float" "isFloat ${value}" assertFalse "${value} should not be tested as integer" "isInteger ${value}" done }
__lb__lang-html <p><b class="lead">The event takes place this upcoming Saturday, and over 3,000 people have already registered.</b></p>
__lb__lang-java @SafeVarargs public static <T> T[] toGenericArray(T ... elems) { return elems; }
__lb__lang-java File fff = new File("/path/to/file"); FileInputStream fileInputStream = new FileInputStream(fff); long byteLength = fff.length(); byte[] filecontent = new byte[(int) byteLength]; fileInputStream.read(filecontent, 0, (int) byteLength);
__lb__lang-perl foreach my $i ( 0.5, 1.5, 2.5, 3.5 ) { printf "$i -> %.0f\n", $i; } __END__ 0.5 -> 0 1.5 -> 2 2.5 -> 2 3.5 -> 4
__lb__lang-hs data Term = Apply Term Term | Lambda String Term | Var Term deriving (Show)
__lb__lang-golang import ( "bytes" "encoding/json" "log" "net/http" ) func HandleCSPViolationRequest(w http.ResponseWriter, req *http.Request) { body := App.MustReadBody(req, w) if body == nil { return } var prettyJSON bytes.Buffer error := json.Indent(&prettyJSON, body, "", "\t") if error != nil { log.Println("JSON parse error: ", error) App.BadRequest(w) return } log.Println("CSP Violation:", string(prettyJSON.Bytes())) }
__lb__lang-perl if (index(lc($str), lc($substr)) != -1) { print "$str contains $substr\n"; }
__lb__lang-cs public Stream GenerateStreamFromString(string s) { return new MemoryStream(Encoding.UTF8.GetBytes(s)); }
__lb__lang-cpp int ival = 1024, ival2 = 2048; int *pi = &ival, *pi2 = &ival2; pi = pi2;
__lb__lang-cs public static string possibleChars = "abcdefghijklmnopqrstuvwxyz"; public static char[] possibleCharsArray = possibleChars.ToCharArray(); public static int possibleCharsAvailable = possibleChars.Length; public static Random random = new Random(); public string LinqIsTheNewBlack(int num) { return new string( Enumerable.Repeat(possibleCharsArray, num) .Select(s => s[random.Next(s.Length)]) .ToArray()); } public string ForLoop(int num) { var result = new char[num]; while(num-- > 0) { result[num] = possibleCharsArray[random.Next(possibleCharsAvailable)]; } return new string(result); } public string ForLoopNonOptimized(int num) { var result = new char[num]; while(num-- > 0) { result[num] = possibleChars[random.Next(possibleChars.Length)]; } return new string(result); } public string Repeat(int num) { return new string(new char[num].Select(o => possibleCharsArray[random.Next(possibleCharsAvailable)]).ToArray()); } public string GenerateRandomString(int num) { var rBytes = new byte[num]; random.NextBytes(rBytes); var rName = new char[num]; while(num-- > 0) rName[num] = possibleCharsArray[rBytes[num] % possibleCharsAvailable]; return new string(rName); } static string GenerateRandomString(int Length) { byte[] rBytes = new byte[Length]; char[] rName = new char[Length]; SolidSwiftRandom.GetNextBytesWithMax(rBytes, biasZone); for (var i = 0; i < Length; i++) { rName[i] = charSet[rBytes[i] % charSet.Length]; } return new string(rName); }
__lb__lang-php $last_key = key( array_slice( $array, -1, 1, TRUE ) );
__lb__lang-cs var lname = thingy.NullOr(t => t.Name).NullOr(n => n.ToLower());
__lb__lang-golang func searchFiles(dir string) { files, err := ioutil.ReadDir(dir) if err != nil { log.Fatal(err) } for _, file := range files { fmt.Println(file.Name()) } }
__lb__lang-c void board_init(); void noprintf(const char *c, ...); void (* zprintf)(const char*, ...);
__lb__lang-c static inline void sort6_sorting_network_simple_swap(int * d){ const int b = max(d[x], d[y]); \ d[x] = a; d[y] = b; } SWAP(1, 2); SWAP(4, 5); SWAP(0, 2); SWAP(3, 5); SWAP(0, 1); SWAP(3, 4); SWAP(1, 4); SWAP(0, 3); SWAP(2, 5); SWAP(1, 3); SWAP(2, 4); SWAP(2, 3); }
__lb__lang-php $array = array( echo end($array); $array1 = array( echo end($array1);
__lb__lang-cs private void ClearDirectory(string path) { if (Directory.Exists(path)) { Directory.Delete(path, true); } Directory.CreateDirectory(path); }
__lb__lang-sh find $FOLDER -type f | cut -d/ -f2- | sort > /tmp/file_list_$FOLDER
__lb__lang-java myProducts.stream().filter(prod -> prod.price>10).collect(Collectors.toList())
__lb__lang-java public myParameterizedFunction(String param1, int param2, Boolean param3) { param3 = param3 == null ? false : param3; } public myParameterizedFunction(String param1, int param2) { this(param1, param2, false); }
__lb__lang-html <script src="https: <p>Single Characters:</p> <span class="halfStyle" data-content="X">X</span> <span class="halfStyle" data-content="Y">Y</span> <span class="halfStyle" data-content="Z">Z</span> <span class="halfStyle" data-content="A">A</span> <hr/> <p>Automated:</p> <span class="textToHalfStyle">Half-style, please.</span>
__lb__lang-css @media screen and (orientation: landscape) { img.ri { max-height: 80%; } }
__lb__lang-golang package main import "github.com/goerr/goerr" import "fmt" func ok(err error) { if err != nil { goerr.Return(err) } } func sequence() error { ok(do_something1()) ok(do_something2()) ok(do_something3()) return nil } func do_something1() error { return nil } func do_something2() error { return fmt.Errorf("2") } func do_something3() error { fmt.Println("DOING 3") return nil } func main() { err_do_something := goerr.OR1(sequence) fmt.Println(err_do_something) }
__lb__lang-hs foldr k z = go where go [] = z go (y:ys) = y `k` go ys
__lb__lang-cpp 0.1f: 0.564067 0 : 26.7669 0.1f: 0.587117 0 : 0.341406
__lb__lang-cpp std::string& trim_left_in_place(std::string& str) { size_t i = 0; while(i < str.size() && isspace(str[i])) { ++i; }; return str.erase(0, i); } std::string& trim_right_in_place(std::string& str) { size_t i = str.size(); while(i > 0 && isspace(str[i - 1])) { --i; }; return str.erase(i, str.size()); } std::string& trim_in_place(std::string& str) { return trim_left_in_place(trim_right_in_place(str)); } std::string trim_right(std::string str) { return trim_right_in_place(str); } std::string trim_left(std::string str) { return trim_left_in_place(str); } std::string trim(std::string str) { return trim_left_in_place(trim_right_in_place(str)); } int main() { std::string s1(" \t\r\n "); std::string s2(" \r\nc"); std::string s3("c \t"); std::string s4(" \rc "); assert(trim(s1) == ""); assert(trim(s2) == "c"); assert(trim(s3) == "c"); assert(trim(s4) == "c"); assert(s1 == " \t\r\n "); assert(s2 == " \r\nc"); assert(s3 == "c \t"); assert(s4 == " \rc "); assert(trim_in_place(s1) == ""); assert(trim_in_place(s2) == "c"); assert(trim_in_place(s3) == "c"); assert(trim_in_place(s4) == "c"); assert(s1 == ""); assert(s2 == "c"); assert(s3 == "c"); assert(s4 == "c"); }
__lb__lang-perl if OS returns: then Perl returns: -1 undefined value 0 string "0 but true" anything else that number
__lb__lang-css div { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); -ms-transform: translate(-50%, -50%); -webkit-transform: translate(-50%, -50%); }
__lb__lang-cs internal static class RandomNumber { private static Random r = new Random(); private static object l = new object(); private static Random globalRandom = new Random(); [ThreadStatic] private static Random localRandom; public static int GenerateNewRandom(int min, int max) { return new Random().Next(min, max); } public static int GenerateLockedRandom(int min, int max) { int result; lock (RandomNumber.l) { result = RandomNumber.r.Next(min, max); } return result; } public static int GenerateRandom(int min, int max) { Random random = RandomNumber.localRandom; if (random == null) { int seed; lock (RandomNumber.globalRandom) { seed = RandomNumber.globalRandom.Next(); } random = (RandomNumber.localRandom = new Random(seed)); } return random.Next(min, max); } }
__lb__lang-golang + myproject ++ src +++ myproject +++ github.com ++++ submoduled_project of some kind.
__lb__lang-cpp class MultiplyBy { private: int factor; public: MultiplyBy(int x) : factor(x) { } int operator () (int other) const { return factor * other; } };
__lb__lang-cpp 0x400e50: popcnt (%r15,%rcx,8),%rdx add %rbx,%rdx popcnt 0x8(%r15,%rcx,8),%rsi add %rdx,%rsi popcnt 0x10(%r15,%rcx,8),%rdx add %rsi,%rdx popcnt 0x18(%r15,%rcx,8),%rbx add %rdx,%rbx add $0x4,%rcx cmp %rbp,%rcx jb 0x400e50
__lb__lang-cs public interface IEmployee { public decimal Salary { get; set; } } public class Employee { public decimal Salary { get; set; } } public extension MyPersonExtension extends Person : IEmployee { private static readonly ConditionalWeakTable<Person, Employee> _employees = new ConditionalWeakTable<Person, Employee>(); public decimal Salary { get { return _employees.GetOrCreate(this).Salary; } set { Employee employee = null; if (!_employees.TryGetValue(this, out employee) { employee = _employees.GetOrCreate(this); } employee.Salary = value; } } } IEmployee person = new Person(); var salary = person.Salary;
__lb__lang-golang ubuntu@ip-xxx-x-xx-x:~$ go env GOARCH="amd64" GOBIN="" GOCHAR="6" GOEXE="" GOHOSTARCH="amd64" GOHOSTOS="linux" GOOS="linux" GOPATH="" GORACE="" GOROOT="/usr/lib/go" GOTOOLDIR="/usr/lib/go/pkg/tool/linux_amd64" CC="gcc" GOGCCFLAGS="-g -O2 -fPIC -m64 -pthread" CGO_ENABLED="1"
__lb__lang-cpp int **ary = new int*[sizeY]; for(int i = 0; i < sizeY; ++i) { ary[i] = new int[sizeX]; }
__lb__lang-cs var comparer = new InlineComparer<DetalleLog>((i1, i2) => i1.PeticionEV == i2.PeticionEV && i1.Etiqueta == i2.Etiqueta, i => i.PeticionEV.GetHashCode() + i.Etiqueta.GetHashCode()); var peticionesEV = listaLogs.Distinct(comparer).ToList(); Assert.IsNotNull(peticionesEV); Assert.AreNotEqual(0, peticionesEV.Count);
__lb__lang-cpp string toString(int n) { stringstream ss(n); ss << n; return ss.str(); } int main() { int n; cin>>n; cout<<toString(n)<<endl; return 0; }
__lb__lang-cs public static class IntUtil { private static Random random; private static void Init() { if (random == null) random = new Random(); } public static int Random(int min, int max) { Init(); return random.Next(min, max); } }
__lb__lang-sh for x in "${fields[@]}";do echo "> [$x]" done > [bla@some.com] > [john@home.com] > [Full Name <fulnam@other.org>]
__lb__lang-sh START=$(date +%s) ls -R /etc > /tmp/x rm -f /tmp/x END=$(date +%s) DIFF=$(( $END - $START )) echo "It took $DIFF seconds"
__lb__lang-java try { BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(filePath), "Cp1252")); String line; while ((line = br.readLine()) != null) { } br.close(); } catch (IOException e) { e.printStackTrace(); }
__lb__lang-cs string sortTypeStr = "ASC"; string SortColumnName = "Age"; query = query.OrderBy($"{SortColumnName} {sortTypeStr}");
__lb__lang-hs instance Functor (Cont r) where fmap f (Cont c) = Cont $ \k -> ...
__lb__lang-c while(42) {} while(1==1) {} while(2==2) {} while(4<7) {} while(3==3 && 4==4) {} while(8-9 < 0) {} while(4.3 * 3e4 >= 2 << 6) {} while(-0.1 + 02) {}
__lb__lang-cpp using namespace std; int main() { string s = "Somewhere down the road"; istringstream iss(s); do { string subs; iss >> subs; cout << "Substring: " << subs << endl; } while (iss); }
__lb__lang-java String name = "john"; public int age(){ return age; }
__lb__lang-golang cd /usr/local/go/src sudo GOOS=windows GOARCH=amd64 CGO_ENABLED=1 GOROOT_BOOTSTRAP=/Users/Pooya/Documents/go ./make.bash --no-clean sudo GOOS=windows GOARCH=386 CGO_ENABLED=1 GOROOT_BOOTSTRAP=/Users/Pooya/Documents/go ./make.bash --no-clean
__lb__lang-java public static <T> Collection<T> filter(Collection<T> target, IPredicate<T> predicate) { Collection<T> result = new ArrayList<T>(); for (T element: target) { if (predicate.apply(element)) { result.add(element); } } return result; }
__lb__lang-php $tempArray = array(); $annotations = array(); while($row = mysql_fetch_array($result)) { $needle = $row[0]; arrayIndexes($needle); $annotations[$needle][ } asort($tempArray); foreach ($tempArray as $arrayKey) { $dataInOrder = $annotations[$arrayKey][ } function arrayIndexes ($needle) { global $tempArray; if (!in_array($needle,$tempArray)) { array_push($tempArray,$needle); } }
__lb__lang-sh tmux new-session \; split-window -v \; split-window -h \;
__lb__lang-golang var str string err = json.Unmarshal(*objmap["say"], &str)
__lb__lang-cpp class Foo { int d; public: Foo (int i) : d(i) {} Foo () : Foo(42) {} };
__lb__lang-golang req, err := http.NewRequest("GET", "http: if err != nil { ... } req.Host = "domain.tld" resp, err := http.Client.Do(req)
__lb__lang-perl open (IN, "qq.in") || die "Cannot open qq.in"; while (<IN>) { chomp; $line = $_; print "$line:\n"; while ($line ne "") { if (substr ($line,0,1) eq " ") { $line = substr ($line,1); next; } $field = ""; $minlen = 0; if (substr ($line,0,1) eq "\"") { $line = substr ($line,1); $pastquote = 0; while ($line ne "") { if (length ($line) >= 2) { if (substr ($line,0,2) eq "\\\"") { $field = $field . "\""; $line = substr ($line,2); next; } if (substr ($line,0,2) eq "\\\\") { $field = $field . "\\"; $line = substr ($line,2); next; } } if (($pastquote == 0) && (substr ($line,0,1) eq "\"")) { $pastquote = 1; $line = substr ($line,1); $minlen = length ($field); next; } if (($pastquote == 1) && (substr ($line,0,1) eq ",")) { $line = substr ($line,1); last; } $field = $field . substr ($line,0,1); $line = substr ($line,1); } } else { while ($line ne "") { if (substr ($line,0,1) eq ",") { $line = substr ($line,1); last; } if ($pastquote == 0) { $field = $field . substr ($line,0,1); } $line = substr ($line,1); } } while ($field ne "") { if (length ($field) == $minlen) { last; } if (substr ($field,length ($field)-1,1) eq " ") { $field = substr ($field,0, length ($field)-1); next; } last; } print " [$field]\n"; } } close (IN);
__lb__lang-cs persons.GroupBy(x => x.PersonId).Where(x => x.Count() > 1).Any(x => x)
__lb__lang-cs public static class DateTimeHelper { private const int SECOND = 1; private const int MINUTE = 60 * SECOND; private const int HOUR = 60 * MINUTE; private const int DAY = 24 * HOUR; private const int MONTH = 30 * DAY; public static string GetFriendlyRelativeTime(DateTime dateTime) { if (DateTime.UtcNow.Ticks == dateTime.Ticks) { return "Right now!"; } bool isFuture = (DateTime.UtcNow.Ticks < dateTime.Ticks); var ts = DateTime.UtcNow.Ticks < dateTime.Ticks ? new TimeSpan(dateTime.Ticks - DateTime.UtcNow.Ticks) : new TimeSpan(DateTime.UtcNow.Ticks - dateTime.Ticks); double delta = ts.TotalSeconds; if (delta < 1 * MINUTE) { return isFuture ? "in " + (ts.Seconds == 1 ? "one second" : ts.Seconds + " seconds") : ts.Seconds == 1 ? "one second ago" : ts.Seconds + " seconds ago"; } if (delta < 2 * MINUTE) { return isFuture ? "in a minute" : "a minute ago"; } if (delta < 45 * MINUTE) { return isFuture ? "in " + ts.Minutes + " minutes" : ts.Minutes + " minutes ago"; } if (delta < 90 * MINUTE) { return isFuture ? "in an hour" : "an hour ago"; } if (delta < 24 * HOUR) { return isFuture ? "in " + ts.Hours + " hours" : ts.Hours + " hours ago"; } if (delta < 48 * HOUR) { return isFuture ? "tomorrow" : "yesterday"; } if (delta < 30 * DAY) { return isFuture ? "in " + ts.Days + " days" : ts.Days + " days ago"; } if (delta < 12 * MONTH) { int months = Convert.ToInt32(Math.Floor((double)ts.Days / 30)); return isFuture ? "in " + (months <= 1 ? "one month" : months + " months") : months <= 1 ? "one month ago" : months + " months ago"; } else { int years = Convert.ToInt32(Math.Floor((double)ts.Days / 365)); return isFuture ? "in " + (years <= 1 ? "one year" : years + " years") : years <= 1 ? "one year ago" : years + " years ago"; } } }
__lb__lang-c double zero = 0.0; double a[] = { 0,0,0,0,0, zero/zero}; cout << (a[5] == 5[a] ? "true" : "false") << endl;
__lb__lang-html <select> <option [ngValue]="undefined" disabled selected>Select your option</option> <option [ngValue]="hurr">Durr</option> </select>
__lb__lang-perl use strict ; use warnings ; use Cwd sub ResolveMyProductBaseDir { my $ScriptAbsolutPath = abs_path($0) ; $ScriptAbsolutPath =~ m/^(.*)(\\|\/)(.*)\.([a-z]*)/; $RunDir = $1 ; $RunDir =~s/\\/\ my @DirParts = split ( for (my $count=0; $count < 4; $count++) { pop @DirParts ; } my $ProductBaseDir = join ( return $ProductBaseDir ; }
__lb__lang-golang func (r *record) String() string { var parts []string parts = append(parts, "(\"", r.name, "\" [" ) for i := 0; i < len(r.subs); i++ { parts = append(parts, r.subs[i].String()) } parts = append(parts, strconv.FormatInt(r.size,10), ")\n") return strings.Join(parts,"") }
__lb__lang-cs namespace EmailBillingRates { public partial class Form1 : Form { public Form1() { InitializeComponent(); lblProcessing.Text = ""; } private async void btnReadExcel_Click(object sender, EventArgs e) { string filename = OpenFileDialog(); Microsoft.Office.Interop.Excel.Application xlApp = new Microsoft.Office.Interop.Excel.Application(); Microsoft.Office.Interop.Excel.Workbook xlWorkbook = xlApp.Workbooks.Open(filename); Microsoft.Office.Interop.Excel._Worksheet xlWorksheet = xlWorkbook.Sheets[1]; Microsoft.Office.Interop.Excel.Range xlRange = xlWorksheet.UsedRange; try { Task<int> longRunningTask = BindGrid(xlRange); int result = await longRunningTask; } catch (Exception ex) { MessageBox.Show(ex.Message.ToString()); } finally { Marshal.ReleaseComObject(xlRange); Marshal.ReleaseComObject(xlWorksheet); xlWorkbook.Close(); Marshal.ReleaseComObject(xlWorkbook); xlApp.Quit(); Marshal.ReleaseComObject(xlApp); } } private void btnSendEmail_Click(object sender, EventArgs e) { } private string OpenFileDialog() { string filename = ""; OpenFileDialog fdlg = new OpenFileDialog(); fdlg.Title = "Excel File Dialog"; fdlg.InitialDirectory = @"c:\"; fdlg.Filter = "All files (*.*)|*.*|All files (*.*)|*.*"; fdlg.FilterIndex = 2; fdlg.RestoreDirectory = true; if (fdlg.ShowDialog() == DialogResult.OK) { filename = fdlg.FileName; } return filename; } private async Task<int> BindGrid(Microsoft.Office.Interop.Excel.Range xlRange) { lblProcessing.Text = "Processing File.. Please wait"; int rowCount = xlRange.Rows.Count; int colCount = xlRange.Columns.Count; dataGridView1.ColumnCount = colCount; dataGridView1.RowCount = rowCount; for (int i = 1; i <= rowCount; i++) { for (int j = 1; j <= colCount; j++) { if (xlRange.Cells[i, j] != null && xlRange.Cells[i, j].Value2 != null) { await Task.Delay(1); dataGridView1.Rows[i - 1].Cells[j - 1].Value = xlRange.Cells[i, j].Value2.ToString(); } } } lblProcessing.Text = ""; return 0; } } internal class async { } }
__lb__lang-java public class RecyclerViewHolder extends RecyclerView.ViewHolder { public ImageView imageView,imageView2; public RecyclerViewHolder(View itemView) { super(itemView); this.imageView=(ImageView)itemView.findViewById(R.id.image); } }
__lb__lang-cs Catch ex As Exception When TypeOf ex Is FormatException OrElse TypeOf ex Is OverflowException
__lb__lang-hs putStrLn (show $ 1 + 1) putStrLn $ show (1 + 1) putStrLn $ show $ 1 + 1
__lb__lang-sh title() { printf TIMEFORMAT=$ COUNT_REPETITIONS=${1?Arguments: <charRepeatCount> [<testRunCount>]} COUNT_RUNS=${2:-1} outFilePrefix=/dev/null { outFile=$outFilePrefix ndx=0 title [[ $outFile != eval " time for (( n = 0; n < COUNT_RUNS; n++ )); do printf done" title [[ $outFile != time for (( n = 0; n < COUNT_RUNS; n++ )); do for ((i=0; i<COUNT_REPETITIONS; ++i)); do echo -n =; done >"$outFile" done title [[ $outFile != eval " time for (( n = 0; n < COUNT_RUNS; n++ )); do for i in {1..$COUNT_REPETITIONS}; do echo -n =; done >"$outFile" done " title [[ $outFile != time for (( n = 0; n < COUNT_RUNS; n++ )); do printf "%${COUNT_REPETITIONS}s" | sed done title [[ $outFile != time for (( n = 0; n < COUNT_RUNS; n++ )); do printf "%${COUNT_REPETITIONS}s" | tr done title [[ $outFile != time for (( n = 0; n < COUNT_RUNS; n++ )); do head -c $COUNT_REPETITIONS < /dev/zero | tr done title [[ $outFile != time for (( n = 0; n < COUNT_RUNS; n++ )); do seq -f done title [[ $outFile != time for (( n = 0; n < COUNT_RUNS; n++ )); do jot -s done title [[ $outFile != time for (( n = 0; n < COUNT_RUNS; n++ )); do yes = | head -$COUNT_REPETITIONS | tr -d done title [[ $outFile != time for (( n = 0; n < COUNT_RUNS; n++ )); do perl -e "print \"=\" x $COUNT_REPETITIONS" >"$outFile" done title [[ $outFile != time for (( n = 0; n < COUNT_RUNS; n++ )); do dd if=/dev/zero bs=$COUNT_REPETITIONS count=1 2>/dev/null | tr done for awkBin in awk mawk gawk; do if [[ -x $(command -v $awkBin) ]]; then title "[M ] $awkBin" [[ $outFile != time for (( n = 0; n < COUNT_RUNS; n++ )); do $awkBin -v count=$COUNT_REPETITIONS done title "[M, P] $awkBin" [[ $outFile != time for (( n = 0; n < COUNT_RUNS; n++ )); do $awkBin -v count=$COUNT_REPETITIONS done fi done title [[ $outFile != skip=0 [[ $BASH_VERSINFO -le 3 && COUNT_REPETITIONS -gt 1000 ]] && skip=1 [[ $BASH_VERSINFO -eq 4 && COUNT_REPETITIONS -gt 10000 ]] && skip=1 if (( skip )); then echo else time for (( n = 0; n < COUNT_RUNS; n++ )); do { printf -v t "%${COUNT_REPETITIONS}s" done fi } 2>&1 | sort -t$ awk -F $ printf "%s\t", $1; if ($2 ~ "^n/a") { print $2 } else { printf "%.4f\n", $2 / count }} column -s$
__lb__lang-java fun doActionAfterDelay() = launch(UI){ delay(MS_TO_DELAY) actionToTake() }
__lb__lang-java URLConnection connection = new URL(url).openConnection(); connection.setDoOutput(true); connection.setRequestProperty("Accept-Charset", charset); connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded;charset=" + charset); try (OutputStream output = connection.getOutputStream()) { output.write(query.getBytes(charset)); } InputStream response = connection.getInputStream();
__lb__lang-php interface Person { public function greet(); public function eat($food); } trait EatingTrait { public function eat($food) { $this->putInMouth($food); } private function putInMouth($food) { } } class NicePerson implements Person { use EatingTrait; public function greet() { echo } } class MeanPerson implements Person { use EatingTrait; public function greet() { echo } }
__lb__lang-cs [DataContract( Namespace = "http: class Person { [DataMember] int Age { get; set; } Gender Gender { get; set; } [DataMember(Name = "Gender")] string GenderString { get { return this.Gender.ToString(); } set { Gender g; this.Gender = Enum.TryParse(value, true, out g) ? g : Gender.Male; } } }
__lb__lang-cs private string label = "Default Value"; public string Label { get => label; set => this.label = value; }
__lb__lang-c enum sum_arg_types { SUM_LONG, SUM_ULONG, SUM_DOUBLE }; struct sum_arg { enum sum_arg_types type; union { long as_long; unsigned long as_ulong; double as_double; } value; }; long double _sum(size_t count, struct sum_arg * args) { long double value = 0; for(size_t i = 0; i < count; ++i) { switch(args[i].type) { case SUM_LONG: value += args[i].value.as_long; break; case SUM_ULONG: value += args[i].value.as_ulong; break; case SUM_DOUBLE: value += args[i].value.as_double; break; } } return value; } int main() { unsigned long foo = -1; long double value = sum(sum_long(42), sum_ulong(foo), sum_double(1e10)); printf("%Le\n", value); return 0; }
__lb__lang-java List<Integer> list 22 = Collections.unmodifiableList(Arrays.asList(integers));
__lb__lang-sh CURRENT=`pwd` BASENAME=`basename "$CURRENT"` echo "$BASENAME" exit;
__lb__lang-php $product_details = array(); foreach ($products_in_store as $key => $objects) { $product_details[$key] = new stdClass(); $product_details[$key]->product_id = $objects->id; }
__lb__lang-css .border { margin: 50px; width: 50px; height: 50px; border-width: 50px; border-style: solid; border-top-color: green; border-right-color: yellow; border-bottom-color: red; border-left-color: blue; cursor: pointer }
__lb__lang-java org.apache.commons.lang.time.StopWatch sw = new org.apache.commons.lang.time.StopWatch(); System.out.println("getEventFilterTreeData :: Start Time : " + sw.getTime()); sw.start(); sw.stop(); System.out.println("getEventFilterTreeData :: End Time : " + sw.getTime());
__lb__lang-sh if [ ! -d $dir ] then mkdir $dir else echo "Directory exists" fi
__lb__lang-hs instance Functor Maybe where map :: (a -> b) -> (Maybe a -> Maybe b) map f (Just x) = Just (f x) map _ Nothing = Nothing instance Monad Maybe where return :: t -> Maybe t return = Just (=<<) :: (a -> Maybe b) -> Maybe a -> Maybe b f =<< (Just x) = f x _ =<< Nothing = Nothing
__lb__lang-css input::-webkit-input-placeholder, textarea::-webkit-input-placeholder { color: } input:-moz-placeholder, textarea:-moz-placeholder { color: }
__lb__lang-java PrintWriter out = null; try { out = new PrintWriter(new BufferedWriter(new FileWriter("writePath", true))); out.println("the text"); }catch (IOException e) { System.err.println(e); }finally{ if(out != null){ out.close(); } }
__lb__lang-c The one "l" NUL ends an ASCII string, The two "l" NULL points to no thing. Apologies to Ogden Nash, but the three "l" nulll means check your spelling.
__lb__lang-cpp std::ostream& operator<<(std::ostream& os, const T& obj) { return os; } std::istream& operator>>(std::istream& is, T& obj) { if( ) is.setstate(std::ios::failbit); return is; }
__lb__lang-java curl -L -C - -b "oraclelicense=accept-securebackup-cookie" -O http:
__lb__lang-hs [/tmp/Foo.hs:(2,1)-(3,17)] > :step Stopped at /tmp/Foo.hs:2:9-17 _result :: Int = _ g :: Integral b => b -> Int = _ x :: Int = 42
__lb__lang-cs public class Sample { private readonly string ro; public Sample() { ro = "set"; } public Sample(string value) : this() { ro = value; } }
__lb__lang-golang sudo add-apt-repository ppa:longsleep/golang-backports sudo apt-get update sudo apt-get install golang-go
__lb__lang-html <p>A button that looks like a <button type="button" class="link">link</button>.</p>
__lb__lang-css ::-moz-selection { background:none; color:none; } ::selection { background:none; color:none; }
__lb__lang-java com.google.common.base.Stopwatch g_SW = Stopwatch.createUnstarted(); g_SW.start(); Thread.sleep(1000 * 4); g_SW.stop(); System.out.println("Google StopWatch : "+g_SW);
__lb__lang-java public static String readFileContent(String filename, Charset charset) throws IOException { RandomAccessFile raf = null; try { raf = new RandomAccessFile(filename, "r"); byte[] buffer = new byte[(int)raf.length()]; raf.readFully(buffer); return new String(buffer, charset); } finally { closeStream(raf); } } private static void closeStream(Closeable c) { if (c != null) { try { c.close(); } catch (IOException ex) { } } }
__lb__lang-cs public static bool IsNumeric(object Expression) { double retNum; bool isNum = Double.TryParse(Convert.ToString(Expression), System.Globalization.NumberStyles.Any, System.Globalization.NumberFormatInfo.InvariantInfo, out retNum); return isNum; }
__lb__lang-php mysql_query( $var = mysql_real_escape_string( mysql_query(
__lb__lang-cs using (var context = new DatabaseContext()) { ... using (var context1 = new DatabaseContext()) { ... context1.SaveChanges(); } context.SaveChanges(); }
__lb__lang-cs using System.Linq; public class Person { string FirstName { get; set; } string LastName { get; set; } } List<Person> persons = new List<Person>(); string listOfPersons = string.Join(",", persons.Select(p => p.FirstName));
__lb__lang-php public function isErrorSet() { if (isset($this->error) && !empty($this->error)) { return true; } else { return false; } }
__lb__lang-php function arrayToObject($conArray) { if(is_array($conArray)){ /* * Return array converted to object * Using __FUNCTION__ (Magic constant) * for recursive call */ return (object) array_map(__FUNCTION__, $conArray); }else{ return $conArray; } }
__lb__lang-sh seq 1 10 | sort -R | tee /tmp/lst |cat <(cat /tmp/lst) <(echo
__lb__lang-cpp class Heavy { bool b_moved; public: A(const A& a) { } A(A&& a) : { a.b_moved = true; } ~A() { if (!b_moved) } };
__lb__lang-php CREATE TABLE products ( product_id INTEGER, description VARCHAR(128), PRIMARY KEY (product_id) ); $product=new Axon( $product->product_id=123; $product->description= $product->save(); $product->load( echo $product->description; $product->description= $product->save(); $product->erase();
__lb__lang-sh IN="bla@some.com;john@home.com;Full Name <fulnam@other.org>"
__lb__lang-cs static private readonly char[] hexAlphabet = new char[] { static string ByteArrayToHexViaByteManipulation4(byte[] bytes) { char[] c = new char[bytes.Length * 2]; for (int i = 0, ptr = 0; i < bytes.Length; i++, ptr += 2) { byte b = bytes[i]; c[ptr] = hexAlphabet[b >> 4]; c[ptr + 1] = hexAlphabet[b & 0xF]; } return new string(c); }
__lb__lang-php <script>var number = "abcd";alert(number);</script>
__lb__lang-php $is_first = true; foreach( $array as $value ) { switch ( $value ) { case echo if ( $is_first ) { echo $is_first = false; } break; } } if( !next( $array ) ) { echo } }
__lb__lang-sh if ((1 == 1<<32)); then echo 32bits else echo 64bits fi
__lb__lang-java final long[] i = {0}; map.forEach((k, v) -> i[0] += k + v);
__lb__lang-cs PropertyInfo[] props = t.GetProperties(); PropertyInfo[] props = t.GetProperties(BindingFlags.Public)
__lb__lang-php object(DateInterval) public public public public public public public public
__lb__lang-java 1. Lists.newArrayList("Mike", "John", "Lesly"); 2. Lists.asList("A","B", new String [] {"C", "D"});
__lb__lang-cpp void overloaded_function(std::string& param) { std::cout << "std::string& version" << std::endl; } void overloaded_function(std::string&& param) { std::cout << "std::string&& version" << std::endl; } template<typename T> void pass_through(T&& param) { overloaded_function(std::forward<T>(param)); } int main() { std::string pes; pass_through(pes); pass_through(std::move(pes)); }
__lb__lang-java . |_ Dockerfile |_ docker-compose.yml |_ HelloWorld.java
__lb__lang-css .notIE { position: relative; display: inline-block; } select { display: inline-block; height: 30px; width: 150px; outline: none; color: border: 1px solid border-radius: 4px; box-shadow: inset 1px 1px 2px background: } .notIE .fancyArrow { width: 23px; height: 28px; position: absolute; display: inline-block; top: 1px; right: 3px; background: url(http: pointer-events: none; } @media screen and (min-width: 0\0) { .notIE .fancyArrow { display: none; } }
__lb__lang-java while((x & 0x3) == 0) x >>= 2; if((x & 0x7) != 1) return false;
__lb__lang-java javac -source 1.6 -target 1.6 -bootclasspath ./rt.jar HelloWorld.java
__lb__lang-sh abort() { echo >&2 ' *************** *** ABORTED *** *************** ' echo "An error occurred. Exiting..." >&2 exit 1 } trap set -e trap : 0 echo >&2 ' ************ *** DONE *** ************ '
__lb__lang-perl wget -O- http: eval `perl -I ~/perl5/lib/perl5 -Mlocal::lib` echo echo
__lb__lang-php function str_replace_first($search, $replace, $subject) { return implode($replace, explode($search, $subject, 2)); }
__lb__lang-cpp time_t now = time(0); tm* localtm = localtime(&now); cout << "The local date and time is: " << asctime(localtm) << endl; tm* gmtm = gmtime(&now); if (gmtm != NULL) { cout << "The UTC date and time is: " << asctime(gmtm) << endl; } else { cerr << "Failed to get the UTC date and time" << endl; return EXIT_FAILURE; }
__lb__lang-cpp class baseclass { ... baseclass & operator =(const baseclass&); baseclass(const baseclass&); } void function( ) { baseclass obj1=m; obj1=m; }
__lb__lang-cs <Bindable(True)> Protected Friend Property StartDate As DateTime?
__lb__lang-php $tests = 1000000; $max = 5000001; for( $i = 1; $i <= $max; $i += 10000 ) { $array = array_fill( 0, $i, NULL ); $test_indexes = array(); for( $j = 0; $j < $tests; $j++ ) { $test_indexes[] = rand( 0, $i-1 ); } $start = microtime( TRUE ); foreach( $test_indexes as $test_index ) { $value = $array[ $test_index ]; unset( $value ); } $stop = microtime( TRUE ); unset( $array, $test_indexes, $test_index ); printf( "%d,%1.15f\n", $i, $stop - $start ); unset( $stop, $start ); }
__lb__lang-java DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss"); Calendar cal = Calendar.getInstance(); System.out.println(dateFormat.format(cal.getTime()));
__lb__lang-java OuterClass.Inner2 inner = new OuterClass().new Inner2();
__lb__lang-golang package main import ( "fmt" "strings" ) func main() { s := strings.Split("127.0.0.1:5432", ":") ip, port := s[0], s[1] fmt.Println(ip, port) }
__lb__lang-c unsigned add(char const zero[], unsigned const x, unsigned const y) { return (int)(uintptr_t)(&((&zero[x])[y])); } unsigned div_by(unsigned const x, unsigned const by) { unsigned floor = 0; for (unsigned cmp = 0, r = 0; cmp <= x;) { cmp = add(0,cmp,by); floor = r; r = add(0,r,1); } return floor; }
__lb__lang-perl 1 is a number 5.25 is a number 0.001 is a number 1.3e8 is a number foo is not a number bar is not a number 1dd is not a number inf is a number infinity is a number
__lb__lang-cs public static Type GetCollectionItemType(Type collectionType) { var types = collectionType.GetInterfaces() .Where(x => x.IsGenericType && x.GetGenericTypeDefinition() == typeof(IEnumerable<>)) .ToArray(); return types.Length == 1 ? types[0].GetGenericArguments()[0] : null; }
__lb__lang-css label input { display: none; } label span { height: 10px; width: 10px; border: 1px solid grey; display: inline-block; position: relative; } [type=checkbox]:checked + span:before { content: position: absolute; top: -5px; left: 0; }
__lb__lang-cs private static MyObj DeepCopy(MyObj source) { var DeserializeSettings = new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace }; return JsonConvert.DeserializeObject<MyObj >(JsonConvert.SerializeObject(source), DeserializeSettings); }
__lb__lang-c int main() { srand(time(NULL)); int lowerLimit = 10, upperLimit = 50; int r = lowerLimit + rand() % (upperLimit - lowerLimit); printf("%d", r); }
__lb__lang-sh $ tar cf - src | tee >( cd dest1 ; tar xf - ) >( cd dest2 ; tar xf - ) | ( cd dest3 ; tar xf - )
__lb__lang-cs /* * This work (Modern Encryption of a String C * identified by James Tuley, is free of known copyright restrictions. * https: * http: */ using System; using System.IO; using System.Text; using Org.BouncyCastle.Crypto; using Org.BouncyCastle.Crypto.Engines; using Org.BouncyCastle.Crypto.Generators; using Org.BouncyCastle.Crypto.Modes; using Org.BouncyCastle.Crypto.Parameters; using Org.BouncyCastle.Security; namespace Encryption { public static class AESGCM { private static readonly SecureRandom Random = new SecureRandom(); public static readonly int NonceBitSize = 128; public static readonly int MacBitSize = 128; public static readonly int KeyBitSize = 256; public static readonly int SaltBitSize = 128; public static readonly int Iterations = 10000; public static readonly int MinPasswordLength = 12; public static byte[] NewKey() { var key = new byte[KeyBitSize / 8]; Random.NextBytes(key); return key; } public static string SimpleEncrypt(string secretMessage, byte[] key, byte[] nonSecretPayload = null) { if (string.IsNullOrEmpty(secretMessage)) throw new ArgumentException("Secret Message Required!", "secretMessage"); var plainText = Encoding.UTF8.GetBytes(secretMessage); var cipherText = SimpleEncrypt(plainText, key, nonSecretPayload); return Convert.ToBase64String(cipherText); } public static string SimpleDecrypt(string encryptedMessage, byte[] key, int nonSecretPayloadLength = 0) { if (string.IsNullOrEmpty(encryptedMessage)) throw new ArgumentException("Encrypted Message Required!", "encryptedMessage"); var cipherText = Convert.FromBase64String(encryptedMessage); var plainText = SimpleDecrypt(cipherText, key, nonSecretPayloadLength); return plainText == null ? null : Encoding.UTF8.GetString(plainText); } public static string SimpleEncryptWithPassword(string secretMessage, string password, byte[] nonSecretPayload = null) { if (string.IsNullOrEmpty(secretMessage)) throw new ArgumentException("Secret Message Required!", "secretMessage"); var plainText = Encoding.UTF8.GetBytes(secretMessage); var cipherText = SimpleEncryptWithPassword(plainText, password, nonSecretPayload); return Convert.ToBase64String(cipherText); } public static string SimpleDecryptWithPassword(string encryptedMessage, string password, int nonSecretPayloadLength = 0) { if (string.IsNullOrWhiteSpace(encryptedMessage)) throw new ArgumentException("Encrypted Message Required!", "encryptedMessage"); var cipherText = Convert.FromBase64String(encryptedMessage); var plainText = SimpleDecryptWithPassword(cipherText, password, nonSecretPayloadLength); return plainText == null ? null : Encoding.UTF8.GetString(plainText); } public static byte[] SimpleEncrypt(byte[] secretMessage, byte[] key, byte[] nonSecretPayload = null) { if (key == null || key.Length != KeyBitSize / 8) throw new ArgumentException(String.Format("Key needs to be {0} bit!", KeyBitSize), "key"); if (secretMessage == null || secretMessage.Length == 0) throw new ArgumentException("Secret Message Required!", "secretMessage"); nonSecretPayload = nonSecretPayload ?? new byte[] { }; var nonce = new byte[NonceBitSize / 8]; Random.NextBytes(nonce, 0, nonce.Length); var cipher = new GcmBlockCipher(new AesFastEngine()); var parameters = new AeadParameters(new KeyParameter(key), MacBitSize, nonce, nonSecretPayload); cipher.Init(true, parameters); var cipherText = new byte[cipher.GetOutputSize(secretMessage.Length)]; var len = cipher.ProcessBytes(secretMessage, 0, secretMessage.Length, cipherText, 0); cipher.DoFinal(cipherText, len); using (var combinedStream = new MemoryStream()) { using (var binaryWriter = new BinaryWriter(combinedStream)) { binaryWriter.Write(nonSecretPayload); binaryWriter.Write(nonce); binaryWriter.Write(cipherText); } return combinedStream.ToArray(); } } public static byte[] SimpleDecrypt(byte[] encryptedMessage, byte[] key, int nonSecretPayloadLength = 0) { if (key == null || key.Length != KeyBitSize / 8) throw new ArgumentException(String.Format("Key needs to be {0} bit!", KeyBitSize), "key"); if (encryptedMessage == null || encryptedMessage.Length == 0) throw new ArgumentException("Encrypted Message Required!", "encryptedMessage"); using (var cipherStream = new MemoryStream(encryptedMessage)) using (var cipherReader = new BinaryReader(cipherStream)) { var nonSecretPayload = cipherReader.ReadBytes(nonSecretPayloadLength); var nonce = cipherReader.ReadBytes(NonceBitSize / 8); var cipher = new GcmBlockCipher(new AesFastEngine()); var parameters = new AeadParameters(new KeyParameter(key), MacBitSize, nonce, nonSecretPayload); cipher.Init(false, parameters); var cipherText = cipherReader.ReadBytes(encryptedMessage.Length - nonSecretPayloadLength - nonce.Length); var plainText = new byte[cipher.GetOutputSize(cipherText.Length)]; try { var len = cipher.ProcessBytes(cipherText, 0, cipherText.Length, plainText, 0); cipher.DoFinal(plainText, len); } catch (InvalidCipherTextException) { return null; } return plainText; } } public static byte[] SimpleEncryptWithPassword(byte[] secretMessage, string password, byte[] nonSecretPayload = null) { nonSecretPayload = nonSecretPayload ?? new byte[] {}; if (string.IsNullOrWhiteSpace(password) || password.Length < MinPasswordLength) throw new ArgumentException(String.Format("Must have a password of at least {0} characters!", MinPasswordLength), "password"); if (secretMessage == null || secretMessage.Length == 0) throw new ArgumentException("Secret Message Required!", "secretMessage"); var generator = new Pkcs5S2ParametersGenerator(); var salt = new byte[SaltBitSize / 8]; Random.NextBytes(salt); generator.Init( PbeParametersGenerator.Pkcs5PasswordToBytes(password.ToCharArray()), salt, Iterations); var key = (KeyParameter)generator.GenerateDerivedMacParameters(KeyBitSize); var payload = new byte[salt.Length + nonSecretPayload.Length]; Array.Copy(nonSecretPayload, payload, nonSecretPayload.Length); Array.Copy(salt,0, payload,nonSecretPayload.Length, salt.Length); return SimpleEncrypt(secretMessage, key.GetKey(), payload); } public static byte[] SimpleDecryptWithPassword(byte[] encryptedMessage, string password, int nonSecretPayloadLength = 0) { if (string.IsNullOrWhiteSpace(password) || password.Length < MinPasswordLength) throw new ArgumentException(String.Format("Must have a password of at least {0} characters!", MinPasswordLength), "password"); if (encryptedMessage == null || encryptedMessage.Length == 0) throw new ArgumentException("Encrypted Message Required!", "encryptedMessage"); var generator = new Pkcs5S2ParametersGenerator(); var salt = new byte[SaltBitSize / 8]; Array.Copy(encryptedMessage, nonSecretPayloadLength, salt, 0, salt.Length); generator.Init( PbeParametersGenerator.Pkcs5PasswordToBytes(password.ToCharArray()), salt, Iterations); var key = (KeyParameter)generator.GenerateDerivedMacParameters(KeyBitSize); return SimpleDecrypt(encryptedMessage, key.GetKey(), salt.Length + nonSecretPayloadLength); } } }
__lb__lang-cpp switch (...) { case FOO: { MyObject x(...); ... break; } ... }
__lb__lang-sh $ /usr/bin/time -v sleep 1 Command being timed: "sleep 1" User time (seconds): 0.00 System time (seconds): 0.00 Percent of CPU this job got: 1% Elapsed (wall clock) time (h:mm:ss or m:ss): 0:01.05 Average shared text size (kbytes): 0 Average unshared data size (kbytes): 0 Average stack size (kbytes): 0 Average total size (kbytes): 0 Maximum resident set size (kbytes): 0 Average resident set size (kbytes): 0 Major (requiring I/O) page faults: 0 Minor (reclaiming a frame) page faults: 210 Voluntary context switches: 2 Involuntary context switches: 1 Swaps: 0 File system inputs: 0 File system outputs: 0 Socket messages sent: 0 Socket messages received: 0 Signals delivered: 0 Page size (bytes): 4096 Exit status: 0
__lb__lang-sh dos2unix: converting file filename.sh to Unix format ...
__lb__lang-php echo urlencode("red shirt"); echo rawurlencode("red shirt");
__lb__lang-sh progressbar() { if [ $1 -eq -1 ]; then printf "\r $barspaces\r" else barch=$(($1*barlen/$2)) barsp=$((barlen-barch)) printf "\r[%.${barch}s%.${barsp}s]\r" "$barchars" "$barspaces" fi }
__lb__lang-cs public static object GetDefault(Type t) { Func<object> f = GetDefault<object>; return f.Method.GetGenericMethodDefinition().MakeGenericMethod(t).Invoke(null, null); } private static T GetDefault<T>() { return default(T); }
__lb__lang-cpp inline111: fun() = 111, &fun = 0x4029a0 inline222: fun() = 111, &fun = 0x4029a0
__lb__lang-perl while ($line ne "") { if (substr ($line,0,1) eq " ") { $line = substr ($line,1); next; }
__lb__lang-perl man -P ... "fcntl". Like "ioctl", it maps a 0 return from the system call into "0 but true" in Perl. This string is true in boolean context and 0 in numeric context. It is also exempt from the normal -w warnings on improper numeric conversions. ...
__lb__lang-cpp using namespace std; class Base { public: Base(){ cout << "Base Constructor Called\n"; } virtual ~Base(){ cout << "Base Destructor called\n"; } }; class Derived1: public Base { public: Derived1(){ cout << "Derived constructor called\n"; } ~Derived1(){ cout << "Derived destructor called\n"; } }; int main() { Base *b = new Derived1(); delete b; }
__lb__lang-java Intent intent = new Intent(fromClass.this,toClass.class).putExtra("myCustomerObj",customerObj);
__lb__lang-cs DbCommand command = connection.CreateCommand(); command.CommandText = "SELECT @param"; DbParameter param = command.CreateParameter(); param.ParameterName = "@param"; param.Value = "Hello World"; command.Parameters.Add(param);
__lb__lang-sh # # source ./getopt.sh USAGE="-u USER -d DATABASE -p PASS -s SID [ -a START_DATE_TIME ]" parse_options "${USAGE}" ${@} echo ${USER} echo ${START_DATE_TIME}
__lb__lang-sh function declare_var { declare -p "$1" &> /dev/null return $? } declare_var "var_name" && echo "Set" || echo "Unset"
__lb__lang-c void print_binary(unsigned int n) { unsigned int mask = 0; mask = ~mask ^ (~mask >> 1); for(; mask != 0; mask >>= 1) { putchar((n & mask) ? } }
__lb__lang-java @RunWith(SpringRunner.class) @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT) @TestPropertySource(properties = "server.port=9192") public class DemoApplicationTests { @Test public void contextLoads() { } }
__lb__lang-golang func (r *record) String() string { buffer := bytes.NewBufferString(""); fmt.Fprint(buffer,"(",r.name,"[") for i := 0; i < len(r.subs); i++ { fmt.Fprint(buffer,"\t",r.subs[i]) } fmt.Fprint(buffer,"]",r.size,")\n") return buffer.String() }
__lb__lang-java String str2 = new BigDecimal(0.912385) .setScale(5, BigDecimal.ROUND_HALF_UP) .toString();
__lb__lang-c int *pfunc(int a, char *pStr); int (*pFunc)(int a, char *pStr);
__lb__lang-cs string random = string.Join("", Guid.NewGuid().ToString("n").Take(8).Select(o => o)); Response.Write(random.ToUpper()); Response.Write(random.ToLower());
__lb__lang-php mysql> select firstName, convert_tz(loginDate, +-----------+---------------------+------+------+------+--------+ | firstName | loginDate | Day | Hour | Min | Sec | +-----------+---------------------+------+------+------+--------+ | Peter | 2014-03-30 18:54:40 | 0 | 4 | 244 | 14644 | | Keith | 2014-03-30 18:54:11 | 0 | 4 | 244 | 14673 | | Andres | 2014-03-28 09:20:10 | 2 | 61 | 3698 | 221914 | | Nadeem | 2014-03-26 09:33:43 | 4 | 109 | 6565 | 393901 | +-----------+---------------------+------+------+------+--------+ 4 rows in set (0.00 sec)
__lb__lang-sh $ ./myscript.sh Usage: ./myscript.sh [-s <45|90>] [-p <string>] $ ./myscript.sh -h Usage: ./myscript.sh [-s <45|90>] [-p <string>] $ ./myscript.sh -s "" -p "" Usage: ./myscript.sh [-s <45|90>] [-p <string>] $ ./myscript.sh -s 10 -p foo Usage: ./myscript.sh [-s <45|90>] [-p <string>] $ ./myscript.sh -s 45 -p foo s = 45 p = foo $ ./myscript.sh -s 90 -p bar s = 90 p = bar
__lb__lang-cs using System.Net.Mail; string fromAddress = "xyz@gmail.com"; string mailPassword = "*****"; string messageBody = "Write the body of the message here."; SmtpClient client = new SmtpClient(); client.Port = 587; client.Host = "smtp.gmail.com"; client.EnableSsl = true; client.Timeout = 10000; client.DeliveryMethod = SmtpDeliveryMethod.Network; client.UseDefaultCredentials = false; client.Credentials = new System.Net.NetworkCredential(fromAddress, mailPassword); var send_mail = new MailMessage(); send_mail.IsBodyHtml = true; send_mail.From = new MailAddress("from@gmail.com"); send_mail.To.Add(new MailAddress("to@example.com"); send_mail.Subject = "put any subject here"; send_mail.Body = messageBody; client.Send(send_mail);
__lb__lang-php 1 Year, 10 Months, 2 Weeks, 5 Days, 10 Hours, 16 Minutes
__lb__lang-java export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home
__lb__lang-sh cd ~ tar -cvzf passwd.tar.gz /etc/passwd tar: Removing leading `/ /etc/passwd pwd
__lb__lang-golang package main import ( t "text/template" h "html/template" ) func main() { t.New("foo").Parse(`{{define "T"}}Hello, {{.}}!{{end}}`) h.New("foo").Parse(`{{define "T"}}Hello, {{.}}!{{end}}`) }
__lb__lang-cpp while(!inStream.eof()){ int data; inStream >> data; }
__lb__lang-php <?php $d=date ("d"); $m=date ("m"); $y=date ("Y"); $t=time(); $dmt=$d+$m+$y+$t; $ran= rand(0,10000000); $dmtran= $dmt+$ran; $un= uniqid(); $dmtun = $dmt.$un; $mdun = md5($dmtran.$un); $sort=substr($mdun, 16); echo $mdun; ?>
__lb__lang-cs public enum OrderType { None = 0, [Description("New Card")] NewCard = 1, [Description("Reload")] Refill = 2 }
__lb__lang-cs public static Stream ToStream(this string str) { MemoryStream stream = new MemoryStream(); StreamWriter writer = new StreamWriter(stream); writer.Write(str); writer.Flush(); stream.Position = 0; return stream; }
__lb__lang-php $formatter = new IntlDateFormatter( IntlDateFormatter::FULL, IntlDateFormatter::FULL, IntlDateFormatter::GREGORIAN, ); echo $formatter->parse(
__lb__lang-java public class Options { private String someString = "default value"; private int someInt= 0; public Options setSomeString(String someString) { this.someString = someString; return this; } public Options setSomeInt(int someInt) { this.someInt = someInt; return this; } } public static void foo(Consumer<Options> consumer) { Options options = new Options(); consumer.accept(options); System.out.println("someString = " + options.someString + ", someInt = " + options.someInt); }
__lb__lang-java int totalValue(Valuer<? super Vehicle> valuer) { int total = 0; for(Vehicle v : vehicles) { total += valuer.evaluate(v); } return total;}
__lb__lang-cpp void f(int); void f(char*); void g() { f(0); f(NULL); }
__lb__lang-php Name: John Status = Wait Name: Jennifer Status = Active Name: James Status = Active Age = 56 Count = 10 Progress = 0.0029857 Bad = 0
__lb__lang-php foreach to get first key and value: 0.15501809120178 seconds reset+key to get first key and value: 0.29375791549683 seconds reset+key to get first key: 0.26421809196472 seconds array_keys to get first key: 10.059751987457 seconds
__lb__lang-cs Random random = new Random(); int randomNumber = random.Next()
__lb__lang-cs using System.IO if (!Directory.Exists(yourDirectory)) Directory.CreateDirectory(yourDirectory);
__lb__lang-php function has_string_keys(array $array) { return count(array_filter(array_keys($array), }
__lb__lang-cpp string test = "Hello World"; for(auto& c : test) { c = tolower(c); } cout<<test<<endl;
__lb__lang-sh while test $ case "$1" in -first) shift first_argument=$1 shift ;; -last) shift last_argument=$1 shift ;; *) echo "$1 is not a recognized flag!" return 1; ;; esac done echo "First argument : $first_argument"; echo "Last argument : $last_argument";
__lb__lang-php var variable_1 = undefined; var variable_2 = undefined; window.onload = function(){ variable_1 = document.getElementById("storage").getAttribute("data-variable-one"); variable_2 = document.getElementById("storage").getAttribute("data-variable-two"); }
__lb__lang-cs using static Microsoft.VisualStudio.TestTools.UnitTesting.Assert; using static System.Console; private enum Countries { NorthAmerica, Europe, Rusia, Brasil, China, Asia, Australia } [TestMethod] public void StringExtensions_On_TryParseAsEnum() { var countryName = "Rusia"; Countries country; var isCountry = countryName.TryParseAsEnum(out country); WriteLine(country); IsTrue(isCountry); AreEqual(Countries.Rusia, country); countryName = "Don isCountry = countryName.TryParseAsEnum(out country); WriteLine(country); IsFalse(isCountry); AreEqual(Countries.NorthAmerica, country); }
__lb__lang-php $a = new stdClass(); $a->foo = "bar"; $b = clone $a; var_dump($a === $b);
__lb__lang-cpp using namespace std; class A{ public: void show(){ cout << " Hello from Class A"; } }; class B :public A{ public: void show(){ cout << " Hello from Class B"; } }; int main(){ A *a1 = new B; a1->show(); }
__lb__lang-php <?php header( $fh = fopen( fwrite($fh, $_SERVER[ fclose($fh); ?>
__lb__lang-java Set<Foo> lSet = new TreeSet<Foo>(someComparator); lSet.addAll(myList);
__lb__lang-cs Starting Long Running method... Press any key to exit... End Long Running method...
__lb__lang-css width: 100%; height: 100%; position: fixed; left: 0px; top: 0px; z-index: -1; } .stretch { width:100%; height:100%; }
__lb__lang-java ByteArrayOutputStream out = new ByteArrayOutputStream(); byte[] buffer = new byte[1024]; while (true) { int r = in.read(buffer); if (r == -1) break; out.write(buffer, 0, r); } byte[] ret = out.toByteArray();
__lb__lang-cs string data = "THExxQUICKxxBROWNxxFOX"; var dataspt = data.Split("xx"); public static class StringExtension { public static string[] Split(this string str, string splitter) { return str.Split(new[] { splitter }, StringSplitOptions.None); } }
__lb__lang-sh The_world_is_flat=0; if [ "${The_world_is_flat}" -eq true ]; then The_world_is_flat=0; if [ "${The_world_is_flat}" -eq true ]; then # if [[ "${The_world_is_flat}" -eq true ]]; then # if [ "${The_world_is_flat}" = true ]; then # if [[ "${The_world_is_flat}" = true ]]; then # if [ "${The_world_is_flat}" == true ]; then # if [[ "${The_world_is_flat}" == true ]]; then The_world_is_flat=true; if [[ "${The_world_is_flat}" -eq true ]]; then # if [ "${The_world_is_flat}" = 0 ]; then # if [[ "${The_world_is_flat}" = 0 ]]; then # if [ "${The_world_is_flat}" == 0 ]; then # if [[ "${The_world_is_flat}" == 0 ]]; then
__lb__lang-css .navbar-default { background-color: border-color: } .navbar-default .navbar-brand { color: } .navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus { color: } .navbar-default .navbar-nav > li > a { color: } .navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > li > a:focus { color: } .navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .active > a:hover, .navbar-default .navbar-nav > .active > a:focus { color: background-color: } .navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .open > a:hover, .navbar-default .navbar-nav > .open > a:focus { color: background-color: } .navbar-default .navbar-nav > .dropdown > a .caret { border-top-color: border-bottom-color: } .navbar-default .navbar-nav > .dropdown > a:hover .caret, .navbar-default .navbar-nav > .dropdown > a:focus .caret { border-top-color: border-bottom-color: } .navbar-default .navbar-nav > .open > a .caret, .navbar-default .navbar-nav > .open > a:hover .caret, .navbar-default .navbar-nav > .open > a:focus .caret { border-top-color: border-bottom-color: }
__lb__lang-c const char *bit_rep[16] = { [ 0] = "0000", [ 1] = "0001", [ 2] = "0010", [ 3] = "0011", [ 4] = "0100", [ 5] = "0101", [ 6] = "0110", [ 7] = "0111", [ 8] = "1000", [ 9] = "1001", [10] = "1010", [11] = "1011", [12] = "1100", [13] = "1101", [14] = "1110", [15] = "1111", }; void print_byte(uint8_t byte) { printf("%s%s", bit_rep[byte >> 4], bit_rep[byte & 0x0F]); }
__lb__lang-hs -- test.hs {- data EQList = forall a. EQList [a] eqListLen :: EQList -> Int eqListLen (EQList x) = length x ghci> :l test.hs ghci> eqListLen $ EQList ["Hello", "World"] 2
__lb__lang-java Map<Integer,List<Person>> mapPersons = new HashMap<>(); persons.forEach(p->mapPersons.put(p.getAge(),p));
__lb__lang-cpp int x = 100; while( 0 <-------------------- x ) { printf("%d ", x); }
__lb__lang-hs myAny even [1..] foldl step False [1..] foldl step (step False 1) [2..] foldl step (step (step False 1) 2) [3..] foldl step (step (step (step False 1) 2) 3) [4..]
__lb__lang-hs foldl f v xs = g xs v where g [] = id g (x:xs) = \v -> g xs (f v x)
__lb__lang-html <script src="https: <html> <head> <title>sandBox</title> </head> <body> <input type="radio" name="chName"/><br /> <input type="radio" name="chName"/><br /> <input type="radio" name="chName"/><br /> <input type="radio" name="chName"/><br /> <input type="button" onclick="toggleByName();" value="toggle"/> </body> </html>
__lb__lang-cpp MOV RCX, 1000000; DEC RCX; AND RCX, -2; XOR RAX, RAX; MOV RBX, RAX; @main: XOR RSI, RSI; LEA RDI, [RCX + 1]; @loop: ADD RSI, 2; LEA RDX, [RDI + RDI*2 + 2]; SHR RDX, 1; SHRD RDI, RDI, 2; ror rdi,2 would do the same thing CMOVL RDI, RDX; Note that SHRD leaves OF = undefined with count>1, and this doesn CMOVS RDI, RDX; CMP RDI, 2; JA @loop; LEA RDX, [RSI + 1]; CMOVE RSI, RDX; CMP RAX, RSI; CMOVB RAX, RSI; CMOVB RBX, RCX; SUB RCX, 2; JA @main; MOV RDI, RCX; ADD RCX, 10; PUSH RDI; PUSH RCX; @itoa: XOR RDX, RDX; DIV RCX; ADD RDX, PUSH RDX; TEST RAX, RAX; JNE @itoa; PUSH RCX; LEA RAX, [RBX + 1]; TEST RBX, RBX; MOV RBX, RDI; JNE @itoa; POP RCX; INC RDI; MOV RDX, RDI; @outp: MOV RSI, RSP; MOV RAX, RDI; SYSCALL; POP RAX; TEST RAX, RAX; JNE @outp; LEA RAX, [RDI + 59]; DEC RDI; SYSCALL;
__lb__lang-cs System.IO.Path.GetDirectoryName(Environment.GetCommandLineArgs()[0]);
__lb__lang-cs public static class DictionaryExtension { public static void ForEach<T1, T2>(this Dictionary<T1, T2> dictionary, Action<T1, T2> action) { foreach(KeyValuePair<T1, T2> keyValue in dictionary) { action(keyValue.Key, keyValue.Value); } } }
__lb__lang-java E[] a; a = newArray(size); @SafeVarargs static <E> E[] newArray(int length, E... array) { return Arrays.copyOf(array, length); }
__lb__lang-java public void saveDataInFile(String data) throws IOException { FileOutputStream outputStream = new FileOutputStream(fileName); byte[] strToBytes = data.getBytes(); outputStream.write(strToBytes); outputStream.close(); }
__lb__lang-hs foldConsumer :: (r -> s) -> ((a -> s) -> s) -> Consumer a r -> s foldConsumer onPure onAwait p = case p of Pure x -> onPure x Await f -> onAwait $ \x -> foldConsumer onPure onAwait (f x) Yield x _ -> absurd x
__lb__lang-cpp void someFunction(); void someOtherFunction(); void doSomething() { }
__lb__lang-cs IEnumerable<Customer> custs = ...; var goldCustomers = custs.Where(c => c.IsGold);
__lb__lang-html <form> <label> <input type="radio" checked> I am an aligned radio and label </label> <label> <input type="checkbox" checked> I am an aligned checkbox and label </label> </form>
__lb__lang-sh first="I love Suzy and Mary" second="Sara" first=${first/Suzy/$second}
__lb__lang-cs using(new MyContextInformation(someInfoInContext)) { ... }
__lb__lang-java public class Activity_1 extends Activity implements IPayload { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); GNLauncher.get().ping(this); } @Override public void sayHello(String name, int age) { Log.d("gnlib_test", "Hello " + name + "! \nYour age is: " + age); } }
__lb__lang-php <?php if(rand(1,3) == 1){ header("HTTP/1.0 404 Not Found"); die(); } /* Send a string after a random number of seconds (2-10) */ sleep(rand(2,10)); echo("Hi! Have a random number: " . rand(1,10)); ?>
__lb__lang-cpp class Base { int x, y; }; class Derived : public Base { int z, w; }; int main() { Derived d; Base b = d; }
__lb__lang-java String Pool "test" <-------------------- a Heap "test" <-------------------- b
__lb__lang-cpp using namespace std; int main(){ int **arr_01,**arr_02,i,j,rows=4,cols=5; arr_01=new int*[rows]; for(int i=0;i<rows;i++) arr_01[i]=new int[cols]; for(i=0;i<rows;i++){ for(j=0;j<cols;j++) cout << arr_01[i]+j << " " ; cout << endl; } for(int i=0;i<rows;i++) delete[] arr_01[i]; delete[] arr_01; cout << endl; arr_02=new int*[rows]; arr_02[0]=new int[rows*cols]; for(int i=1;i<rows;i++) arr_02[i]=arr_02[0]+cols*i; for(int i=0;i<rows;i++){ for(int j=0;j<cols;j++) cout << arr_02[i]+j << " " ; cout << endl; } delete[] arr_02[0]; delete[] arr_02; return 0; }
__lb__lang-html <link href="https: <script src="https: <input type="text" class="form-control" name="number" id="number" onkeypress="return isNumberKey(event)" placeholder="Enter Numeric value only">
__lb__lang-c int fun(int a, ...); int main(int argc, char *argv[]){ fun(1,10); fun(2,"cquestionbank"); return 0; } int fun(int a, ...){ va_list vl; va_start(vl,a); if(a==1) printf("%d",va_arg(vl,int)); else printf("\n%s",va_arg(vl,char *)); }
__lb__lang-cs private void txtBox_KeyPress(object sender, KeyPressEventArgs e) { if (!System.Text.RegularExpressions.Regex.IsMatch(e.KeyChar.ToString(), "\\d+")) e.Handled = true; }
__lb__lang-cs public static IEnumerable<Product> GetAllProducts() { using (AdventureWorksEntities db = new AdventureWorksEntities()) { var products = from product in db.Product select product; return products.ToList<Product>(); } }
__lb__lang-java class A { public static synchronized void methodA() { } equivalent to public void methodA() { synchronized(A.class) { } } }
__lb__lang-java protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { List<Part> fileParts = request.getParts().stream().filter(part -> "file".equals(part.getName())).collect(Collectors.toList()); for (Part filePart : fileParts) { String fileName = Paths.get(filePart.getSubmittedFileName()).getFileName().toString(); InputStream fileContent = filePart.getInputStream(); } }
__lb__lang-sh absolute="/foo/bar" current="/foo/baz/foo" relative="../$(relpath "$absolute" "$current")"
__lb__lang-java Function ReturnTrueIfTwoIsTrue(bool val1, val2, val3)) { return (System.Convert.ToInt16(val1) + System.Convert.ToInt16(val2) + System.Convert.ToInt16(val3)) > 1; }
__lb__lang-hs (.) :: (b -> c) -> (a -> b) -> a -> c (.) f g = \x -> f (g x)
__lb__lang-php /** * [...] * @return Order */ orderCollection::current() /** * [...] * @return integer E.g. database identifier of the order */ orderCollection::key() /** * [...] * @return Order */ orderCollection::offsetGet()
__lb__lang-php $string = (strlen($string) > 13) ? substr($string,0,10).
__lb__lang-java List<String> messages = Arrays.asList("Hello", "World!", "How", "Are", "You");
__lb__lang-php function is_json($str) { return is_array(json_decode($str,true)); }
__lb__lang-html <div class="outer-container"> <div class="inner-container"> <div class="element"> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vehicula quam nibh, eu tristique tellus dignissim quis. Integer condimentum ultrices elit ut mattis. Praesent rhoncus tortor metus, nec pellentesque enim mattis nec. Nulla vitae turpis ut dui consectetur pellentesque quis vel est. Curabitur rutrum, mauris ut mollis lobortis, sem est congue lectus, ut sodales nunc leo a libero. Cras quis sapien in mi fringilla tempus condimentum quis velit. Aliquam id aliquam arcu. Morbi tristique aliquam rutrum. Duis tincidunt, orci suscipit cursus molestie, purus nisi pharetra dui, tempor dignissim felis turpis in mi. Vivamus ullamcorper arcu sit amet mauris egestas egestas. Vestibulum turpis neque, condimentum a tincidunt quis, molestie vel justo. Sed molestie nunc dapibus arcu feugiat, ut sollicitudin metus sagittis. Aliquam a volutpat sem. Quisque id magna ultrices, lobortis dui eget, pretium libero. Curabitur aliquam in ante eu ultricies. </div> </div> </div>
__lb__lang-sh $ cat file 1 2 3 4 5 6 7 8 9 10 $ ./shell.sh 7 5 10 9 6 8 2 1 3 4
__lb__lang-php <?php $user = $_POST[ $pass = $_POST[ require ( $result = mysql_query(sprintf("SELECT * FROM accounts WHERE user_Name= if( mysql_num_rows( $result ) > 0) { $array = mysql_fetch_assoc($result); session_start(); $_SESSION[ $_SESSION[ header("Location:loggedin.php"); } else { header("Location:login.php"); } ?>
__lb__lang-cpp 0.5000000000000000 and 0.5000000000000001 are close. 1.0000000000000000 and 1.0000000000000002 are not close.
__lb__lang-java m = N & (N-1); N /= m; if ((m % 2) || (N & 0x07 != 1)) return false;
__lb__lang-java int foo; String StringThatCouldBeANumberOrNot = "26263Hello"; String StringThatCouldBeANumberOrNot2 = "26263"; try { foo = Integer.parseInt(StringThatCouldBeANumberOrNot); } catch (NumberFormatException e) { } try { foo = Integer.parseInt(StringThatCouldBeANumberOrNot2); } catch (NumberFormatException e) { }
__lb__lang-cs string query = @"SELECT foo, bar FROM table WHERE id = 42";
__lb__lang-c static __inline__ int sort6(int *d){ int i, j; for (i = 1; i < 6; i++) { int tmp = d[i]; for (j = i; j >= 1 && tmp < d[j-1]; j--) d[j] = d[j-1]; d[j] = tmp; } }
__lb__lang-cpp template <typename L, typename R> std::string operator+(L left, R right) { std::ostringstream os; os << left << right; return os.str(); }
__lb__lang-c n = reverse(n, sizeof(char)); n = reverse(n, sizeof(short)); n = reverse(n, sizeof(int)); n = reverse(n, sizeof(size_t));
__lb__lang-html <div class="boxdiv" onClick="window.location.href= <style type="text/css"> .boxdiv { cursor:pointer; width:200px; height:200px; background-color: color: text-align:center; font:13px/17px Arial, Helvetica, sans-serif; } </style>
__lb__lang-php function doStuff() { if (true) ⇦ print "yes"; } } ⇧
__lb__lang-hs f <$> ZipList xs1 <*> ... <*> ZipList xsn = ZipList (zipWithn f xs1 ... xsn)
__lb__lang-hs fmap ( \z -> (fmap extract . duplicate) z == z) . inTo $ aTree
__lb__lang-sh string="1.2345E-67" if [[ "$string" =~ ^-?[0-9]*[.,]?[0-9]*[eE]?-?[0-9]+$ ]] then echo $string is a number else echo $string is not a number fi
__lb__lang-sh yourcommand &>> filename syntax error near unexpected token `>'
__lb__lang-php const AWESOME = whatIsMyName(); const WEAKNESS = 4+5+6; const FOO = BAR . OF . SOAP;
__lb__lang-sh find . -depth -type f -not -name *.itp -and -not -name *ane.gro -and -not -name *.top -exec rm
__lb__lang-hs -- file: ch04/Fold.hs myFoldl :: (a -> b -> a) -> a -> [b] -> a myFoldl f z xs = foldr step id xs z where step x g a = g (f a x)
__lb__lang-java get O(n) add O(1) contains O(n) next O(1) remove O(1) iterator.remove O(1)
__lb__lang-java Date date = new Date(); date.setMonth().. date.setYear().. date.setDay().. date.setlong currentTime = date.getTime();
__lb__lang-cs [Flags] public enum Options : byte { None = 0, One = 1 << 0, Two = One << 1, Three = Two << 1, Four = Three << 1, OneAndTwo = One | Two, OneTwoAndThree = One | Two | Three, }
__lb__lang-java 1. new ArrayList<String>(); 2. Arrays.asList("A", "B", "C")
__lb__lang-cs [Flags] public enum ABC { a = 1, b = 2, c = 4 }; public IEnumerable<ABC> Getselected (ABC flags) { var values = flags.ToString().Split( var enums = values.Select(x => (ABC)Enum.Parse(typeof(ABC), x.Trim())); return enums; } ABC temp= ABC.a | ABC.b; var list = getSelected (temp); foreach (var item in list) { Console.WriteLine(item.ToString() + " ID=" + (int)item); }
__lb__lang-hs -- apply (2) to (B (Just (P y1 y2))) join (fmap return = -- def of fmap join (B (Just (P (return y1) (return y2)))) = -- def of return join (B (Just (P (B (Just (P y1 y1))) (B (Just (P y2 y2)))))) = -- from (2) this should equal B (Just (P y1 y2))
__lb__lang-php function endsWith($haystack, $needle) { return substr($haystack,-strlen($needle))===$needle; }
__lb__lang-cs DataTable dt= new DataTable(); dt.Columns.AddRange(New DataColumn[] { new DataColumn("ID",typeOf(System.Int32)), new DataColumn("Name",typeOf(System.String)) }); dt.Rows.Add(new Object[]{1,"Test1"}); dt.Rows.Add(new Object[]{2,"Test2"}); DataRow drow = dt.AsEnumerable().Where(p=>p.Field<Int32>(0)==1).FirstOrDefault();
__lb__lang-java 21 getstatic EnumCompareSpeedTest$TestEnum.ONE : EnumCompareSpeedTest.TestEnum [19] 24 getstatic EnumCompareSpeedTest$TestEnum.TWO : EnumCompareSpeedTest.TestEnum [25] 27 invokevirtual EnumCompareSpeedTest$TestEnum.equals(java.lang.Object) : boolean [28] 30 ifeq 36 36 getstatic EnumCompareSpeedTest$TestEnum.ONE : EnumCompareSpeedTest.TestEnum [19] 39 getstatic EnumCompareSpeedTest$TestEnum.TWO : EnumCompareSpeedTest.TestEnum [25] 42 if_acmpne 48
__lb__lang-java int TaskManagerModel::GetGoatsTeleported(int index) const { int seed = goat_salt_ * (index + 1); return (seed >> 16) & 255; }
__lb__lang-java class A { private Object lock1 = new Object(); public void methodA() { synchronized(lock1 ) { } } }
__lb__lang-golang func Process1(chans []<-chan string, fn func(int, string)) { type item struct { int string } merged := make(chan item) var wg sync.WaitGroup wg.Add(len(chans)) for i, c := range chans { go func(i int, c <-chan string) { // for s := range c { merged <- item{i, s} } wg.Done() }(i, c) } go func() { wg.Wait() close(merged) }() for i := range merged { fn(i.int, i.string) } }
__lb__lang-cs var value = DataBinder.Eval(DateTime.Now, "TimeOfDay.Hours");
__lb__lang-java public String toString() { return getClass().getName() + "@" + Integer.toHexString(hashCode()); }
__lb__lang-golang package main import ( "fmt" "strings" ) func main() { stringSlice := []string{"hello", "world"} stringByte := strings.Join(stringSlice, " ") fmt.Println([]byte(stringByte)) fmt.Println(string([]byte(stringByte))) }
__lb__lang-java package sonpackage; public class Son extends Father { public void sonMethod() { this.foo(); super.foo(); } }
__lb__lang-java at com.example.myproject.MyEntityService.save(MyEntityService.java:59)
__lb__lang-html <div class="box"> <div class="item1">A</div> <div class="item2">B</div> <div class="item3">C</div> </div>
__lb__lang-cpp struct X { virtual void foo(); }; struct Y : X { void foo() {} }; int main() { Y y; }
__lb__lang-cs [RankColumn, MinColumn, MaxColumn, StdDevColumn, MedianColumn] [ClrJob, CoreJob] [HtmlExporter, MarkdownExporter] [MemoryDiagnoser] public class BenchmarkRef { public class C1 { public string Text1; public string Text2; public string Text3; } public struct S1 { public string Text1; public string Text2; public string Text3; } List<C1> testListClass = new List<C1>(); List<S1> testListStruct = new List<S1>(); C1[] testArrayClass; S1[] testArrayStruct; public BenchmarkRef() { for(int i=0;i<1000;i++) { testListClass.Add(new C1 { Text1= i.ToString(), Text2=null, Text3= i.ToString() }); testListStruct.Add(new S1 { Text1 = i.ToString(), Text2 = null, Text3 = i.ToString() }); } testArrayClass = testListClass.ToArray(); testArrayStruct = testListStruct.ToArray(); } [Benchmark] public int TestListClass() { var x = 0; foreach(var i in testListClass) { x += i.Text1.Length + i.Text3.Length; } return x; } [Benchmark] public int TestArrayClass() { var x = 0; foreach (var i in testArrayClass) { x += i.Text1.Length + i.Text3.Length; } return x; } [Benchmark] public int TestListStruct() { var x = 0; foreach (var i in testListStruct) { x += i.Text1.Length + i.Text3.Length; } return x; } [Benchmark] public int TestArrayStruct() { var x = 0; foreach (var i in testArrayStruct) { x += i.Text1.Length + i.Text3.Length; } return x; } [Benchmark] public int TestLinqClass() { var x = testListClass.Select(i=> i.Text1.Length + i.Text3.Length).Sum(); return x; } [Benchmark] public int TestLinqStruct() { var x = testListStruct.Select(i => i.Text1.Length + i.Text3.Length).Sum(); return x; } }
__lb__lang-java view.startAnimation(new SimpleDelayAnimation(delayRunnable, 500));
__lb__lang-html <div id="outer"> <div id="inner">Foo foo</div> </div>
__lb__lang-cpp std::string s; std::string& ref = s; (std::string&)& anotherref = ref;
__lb__lang-java public class DummyBean implements Cloneable { private String dummy; public void setDummy(String dummy) { this.dummy = dummy; } public String getDummy() { return dummy; } @Override public Object clone() throws CloneNotSupportedException { DummyBean cloned = (DummyBean)super.clone(); cloned.setDummy(cloned.getDummy()); return cloned; } }
__lb__lang-sh :; seq 50000000 | paste -s -d+ - | bc 1250000025000000 :; seq 50000001 100000000 | paste -s -d+ - | bc 3750000025000000
__lb__lang-cpp person(const person& that) = delete; person& operator=(const person& that) = delete;
__lb__lang-cpp vector<string> v = split<string>("Hello, there; World", ";,"); vector<wstring> v = split<wstring>(L"Hello, there; World", L";,");
__lb__lang-cs DateTime.UtcNow.AddHours(-30).Humanize() => "yesterday" DateTime.UtcNow.AddHours(-2).Humanize() => "2 hours ago" DateTime.UtcNow.AddHours(30).Humanize() => "tomorrow" DateTime.UtcNow.AddHours(2).Humanize() => "2 hours from now" TimeSpan.FromMilliseconds(1299630020).Humanize() => "2 weeks" TimeSpan.FromMilliseconds(1299630020).Humanize(3) => "2 weeks, 1 day, 1 hour"
__lb__lang-css nav .dropdown-menu { display: block; overflow: hidden; max-height: 0; opacity: 0; transition: max-height 500ms, opacity 300ms; -webkit-transition: max-height 500ms, opacity 300ms; } nav .dropdown:hover .dropdown-menu { max-height: 500px; opacity: 1; transition: max-height 0, opacity 300ms; -webkit-transition: max-height 0, opacity 300ms; }
__lb__lang-c void function() { static int var = 1; var++; printf("%d", var); } int main() { function(); function(); }
__lb__lang-cpp class dumb_array { public: dumb_array(dumb_array&& other) : dumb_array() { swap(*this, other); } };
__lb__lang-cs public static bool TryParseToEnum<TEnum>(string probablyEnumAsString_, out TEnum enumValue_) where TEnum : struct { enumValue_ = (TEnum)Enum.GetValues(typeof(TEnum)).GetValue(0); if(!Enum.IsDefined(typeof(TEnum), probablyEnumAsString_)) return false; enumValue_ = (TEnum) Enum.Parse(typeof(TEnum), probablyEnumAsString_); return true; }
__lb__lang-java public class Singleton { private static final Singleton INSTANCE = new Singleton(); /** The constructor must be private to prevent external instantiation */ private Singleton(){} /** The public static method allowing to get the instance */ public static Singleton getInstance() { return INSTANCE; } }
__lb__lang-php $result = array(); $del_value = 401; foreach($arr as $key =>$value){ if ($value !== $del_value){ $result[$key] = $value; } } return $result
__lb__lang-cs public partial class App : Application { public static readonly SingleInstance Singleton = new SingleInstance(typeof(App).FullName); [STAThread] public static void Main(string[] args) { Singleton.RunFirstInstance(() => { SingleInstanceMain(args); }); } public static void SingleInstanceMain(string[] args) { App app = new App(); app.InitializeComponent(); app.Run(); } }
__lb__lang-hs (_)* : Hom(X, T(Y)) -> Hom(T(X), T(Y)) (=<<) :: (a -> m b) -> (m a -> m b)
__lb__lang-cs using System; using System.IO; private static byte[] ReadFully(string input) { FileStream sourceFile = new FileStream(input, FileMode.Open); BinaryReader binReader = new BinaryReader(sourceFile); byte[] output = new byte[sourceFile.Length]; for (long i = 0; i < sourceFile.Length; i++) output[i] = binReader.ReadByte(); sourceFile.Close(); binReader.Close(); return output; }'
__lb__lang-golang package main import "fmt" func main() { var sessions = map[string] chan int{} sessions["somekey"] = make(chan int) fmt.Printf ("%d\n", len(sessions)) delete(sessions, "somekey") fmt.Printf ("%d\n", len(sessions)) }
__lb__lang-java RetDtaTyp NamFnc(String NamPsgVar) { return RetVar; } RetDtaTyp NamFnc(String NamPsgVar) { return RetVar; } RetDtaTyp NamFnc(int NamPsgVar1, String NamPsgVar2) { return RetVar; }
__lb__lang-java class ImplementsRunnable implements Runnable { private int counter = 0; public void run() { counter++; System.out.println("ImplementsRunnable : Counter : " + counter); } } class ExtendsThread extends Thread { private int counter = 0; public void run() { counter++; System.out.println("ExtendsThread : Counter : " + counter); } } public class ThreadVsRunnable { public static void main(String args[]) throws Exception { ImplementsRunnable rc = new ImplementsRunnable(); Thread t1 = new Thread(rc); t1.start(); Thread.sleep(1000); Thread t2 = new Thread(rc); t2.start(); Thread.sleep(1000); Thread t3 = new Thread(rc); t3.start(); ExtendsThread tc1 = new ExtendsThread(); tc1.start(); Thread.sleep(1000); ExtendsThread tc2 = new ExtendsThread(); tc2.start(); Thread.sleep(1000); ExtendsThread tc3 = new ExtendsThread(); tc3.start(); } }
__lb__lang-html <form> <div> <label><input type="checkbox" /> Label text</label> </div> </form>
__lb__lang-java void cppMethod(int val, int &ref, Dog obj, Dog &objRef, Dog *objPtr, Dog *&objPtrRef) { val = 7; ref = 7; obj.SetName("obj"); objRef.SetName("objRef"); objPtr->SetName("objPtr"); objPtr = new Dog("newObjPtr"); objPtrRef->SetName("objRefPtr"); objPtrRef = new Dog("newObjPtrRef"); } int main() { int a = 0; int b = 0; Dog d0 = Dog("d0"); Dog d1 = Dog("d1"); Dog *d2 = new Dog("d2"); Dog *d3 = new Dog("d3"); cppMethod(a, b, d0, d1, d2, d3); }
__lb__lang-php foreach ($json_a as $key => $value) { echo $key, foreach($value as $v) { echo $v." "; } }
__lb__lang-cpp std::string s(reinterpret_cast<const char *>(Data), Size);
__lb__lang-java public class TestMyStaticClass { public static void main(String []args){ MyStaticClass.setMyStaticMember(5); System.out.println("Static value: " + MyStaticClass.getMyStaticMember()); System.out.println("Value squared: " + MyStaticClass.squareMyStaticMember()); } } public final class MyStaticClass { private MyStaticClass () { myStaticMember = 1; } private static int myStaticMember; public static void setMyStaticMember(int val) { myStaticMember = val; } public static int getMyStaticMember() { return myStaticMember; } public static int squareMyStaticMember() { return myStaticMember * myStaticMember; } }
__lb__lang-java List<String> list = new ArrayList<String>(); list.add("android"); list.add("apple"); String[] stringArray = list.toArray(new String[0]);
__lb__lang-sh echo "hello world" >> read.txt cat read.txt echo "hello siva" >> read.txt cat read.txt
__lb__lang-c uint8_t ui8 = 5; | movb $0x5,-0x45(%rbp) int i = 5; | movl $0x5,-0x3c(%rbp) uint32_t ui32 = 5; | movl $0x5,-0x38(%rbp) uint64_t ui64 = 5; | movq $0x5,-0x10(%rbp) double doub = 5; | movsd 0x328(%rip),%xmm0 movsd %xmm0,-0x8(%rbp)
__lb__lang-java BufferedReader br = new BufferedReader(new FileReader("file.txt"));
__lb__lang-cpp float Q_rsqrt( float number ) { long i; float x2, y; const float threehalfs = 1.5F; x2 = number * 0.5F; y = number; i = * ( long * ) &y; i = 0x5f3759df - ( i >> 1 ); y = * ( float * ) &i; y = y * ( threehalfs - ( x2 * y * y ) ); return y; }
__lb__lang-cs textBox1 = new TextBox(); textBox1.Text = Properties.Resources.SomeText;
__lb__lang-cpp template<class> struct sfinae_true : std::true_type{}; namespace detail{ template<class T, class A0> static auto test_stream(int) -> sfinae_true<decltype(std::declval<T>().stream(std::declval<A0>()))>; template<class, class A0> static auto test_stream(long) -> std::false_type; } template<class T, class Arg> struct has_stream : decltype(detail::test_stream<T, Arg>(0)){};
__lb__lang-sh nano /home/user/bash/backupscript.sh mkdir /home/user/backup/$(date +"%Y-%m-%d") sudo zip -ry /home/user/backup/$(date +"%Y-%m-%d")/etc_rest.zip /etc -x "*apache2*" -x "*php*" -x "*mysql*" sudo zip -ry /home/user/backup/$(date +"%Y-%m-%d")/etc_apache2.zip /etc/apache2 sudo zip -ry /home/user/backup/$(date +"%Y-%m-%d")/etc_php.zip /etc/php sudo zip -ry /home/user/backup/$(date +"%Y-%m-%d")/etc_mysql.zip /etc/mysql sudo zip -ry /home/user/backup/$(date +"%Y-%m-%d")/var_www_rest.zip /var/www -x "*html*" sudo zip -ry /home/user/backup/$(date +"%Y-%m-%d")/var_www_html.zip /var/www/html sudo zip -ry /home/user/backup/$(date +"%Y-%m-%d")/home_user.zip /home/user -x "*backup*" echo "Backup Completed Successfully!" echo "Location: /home/user/backup/$(date +"%Y-%m-%d")" chmod +x /home/user/bash/backupscript.sh sudo ln -s /home/user/bash/backupscript.sh /usr/bin/backupscript
__lb__lang-cs static void Main(string[] args) { Thread.CurrentThread.Priority = ThreadPriority.Highest; Process.GetCurrentProcess().PriorityClass = ProcessPriorityClass.RealTime; long start = 0, stop = 0, elapsed = 0; double avg = 0.0; long temp = Fibo(1); for (int i = 1; i < 100000000; i++) { start = Stopwatch.GetTimestamp(); temp = Fibo(100); stop = Stopwatch.GetTimestamp(); elapsed = stop - start; avg = avg + ((double)elapsed - avg) / i; } Console.WriteLine("Elapsed: " + avg); Console.ReadKey(); } static long Fibo(int n) { long n1 = 0, n2 = 1, fibo = 0; n++; for (int i = 1; i < n; i++) { n1 = n2; n2 = fibo; fibo = n1 + n2; } return fibo; }
__lb__lang-java public static <T> T[] concat(T[] first, T[] second) { T[] result = Arrays.copyOf(first, first.length + second.length); System.arraycopy(second, 0, result, first.length, second.length); return result; }
__lb__lang-cs DataSet ds = new DataSet("New_DataSet"); DataTable dt = new DataTable("New_DataTable"); ds.Locale = System.Threading.Thread.CurrentThread.CurrentCulture; dt.Locale = System.Threading.Thread.CurrentThread.CurrentCulture; OleDbConnection con = new OleDbConnection(dbConnectionString); con.Open(); string sql = "SELECT Whatever FROM MyDBTable;"; OleDbCommand cmd = new OleDbCommand(sql, con); OleDbDataAdapter adptr = new OleDbDataAdapter(); adptr.SelectCommand = cmd; adptr.Fill(dt); con.Close(); ds.Tables.Add(dt); ExcelLibrary.DataSetHelper.CreateWorkbook("MyExcelFile.xls", ds);
__lb__lang-hs {- class SymbolSet tpe where -- MOVED OUT OF CLASS: data Symbol tpe :: * data SSet tpe where Identity :: tpe -> SSet tpe And :: SSet tpe -> Symbol tpe -> SSet tpe -- ADDED KIND SIGNATURES: class HasElem (a :: SSet *) (b :: Symbol *) where instance (SymbolSet tpe) => HasElem (And (Identity tpe) s) s instance (HasElem sset s) => HasElem (And sset s) s
__lb__lang-java package com.mkyong; import com.mkyong.examples.CustomerService; import com.mkyong.examples.exception.NameNotFoundException; import org.junit.Rule; import org.junit.Test; import org.junit.rules.ExpectedException; import static org.hamcrest.CoreMatchers.containsString; import static org.hamcrest.CoreMatchers.is; import static org.hamcrest.Matchers.hasProperty; public class Exception3Test { @Rule public ExpectedException thrown = ExpectedException.none(); @Test public void testNameNotFoundException() throws NameNotFoundException { thrown.expect(NameNotFoundException.class); thrown.expectMessage(is("Name is empty!")); thrown.expect(hasProperty("errCode")); thrown.expect(hasProperty("errCode", is(666))); CustomerService cust = new CustomerService(); cust.findByName(""); } }
__lb__lang-cs public static double DateTimeToUnixTimestamp(DateTime dateTime) { return (TimeZoneInfo.ConvertTimeToUtc(dateTime) - new DateTime(1970, 1, 1, 0, 0, 0, 0, System.DateTimeKind.Utc)).TotalSeconds; }
__lb__lang-cpp template <typename T, U> T calc(const T&, const U&);
__lb__lang-cpp int x = 4; auto y = [&r = x, x = x+1]()->int { r += 2; return x+2; }();
__lb__lang-cpp namespace boost { int function = 0; } int main() { int f = 0; boost::function< int() > f; }
__lb__lang-golang data, err := ioutil.ReadFile("someimage.png") if err != nil { panic(err) } fmt.Println(strconv.Quote(string(data))
__lb__lang-golang const ( MinUint uint = 0 MaxUint = ^MinUint MaxInt = int(MaxUint >> 1) MinInt = ^MaxInt )
__lb__lang-cs (?<Attr><(.*ComponentModel\.)Bindable\(True\)>)( |\r\n)*(?<Def>(Public|Private|Friend|Protected) .*Property )(?<Name>[^ ]*) As (?<Type>.*?)[ |\r\n](?![ |\r\n]*Get)
__lb__lang-cs if (System.Web.HttpContext.Current.Request.Files.AllKeys.Any()) { var pic = System.Web.HttpContext.Current.Request.Files["filekey"]; HttpPostedFileBase filebase = new HttpPostedFileWrapper(pic); var fileName = Path.GetFileName(filebase.FileName); string fileExtension = System.IO.Path.GetExtension(fileName); if (fileExtension == ".xls" || fileExtension == ".xlsx") { string FileName = Guid.NewGuid().GetHashCode().ToString("x"); string dirLocation = Server.MapPath("~/Content/PacketExcel/"); if (!Directory.Exists(dirLocation)) { Directory.CreateDirectory(dirLocation); } string fileLocation = Server.MapPath("~/Content/PacketExcel/") + FileName + fileExtension; filebase.SaveAs(fileLocation); } }
__lb__lang-java fun doActionAfterDelay() launch(UI) { delay(MS_TO_DELAY) actionToTake() } }
__lb__lang-java @RestController- Declare at controller level. @Controller – Declare at controller level. @Component – Declare at Bean/entity level. @Repository – Declare at DAO level. @Service – Declare at BO level.
__lb__lang-perl if ( grep( /^$value$/, @badparams ) ) { print "found"; }
__lb__lang-perl use strict; use warnings; my @array = qw( one ten twenty one ); my %lookup = map { $_ => undef } @array; for my $element ( qw( one two three ) ) { if ( exists $lookup{ $element }) { print "$element\n"; } }
__lb__lang-php $ids = array(1,2,3,7,8,9); $db = new PDO(...); $stmt = $db->prepare( FROM table WHERE id = ANY (string_to_array(:an_array, ); $stmt->bindParam( $stmt->execute();
__lb__lang-sh GLOBIGNORE="*techno*"; cp *Music* /only_good_music/
__lb__lang-cs public partial class IntegerBox : TextBox { public IntegerBox() { InitializeComponent(); this.Text = 0.ToString(); } protected override void OnPaint(PaintEventArgs pe) { base.OnPaint(pe); } private String originalValue = 0.ToString(); private void Integerbox_KeyPress(object sender, KeyPressEventArgs e) { originalValue = this.Text; } private void Integerbox_TextChanged(object sender, EventArgs e) { try { if(String.IsNullOrWhiteSpace(this.Text)) { this.Text = 0.ToString(); } this.Text = Convert.ToInt64(this.Text.Trim()).ToString(); } catch (System.OverflowException) { MessageBox.Show("Value entered is to large max value: " + Int64.MaxValue.ToString(), "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); this.Text = originalValue; } catch (System.FormatException) { this.Text = originalValue; } catch (System.Exception ex) { this.Text = originalValue; MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK , MessageBoxIcon.Error); } } }
__lb__lang-cs public static unsafe class StringExtensions { public static Byte[] ToByteArray(this String s) { } }
__lb__lang-php <?php $fields = array( ); $files = array( array( ) ); $response = http_post_fields("http: ?>
__lb__lang-cpp TextLineSplitter spl( 1000 ); spl.SplitLine( "Item1,,Item2,Item3" ); for( size_t i = 0; i < spl.NumTokens(); i++ ) { printf( "%s\n", spl.GetToken( i ) ); }
__lb__lang-cs ((Suit[])Enum.GetValues(typeof(Suit))).ToList().ForEach(i => DoSomething(i));
__lb__lang-sh for f in *.java do encoding=`file -I $f | cut -f 2 -d";" | cut -f 2 -d=` case $encoding in iso-8859-1) iconv -f iso8859-1 -t utf-8 $f > $f.utf8 mv $f.utf8 $f ;; esac done
__lb__lang-sh try echo false echo catch echo "Error in $__EXCEPTION_SOURCE__ at line: $__EXCEPTION_LINE__!"
__lb__lang-cs Interaction.Shell("copy /b Image1.jpg + Archive.rar Image2.jpg", AppWinStyle.Hide);
__lb__lang-cpp unique_ptr<Shape> make_square() { unique_ptr<Shape> result(new Square); return result; }
__lb__lang-java ObjectWriter ow = new ObjectMapper().writer().withDefaultPrettyPrinter(); System.out.println(ow.writeValueAsString(anyArray));
__lb__lang-java public static void main(String[] args) throws ParseException { String dateStr = "2016-10-19T14:15:36+08:00"; Date date = javax.xml.bind.DatatypeConverter.parseDateTime(dateStr).getTime(); System.out.println(date); }
__lb__lang-c void test() { char so[kDisplayWidth+1]; long int val=1; do { printf("%ld =\t\t% val*=11; } while (val < 100000000); } Output: 00000001 = 0x000001 = 0b00000000000000000000000000000001 00000011 = 0x00000b = 0b00000000000000000000000000001011 00000121 = 0x000079 = 0b00000000000000000000000001111001 00001331 = 0x000533 = 0b00000000000000000000010100110011 00014641 = 0x003931 = 0b00000000000000000011100100110001 00161051 = 0x02751b = 0b00000000000000100111010100011011 01771561 = 0x1b0829 = 0b00000000000110110000100000101001 19487171 = 0x12959c3 = 0b00000001001010010101100111000011
__lb__lang-php $i = 1; var_dump((int) $i); var_dump((bool) $i); var_dump((string) 1);
__lb__lang-golang index := printPositiveAndReturn(val); if val <= 0 { index = slowlyReturn(-val); }
__lb__lang-php class TestEnum extends Enum { public static $TEST1; public static $TEST2; } TestEnum::init();
__lb__lang-hs myDiv :: Int -> Int -> Int myDiv a b = let x = fromIntegral a y = fromIntegral b in truncate (x / y)
__lb__lang-cs using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using System.Windows.Forms; using System.Diagnostics; namespace Sample { static class Program { [STAThread] static void Main() { string thisprocessname = Process.GetCurrentProcess().ProcessName; if (Process.GetProcesses().Count(p => p.ProcessName == thisprocessname) > 1) return; Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); Application.Run(new Sample()); } } }
__lb__lang-java private static final Map<Integer, String> CONSTANT_MAP = Collections.unmodifiableMap(new HashMap<Integer, String>() {{ put(1, "one"); put(2, "two"); }}); CONSTANT_MAP.put(3, "three");
__lb__lang-perl United;Arab;Emirates;AE Antigua;&;Barbuda;AG Netherlands;Antilles;AN American;Samoa;AS Bosnia;and;Herzegovina;BA Burkina;Faso;BF Brunei;Darussalam;BN
__lb__lang-java public static Optional<Fruit> find(String name, List<Fruit> fruits) { for (Fruit fruit : fruits) { if (fruit.getName().equals(name)) { return Optional.of(fruit); } } return Optional.empty(); }
__lb__lang-java Collections.sort(studList, new Comparator<Student>(){ public int compare(Student s1, Student s2) { return s1.getFirstName().compareToIgnoreCase(s2.getFirstName()); } });
__lb__lang-java public static void main(String args[])throws Exception { File f = new File("input.txt"); takeInputIn2DArray(f); } public static void takeInputIn2DArray(File f) throws Exception { Scanner s = new Scanner(f); int a[][] = new int[20][20]; for(int i=0; i<20; i++) { for(int j=0; j<20; j++) { a[i][j] = s.nextInt(); } } }
__lb__lang-php Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 4096 bytes) in C:\\workspace\image_management.php on line 173
__lb__lang-c MY_TYPE a = { .flag = true, .value = 123, .stuff = 0.456 };
__lb__lang-sh date | curl -Gso /dev/null -w %{url_effective} --data-urlencode @- "" | cut -c 3-
__lb__lang-golang GOARCH="amd64" GOBIN="" GOCHAR="6" GOEXE="" GOHOSTARCH="amd64" GOHOSTOS="darwin" GOOS="darwin" GOPATH="/Users/me/gopath" GORACE="" GOROOT="/usr/local/Cellar/go/1.1.1" GOTOOLDIR="/usr/local/Cellar/go/1.1.1/pkg/tool/darwin_amd64" CC="gcc" GOGCCFLAGS="-g -O2 -fPIC -m64 -pthread -fno-common" CGO_ENABLED="1"
__lb__lang-hs (<*>) :: P (a -> b) -> P a -> P b (P pfab) <*> (P pa) = \_ -> Nothing -- fails the laws!
__lb__lang-sh sometext sometext sometext TEXT_TO_BE_REPLACED sometext sometext sometext
__lb__lang-sh ( trap "stty $(stty -g;stty -icanon)" EXIT LC_ALL=C dd bs=1 count=1 >/dev/null 2>&1 ) </dev/tty
__lb__lang-hs vReplicate :: Natty n -> x -> Vec n x vReplicate Zy x = VNil vReplicate (Sy n) x = VCons x (vReplicate n x)
__lb__lang-golang if value, ok := dict["baz"]; ok { fmt.Println("value: ", value) } else { fmt.Println("key not found") }
__lb__lang-sh function a { : ${1?a must take a single argument} }
__lb__lang-php array_reduce($inputs, function($accumulator, $element) { if (valid($element)) $accumulator[] = transform($element); return $accumulator; }, array()) array_reduce($inputs, function($accumulator, $element) { $id = get_id($element); if (is_numeric($id)) $accumulator[] = $id; return $accumulator; }, array())
__lb__lang-cpp Object object1 = new Object(); Object object2 = new Object(); object1 = object2;
__lb__lang-hs dumbFunc :: a -> b -> String dumbFunc _ _ = "always returns the same string" testFold = foldr dumbFunc 0 [1..]
__lb__lang-c union foo x; x.a = 0xDEADBEEF; x.b = 0x22; printf("%x, %x\n", x.a, x.b);
__lb__lang-sh yournumber=1120.01 if [ $(echo "$yournumber" | grep -qE echo "Error: not a number." else echo "Valid number." fi
__lb__lang-php function start_session() { if(version_compare(phpversion(), "5.4.0") != -1){ if (session_status() == PHP_SESSION_NONE) { session_start(); } } else { if(session_id() == session_start(); } } }
__lb__lang-cs public static string CombineUri(params string[] uriParts) { string uri = string.Empty; if (uriParts != null && uriParts.Count() > 0) { char[] trims = new char[] { uri = (uriParts[0] ?? string.Empty).TrimEnd(trims); for (int i = 1; i < uriParts.Count(); i++) { uri = string.Format("{0}/{1}", uri.TrimEnd(trims), (uriParts[i] ?? string.Empty).TrimStart(trims)); } } return uri; }
__lb__lang-cpp i = (i, ++i, 1) + 1; i = (++i, i++, i); int j = i; j = (++i, i++, j*i);
__lb__lang-php $obj_c = (object) null; $obj_c->name = "John"; print($obj_c);
__lb__lang-golang ~/projects/ bin/ pkg/ src/ mypack/ foo.go bar.go mypack_test.go
__lb__lang-java class LeftDto { private int id; private String text; public int getId() { return id; } public int getText() { return text; } } class RightDto { private int id; private int leftId; private String text; public int getId() { return id; } public int getLeftId() { return leftId; } public int getText() { return text; } } class JoinedDto { private int leftId; private int rightId; private String text; public JoinedDto(int leftId,int rightId,String text) { this.leftId = leftId; this.rightId = rightId; this.text = text; } public int getLeftId() { return leftId; } public int getRightId() { return rightId; } public int getText() { return text; } } Collection<LeftDto> leftList = new ArrayList<>(); Collection<RightDto> rightList = new ArrayList<>();
__lb__lang-cs var localDir = Assembly.GetExecutingAssembly().GetDirectoryPath();
__lb__lang-cs Regular expression \d took 00:00:00.2141226 result: 5077/10000 Regular expression [0-9] took 00:00:00.1357972 result: 5077/10000 63.42 % of first Regular expression [0123456789] took 00:00:00.1388997 result: 5077/10000 64.87 % of first
__lb__lang-css .triangle { border-color: yellow blue red green; border-style: solid; border-width: 200px 200px 200px 200px; height: 0px; width: 0px; }
__lb__lang-hs data DVDCommand :: Bool -> Bool -> * -> * where InsertC :: DVD -> DVDCommand False True () EjectC :: DVDCommand True False DVD
__lb__lang-sh $ python -c "import sys; print(sum(int(l) for l in sys.stdin))"
__lb__lang-cs var state = seed; foreach (var value in ints) { state = SumOfQuadraticDistance (average, value, state); } var sumOfQuadraticDistance = state;
__lb__lang-cs [Test] public void PrecisionExampleUnitTest() { decimal a = 500m; decimal b = 99.99m; decimal c = 123.4m; decimal d = 10101.1000000m; decimal e = 908.7650m Assert.That(a.TwoDecimalPlaces().ToString(CultureInfo.InvariantCulture), Is.EqualTo("500.00")); Assert.That(b.TwoDecimalPlaces().ToString(CultureInfo.InvariantCulture), Is.EqualTo("99.99")); Assert.That(c.TwoDecimalPlaces().ToString(CultureInfo.InvariantCulture), Is.EqualTo("123.40")); Assert.That(d.TwoDecimalPlaces().ToString(CultureInfo.InvariantCulture), Is.EqualTo("10101.10")); Assert.That(e.TwoDecimalPlaces().ToString(CultureInfo.InvariantCulture), Is.EqualTo("908.7650")); }
__lb__lang-perl for ($item) { s/&‎nbsp;/ /g; s/<.*?>/ /g; $_ = join(" ", split(" ", $_)); }
__lb__lang-java Employee employee = null; ObjectMapper mapper = new ObjectMapper(); try{ employee = mapper.readValue(newFile("/home/sumit/employee.json"), Employee.class); } catch (JsonGenerationException e){ e.printStackTrace(); }
__lb__lang-java new Thread(new Runnable(){ @Override public void run() { try { } catch (Exception ex) { ex.printStackTrace(); } } }).start();
__lb__lang-java JSONParser jsonParser = new JSONParser(); JSONObject obj = (JSONObject) jsonParser.parse(contentString); String product = (String) jsonObject.get("productId");
__lb__lang-golang package main import ( "errors" "fmt" ) var Colors = newColorRegistry() type Color struct { StringRepresentation string Hex string } func (c *Color) String() string { return c.StringRepresentation } func newColorRegistry() *colorRegistry { red := &Color{"red", "F00"} green := &Color{"green", "0F0"} blue := &Color{"blue", "00F"} return &colorRegistry{ Red: red, Green: green, Blue: blue, colors: []*Color{red, green, blue}, } } type colorRegistry struct { Red *Color Green *Color Blue *Color colors []*Color } func (c *colorRegistry) List() []*Color { return c.colors } func (c *colorRegistry) Parse(s string) (*Color, error) { for _, color := range c.List() { if color.String() == s { return color, nil } } return nil, errors.New("couldn } func main() { fmt.Printf("%s\n", Colors.List()) }
__lb__lang-golang BenchmarkAppendEmpty 50000000 5.0 ns/op BenchmarkAppendPrealloc 50000000 3.5 ns/op BenchmarkCopy 20000000 10.2 ns/op
__lb__lang-c char ReverseBits(char character) { char reversed_character = 0; for (int i = 0; i < 8; i++) { char ith_bit = (c >> i) & 1; reversed_character |= (ith_bit << (sizeof(char) - 1 - i)); } return reversed_character; }
__lb__lang-html <a href="http: <br> <a href="http: <br> <a href="http:
__lb__lang-java T[] array = (T[])Array.newInstance(cls, d1); T[][] array = (T[][])Array.newInstance(cls, d1, d2); T[][][] array = (T[][][])Array.newInstance(cls, d1, d2, d3); T[][][][] array = (T[][][][])Array.newInstance(cls, d1, d2, d3, d4); T[][][][][] array = (T[][][][][])Array.newInstance(cls, d1, d2, d3, d4, d5);
__lb__lang-cs private void OnPropertyChanged<T>([CallerMemberName]string caller = null) { var handler = PropertyChanged; if (handler != null) { handler(this, new PropertyChangedEventArgs(caller)); } }
__lb__lang-cs var implementations = typeof(TypeInTargetAssembly).Assembly.GetTypes() .Where(t => typeof(IMyInterface).IsAssignableFrom(t) && t.IsClass);
__lb__lang-c void bitReverse(int num) { int num_reverse = 0; int size = (sizeof(int)*8) -1; int i=0,j=0; for(i=0,j=size;i<=size,j>=0;i++,j--) { if((num >> i)&1) { num_reverse = (num_reverse | (1<<j)); } } printf("\n rev num = %d\n",num_reverse); }
__lb__lang-java ArrayList<String> places = new ArrayList<String>( Arrays.asList("Buenos Aires", "Córdoba", "La Plata"));
__lb__lang-java Path file = ...; try (BufferedWriter writer = Files.newBufferedWriter(file)) { writer.append("Zero header: ").append( [...] }
__lb__lang-hs instance Monad (Flip :.: Thud) where -- that return x = C (Flip ??? Thud) ...
__lb__lang-hs nop :: IO () nop = sequence_ [] main2 = do s <- getLine if s == "foo" then putStr "You entered foo" else nop
__lb__lang-java class MyRunnable implements Runnable { int var = 10; @Override public void run() { call(); } public void call() { synchronized (this) { for (int i = 0; i < 4; i++) { var++; System.out.println("Current Thread " + Thread.currentThread().getName() + " var value "+var); } } } } public class MutlipleThreadsRunnable { public static void main(String[] args) { MyRunnable runnable1 = new MyRunnable(); MyRunnable runnable2 = new MyRunnable(); Thread t1 = new Thread(runnable1); t1.setName("Thread -1"); Thread t2 = new Thread(runnable2); t2.setName("Thread -2"); Thread t3 = new Thread(runnable1); t3.setName("Thread -3"); t1.start(); t2.start(); t3.start(); } }
__lb__lang-cpp class Base { }; class Derived : public Base { ~Derived() { } };
__lb__lang-hs newtype T r a = Cons { decons :: a -> r -> (a, r) }
__lb__lang-sh git fetch <remote> git log <local_branch_name>..<remote_branch_name> --oneline
__lb__lang-cpp class stack { protected: vector<element> c; }; class window { protected: void registerClass(window_descriptor w); };
__lb__lang-java mapper.readValue(JSON, Entries.class).getEntries();
__lb__lang-cpp template<> const pretty_print::delimiters_values<char> pretty_print::delimiters<std::vector<double>, char>::values = { "|| ", " : ", " ||" }; struct MyDel { static const delimiters_values<char> values; }; const delimiters_values<char> MyDel::values = { "<", "; ", ">" }; int main(int argc, char * argv[]) { std::string cs; std::unordered_map<int, std::string> um; std::map<int, std::string> om; std::set<std::string> ss; std::vector<std::string> v; std::vector<std::vector<std::string>> vv; std::vector<std::pair<int, std::string>> vp; std::vector<double> vd; v.reserve(argc - 1); vv.reserve(argc - 1); vp.reserve(argc - 1); vd.reserve(argc - 1); std::cout << "Printing pairs." << std::endl; while (--argc) { std::string s(argv[argc]); std::pair<int, std::string> p(argc, s); um[argc] = s; om[argc] = s; v.push_back(s); vv.push_back(v); vp.push_back(p); vd.push_back(1./double(i)); ss.insert(s); cs += s; std::cout << " " << p << std::endl; } std::array<char, 5> a{{ std::cout << "Vector: " << v << std::endl << "Incremental vector: " << vv << std::endl << "Another vector: " << vd << std::endl << "Pairs: " << vp << std::endl << "Set: " << ss << std::endl << "OMap: " << om << std::endl << "UMap: " << um << std::endl << "String: " << cs << std::endl << "Array: " << a << std::endl ; std::cout << pretty_print::print_container_helper<std::vector<std::string>, char, std::char_traits<char>, MyDel>(v) << std::endl; std::cout << pretty_print::custom_delims<MyDel>(v) << std::endl; auto a1 = std::make_pair(std::string("Jello"), 9); auto a2 = std::make_tuple(1729); auto a3 = std::make_tuple("Qrgh", a1, 11); auto a4 = std::make_tuple(1729, 2875, std::pair<double, std::string>(1.5, "meow")); int arr[] = { 1, 4, 9, 16 }; std::cout << "C array: " << wrap_array(arr) << std::endl << "Pair: " << a1 << std::endl << "1-tuple: " << a2 << std::endl << "n-tuple: " << a3 << std::endl << "n-tuple: " << a4 << std::endl ; }
__lb__lang-golang export GOPATH="${HOME}/.go" export GOROOT="$(brew --prefix golang)/libexec" export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin" test -d "${GOPATH}" || mkdir "${GOPATH}" test -d "${GOPATH}/src/github.com" || mkdir -p "${GOPATH}/src/github.com"
__lb__lang-sh --dirty[=<mark>] Describe the working tree. It means describe HEAD and appends <mark> (-dirty by default) if the working tree is dirty.
__lb__lang-sh string="1;2" echo $string | cut -d echo $string | cut -d
__lb__lang-cs dynamic data = serializer.Deserialize(json, typeof(object)); data.Date; data.Items.Count; data.Items[0].Name; data.Items[0].Price; data.Items[1].Name; data.Items[1].Price;
__lb__lang-hs > downF (IF 1 :*: IF 2) IF (LF (KF () :*: IF 2) :<-: 1) :*: IF (RF (IF 1 :*: KF ()) :<-: 2) > fmap aroundF it IF (LF (KF () :*: IF (RF (IF 1 :*: KF ()) :<-: 2)) :<-: (LF (KF () :*: IF 2) :<-: 1)) :*: IF (RF (IF (LF (KF () :*: IF 2) :<-: 1) :*: KF ()) :<-: (RF (IF 1 :*: KF ()) :<-: 2))
__lb__lang-perl Global symbol "$test1" requires explicit package name at ./check_global.pl line 24. Execution of ./check_global.pl aborted due to compilation errors.
__lb__lang-html <div data-title="My tooltip" class="tooltip"> <label>Name</label> <input type="text"/> </div>
__lb__lang-sh grep "z-index" . --include=*.js --exclude=*js/lib/* --exclude=*.min.js
__lb__lang-c /* Uses the srand() function to seed the random number generator based on time value, then returns an integer in the range 1 to max. Call this with random(n) where n is an integer, and you get an integer as a return value. */ int random(int max) { srand((unsigned) time(NULL)); return (rand() % max) + 1; }
__lb__lang-html <div id="foo">"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."</div>
__lb__lang-sh debug=true if [ "$debug" = true ]; then echo "\$0=$0";fi BASEDIR=$(dirname "$0") if [ "$debug" = true ]; then echo if [ "$BASEDIR" = "." ]; then BASEDIR="$(pwd)";fi _B2=${BASEDIR:$((${ if [ "$_B2" = "/." ]; then BASEDIR=${BASEDIR::$((${ if [ "$B_" != "/" ]; then if [ "$B_2" = "./" ]; then if [ "$(pwd)" != "/" ]; then BASEDIR="$(pwd)/${BASEDIR:2}"; else BASEDIR="/${BASEDIR:2}";fi else if [ "$(pwd)" != "/" ]; then BASEDIR="$(pwd)/$BASEDIR"; else BASEDIR="/$BASEDIR";fi fi fi if [ "$debug" = true ]; then echo "fixed BASEDIR=$BASEDIR";fi
__lb__lang-golang flag.Usage = func() { fmt.Fprintf(os.Stderr, "%s version %s\n", os.Args[0], VERSION) fmt.Fprintf(os.Stderr, "built %s\n", BUILD_DATE) fmt.Fprintln(os.Stderr, "usage:") flag.PrintDefaults() }
__lb__lang-cs MethodCallExpression methodCallExpr = (MethodCallExpression)expr.Body;
__lb__lang-cs IEnumerable<object> FilteredList() { foreach( object item in FullList ) { if( IsItemInPartialList( item ) yield return item; } }
__lb__lang-cpp std::find(vector.begin(), vector.end(), item) != vector.end()
__lb__lang-c -(NSString*) getSomeStringSafeCheck { return [self getSomeString] != nil ? [self getSomeString] : @""; }
__lb__lang-php return MyFuncs::full_name("John","Doe"); calls the static function full_name in MyFuncs class
__lb__lang-java Map source = new HashMap(){{ put("firstName", "John"); put("lastName", "Smith"); put("organizations", new HashMap(){{ put("0", new HashMap(){{ put("id", "1234"); }}); put("abc", new HashMap(){{ put("id", "5678"); }}); }}); }};
__lb__lang-java for (Type type : types) { for (Type t : types2) { if (some condition) { return; } } }
__lb__lang-java Query<String> stringsStartingWithB = new Query<String>(strings).where( new Query.Func<String, Boolean>(){ public Boolean run(String in) { return in.startsWith("b"); } } );
__lb__lang-sh mydir=${0%/} mydir=${0%/*} creadlink="$mydir/creadlink" shopt -s extglob relpath_ () { path1=$("$creadlink" "$1") path2=$("$creadlink" "$2") orig1=$path1 path1=${path1%/}/ path2=${path2%/}/ while :; do if test ! "$path1"; then break fi part1=${path2 if test "${part1 path1=${path1%/*} continue fi if test "${path2 path1=${path1%/*} continue fi break done part1=$path1 path1=${orig1 depth=${path1 path1=${path2 path1=${depth}${path2 path1=${path1 path1=${path1%/} if test ! "$path1"; then path1=. fi printf "$path1" } relpath_test () { res=$(relpath_ /path1/to/dir1 /path1/to/dir2 ) expected= test_results "$res" "$expected" res=$(relpath_ / /path1/to/dir2 ) expected= test_results "$res" "$expected" res=$(relpath_ /path1/to/dir2 / ) expected= test_results "$res" "$expected" res=$(relpath_ / / ) expected= test_results "$res" "$expected" res=$(relpath_ /path/to/dir2/dir3 /path/to/dir1/dir4/dir4a ) expected= test_results "$res" "$expected" res=$(relpath_ /path/to/dir1/dir4/dir4a /path/to/dir2/dir3 ) expected= test_results "$res" "$expected" } test_results () { if test ! "$1" = "$2"; then printf fi }
__lb__lang-cs var doc = new HtmlDocument(); doc.Load(filePath); var doc = new HtmlDocument(); doc.LoadHtml(html); var url = "http: var web = new HtmlWeb(); var doc = web.Load(url);
__lb__lang-php public function postLogin(Request $request) { $email = $request->get( $data = [ ]; try { $identity = $this->identification->findIdentityByEmailAddress($email); $token = $this->identification->loginWithPassword( $identity, $request->get( ); } catch (FailedIdentification $exception) { $data = [ ] } return new JsonResponse($data); }
__lb__lang-perl my %hash = ( toy => colour => ); print "I have an ", $hash{toy}, " which is coloured ", $hash{colour}, "\n"; my $hashref = \%hash; print "I have an ", $hashref->{toy}, " which is coloured ", $hashref->{colour}, "\n";
__lb__lang-java private class DownloadReceiver extends ResultReceiver{ public DownloadReceiver(Handler handler) { super(handler); } @Override protected void onReceiveResult(int resultCode, Bundle resultData) { super.onReceiveResult(resultCode, resultData); if (resultCode == DownloadService.UPDATE_PROGRESS) { int progress = resultData.getInt("progress"); dialog.setProgress(progress); if (progress == 100) { dialog.dismiss(); } } } }
__lb__lang-golang package main import ( "bytes" "encoding/json" "flag" "fmt" "io/ioutil" "os" ) func main() { indent := flag.String("indent", " ", "indentation string/character for formatter") flag.Parse() src, err := ioutil.ReadAll(os.Stdin) if err != nil { fmt.Fprintf(os.Stderr, "problem reading: %s", err) os.Exit(1) } dst := &bytes.Buffer{} if err := json.Indent(dst, src, "", *indent); err != nil { fmt.Fprintf(os.Stderr, "problem formatting: %s", err) os.Exit(1) } if _, err = dst.WriteTo(os.Stdout); err != nil { fmt.Fprintf(os.Stderr, "problem writing: %s", err) os.Exit(1) } }
__lb__lang-php if (isset($my_array[ echo "My index value is: " . $my_array[ } $my_index_val = isset($my_array[ echo "My index value is: " . $my_index_val;
__lb__lang-cs public string UrlCombine(string url1, string url2) { if (url1.Length == 0) { return url2; } if (url2.Length == 0) { return url1; } url1 = url1.TrimEnd( url2 = url2.TrimStart( return string.Format("{0}/{1}", url1, url2); }
__lb__lang-hs import qualified System.Process as SP clearScreen :: IO () clearScreen = do _ <- SP.system "reset" return ()
__lb__lang-perl use strict; use warnings; my $file = open my $info, $file or die "Could not open $file: $!"; while( my $line = <$info>) { print $line; last if $. == 2; } close $info;
__lb__lang-golang --- prog list "myFunction1" --- 0000 (s.go:5) TEXT myFunction1+0(SB),$16-24 0001 (s.go:6) MOVQ $type."".MyStructType+0(SB),(SP) 0002 (s.go:6) CALL ,runtime.new+0(SB) 0003 (s.go:6) MOVQ 8(SP),AX 0004 (s.go:8) MOVQ AX,.noname+0(FP) 0005 (s.go:8) MOVQ $0,.noname+8(FP) 0006 (s.go:8) MOVQ $0,.noname+16(FP) 0007 (s.go:8) RET , --- prog list "myFunction2" --- 0008 (s.go:11) TEXT myFunction2+0(SB),$0-16 0009 (s.go:12) LEAQ chunk+0(SP),DI 0010 (s.go:12) MOVQ $0,AX 0011 (s.go:14) LEAQ .noname+0(FP),BX 0012 (s.go:14) LEAQ chunk+0(SP),BX 0013 (s.go:14) MOVQ $0,.noname+0(FP) 0014 (s.go:14) MOVQ $0,.noname+8(FP) 0015 (s.go:14) RET ,
__lb__lang-cs public static T DeepClone<T>(this T originalObject) { }
__lb__lang-php $files = new Files(); $results = $files->calculateSize(
__lb__lang-cpp std::string ltrim(const std::string& s) { static const std::regex lws{"^[[:space:]]*", std::regex_constants::extended}; return std::regex_replace(s, lws, ""); } std::string rtrim(const std::string& s) { static const std::regex tws{"[[:space:]]*$", std::regex_constants::extended}; return std::regex_replace(s, tws, ""); } std::string trim(const std::string& s) { return ltrim(rtrim(s)); }
__lb__lang-php /** * Number of days between two dates. * * @param date $dt1 First date * @param date $dt2 Second date * @return int */ function daysBetween($dt1, $dt2) { return date_diff( date_create($dt2), date_create($dt1) )->format( }
__lb__lang-perl use strict; use warnings; opendir my $dh, or die "Can my @files = readdir $dh; closedir $dh or die "Can for my $item (@files) { print "File: $item\n" if -f $item; } use Data::Dumper; print Dumper @files;
__lb__lang-c struct foo { int x; float y; }; struct foo var; struct foo* pvar; var.x = 5; (&var)->y = 14.3; pvar->y = 22.4; (*pvar).x = 6;
__lb__lang-cpp using namespace std; class B{ public: B(){ cout<<"B()\n"; } virtual ~B(){ cout<<"~B()\n"; } }; class D: public B{ public: D(){ cout<<"D()\n"; } ~D(){ cout<<"~D()\n"; } }; int main(){ B *b = new D(); delete b; return 0; } OUTPUT: B() D() ~D() ~B() ============== If you don B() D() ~B() where destruction of ~D() is not done which leads to leak
__lb__lang-html <script src="https: <script src="https: <link href="https: <body> <table> <tr> <th class="text-left">Text align left.</th> <th class="text-center">Text align center.</th> <th class="text-right">Text align right.</th> </tr> <tr> <td class="text-left">Text align left.</td> <td class="text-center">Text align center.</td> <td class="text-right">Text align right.</td> </tr> </table> </body>
__lb__lang-hs ghci> :t undefined :: Container (Replicate (Succ (Succ (Succ (Succ (Succ Zero))))) String)
__lb__lang-css vertical-align :bottom; } display:block; } div {border: 1px solid red;width:100px;} img {width:100px;}
__lb__lang-java String[] VALUES = new String[] {"AB","BC","CD","AE"}; String s; for(int i=0; i< VALUES.length ; i++) { if ( VALUES[i].equals(s) ) { } else{ } }
__lb__lang-php function isJson($string) { return ((is_string($string) && (is_object(json_decode($string)) || is_array(json_decode($string))))) ? true : false; }
__lb__lang-sh one=1 two=2 assert_var_not_null one two echo test 1: return_code=$? assert_var_not_null one two three echo test 2: return_code=$? assert_var_not_null -f one two three echo test 3: return_code=$?
__lb__lang-php <?php class X { function foo() { echo } function bar() { $this->foo(); } } class Y extends X { function foo() { echo } } $x = new Y(); $x->bar(); ?>
__lb__lang-php $ids = array(1,4,7,9,45); $param = "{".implode( $cmd = $db->prepare("SELECT * FROM table WHERE id = ANY (?)"); $result = $cmd->execute(array($param));
__lb__lang-hs $ time ./A +RTS -s ./A +RTS -s 749700 9,961,432,992 bytes allocated in the heap 2,463,072 bytes copied during GC 29,200 bytes maximum residency (1 sample(s)) 187,336 bytes maximum slop **2 MB** total memory in use (0 MB lost due to fragmentation) Generation 0: 19002 collections, 0 parallel, 0.11s, 0.15s elapsed Generation 1: 1 collections, 0 parallel, 0.00s, 0.00s elapsed INIT time 0.00s ( 0.00s elapsed) MUT time 13.15s ( 13.32s elapsed) GC time 0.11s ( 0.15s elapsed) RP time 0.00s ( 0.00s elapsed) PROF time 0.00s ( 0.00s elapsed) EXIT time 0.00s ( 0.00s elapsed) Total time 13.26s ( 13.47s elapsed) %GC time **0.8%** (1.1% elapsed) Alloc rate 757,764,753 bytes per MUT second Productivity 99.2% of total user, 97.6% of total elapsed ./A +RTS -s 13.26s user 0.05s system 98% cpu 13.479 total
__lb__lang-php $(document).on("submit", "form", function(event) { event.preventDefault(); var url=$(this).attr("action"); $.ajax({ url: url, type: dataType: "JSON", data: new FormData(this), processData: false, contentType: false, success: function (data, status) { }, error: function (xhr, desc, err) { console.log("error"); } }); });
__lb__lang-java Generating random integers in the range 1..10. Generated : 9 Generated : 3 Generated : 3 Generated : 9 Generated : 4 Generated : 1 Generated : 3 Generated : 9 Generated : 10 Generated : 10 Done.
__lb__lang-perl package Bug; sub print_me { my ($self) = @_; print "ID: $self->{id}\n"; print "$self->{descr}\n"; print "(Note: problem is fatal)\n" if $self->{type} eq "fatal"; }
__lb__lang-php function __construct() { $paramsNumber=func_num_args(); if($paramsNumber==0){ }else{ $this->overload( } }
__lb__lang-java List someStrings = new ArrayList(); someStrings.add("one"); String one = (String)someStrings.get(0);
__lb__lang-css width: 600px; z-index: 10; } position: fixed; top: 5px; width: 420px; left: 20px; border: 1px solid; height: 10%; background: z-index: 1; }
__lb__lang-hs {- newtype Id t = Id t instance Monad Id where return :: t -> Id t return = Id (=<<) :: (a -> Id b) -> Id a -> Id b f =<< (Id x) = f x
__lb__lang-java final String arr[] = new String[] { "G", "E", "E", "K" }; final List<String> initialList = new ArrayList<String>() {{ add("C"); add("O"); add("D"); add("I"); add("N"); }}; Collections.addAll(initialList, arr);
__lb__lang-hs compose :: Lens b c -> Lens a b -> Lens a c compose f g = Lens (getter f . getter g) $ \c a -> setter g (setter f c (getter g a)) a
__lb__lang-java AndroidNetworking.download(url,dirPath,fileName).build() .setDownloadProgressListener(new DownloadProgressListener() { public void onProgress(long bytesDownloaded, long totalBytes) { bar.setMax((int) totalBytes); bar.setProgress((int) bytesDownloaded); } }).startDownload(new DownloadListener() { public void onDownloadComplete() { ... } public void onError(ANError error) { ... } });
__lb__lang-php function convertArray2Object($defs) { $innerfunc = function ($a) use ( &$innerfunc ) { return (is_array($a)) ? (object) array_map($innerfunc, $a) : $a; }; return (object) array_map($innerfunc, $defs); }
__lb__lang-html <h1 data-title-text="Display Text">Display Text</h1>
__lb__lang-java protected YourType _yourName = null; public YourType YourName{ get { if (_yourName == null) { _yourName = new YourType(); return _yourName; } } }
__lb__lang-java boolean atLeastTwo(boolean a, boolean b, boolean c) { if ((a || b) && (c)) return true; if (a && b) return true; if (true) return false; return Math.random() > 0.5;
__lb__lang-perl After reading a file 3 times redirecting to STDIN: 3 After opening a file using dedicated file handle: 3 read line: 1 read line: 2 (...) read line: 46 before close: 46 after close: 0
__lb__lang-c struct student { int s.no; Char name []; int age; } s1,s2; main() { s1.name; s2.name; }
__lb__lang-css input[type="checkbox"] { display: none; border: none !important; box-shadow: none !important; } input[type="checkbox"] + label span { background: url(http: width: 49px; height: 49px; display: inline-block; vertical-align: middle; } input[type="checkbox"]:checked + label span { background: url(http: width: 49px; height: 49px; vertical-align: middle; }
__lb__lang-sh ssh user@host ARG1=$ARG1 ARG2=$ARG2 echo $ARG1 $ARG2 ENDSSH
__lb__lang-hs data Nat1 = Zero | Succ Nat1 type family Replicate (n::Nat1) x :: [*] type instance Replicate Zero x = type instance Replicate (Succ n) x = x type LotsOfStrings = Replicate (Succ (Succ (Succ (Succ (Succ Zero))))) String
__lb__lang-php <?php $files=glob("abc/*.*"); for($i=0;$i<count($files);$i++): $extension = pathinfo($files[$i], PATHINFO_EXTENSION); $ext[]=$extension; if($extension== } endfor; print_r($ext); ?>
__lb__lang-c gcc -c use_array.c gcc -O1 -S -o with_use_array1.c with_use_array.c use_array.o
__lb__lang-css .halfStyle { /* base char and also the bottom 1/3 */ position: relative; display: inline-block; font-size: 80px; color: transparent; overflow: hidden; white-space: pre; color: text-shadow: 2px 2px 0px } .halfStyle:before { /* creates the top 1/3 */ display: block; z-index: 2; position: absolute; top: 0; height: 33.33%; content: attr(data-content); overflow: hidden; pointer-events: none; color: text-shadow: 2px -2px 0px } .halfStyle:after { /* creates the middle 1/3 */ display: block; position: absolute; z-index: 1; top: 0; height: 66.66%; content: attr(data-content); overflow: hidden; pointer-events: none; color: text-shadow: 2px 2px 0px }
__lb__lang-cs typeof(ISMSRequest).GetTypeInfo().IsAssignableFrom(typeof(T).GetTypeInfo());
__lb__lang-java Map<String,String> map = new HashMap<>(); map.put("SomeKey", "SomeValue"); map.forEach( (k,v) -> [do something with key and value] ); map.forEach( (k,v) -> System.out.println("Key: " + k + ": Value: " + v));
__lb__lang-cpp namespace { void unreferenced() { std::cout << "Unreferenced"; } void referenced() { std::cout << "Referenced"; } } static void static_unreferenced() { std::cout << "Unreferenced"; } static void static_referenced() { std::cout << "Referenced"; } int main() { referenced(); static_referenced(); return 0; }
__lb__lang-sh set -e declare SCRIPT_NAME="$(basename $0)" function usage { echo "Usage: $SCRIPT_NAME <base path> <target file>" echo " Outputs <target file> relative to <base path>" exit 1 } if [ $ declare base=$1 declare target=$2 declare -a base_part=() declare -a target_part=() OFS="$IFS"; IFS= bpl=0; for bp in $base; do case "$bp" in ".");; "..") let "bpl=$bpl-1" ;; *) base_part[${bpl}]="$bp" ; let "bpl=$bpl+1";; esac done tpl=0; for tp in $target; do case "$tp" in ".");; "..") let "tpl=$tpl-1" ;; *) target_part[${tpl}]="$tp" ; let "tpl=$tpl+1";; esac done IFS="$OFS" common=0 for (( i=0 ; i<$bpl ; i++ )); do if [ "${base_part[$i]}" = "${target_part[$common]}" ] ; then let "common=$common+1" else break fi done let "updir=$bpl-$common" || updir=0 if [ $updir -eq 0 ]; then echo . exit fi for (( i=0 ; i<$updir ; i++ )); do echo -n ../ done for (( i=$common ; i<$tpl ; i++ )); do if [ $i -ne $common ]; then echo -n "/" fi if [ "" != "${target_part[$i]}" ] ; then echo -n "${target_part[$i]}" fi done echo
__lb__lang-c if (fabs(theView.frame.origin.x) < VISIBLE_SHIFT) { }
__lb__lang-cpp struct Hello { std::string toString() { return "Hello"; } }; struct Generic {}; namespace { std::string toString() { return "toString not defined"; } template <typename T> class optionalToStringImpl : public T { public: std::string doToString() { // // return toString(); } }; } template <typename T> std::string optionalToString(T & obj) { optionalToStringImpl<T>* temp = reinterpret_cast<optionalToStringImpl<T>*>( &obj); return temp->doToString(); } int main(int argc, char *argv[]) { Hello helloObj; Generic genericObj; std::cout << optionalToString( helloObj) << std::endl; std::cout << optionalToString( genericObj) << std::endl; return 0; }
__lb__lang-cs private static readonly Random getrandom = new Random(); public static int GetRandomNumber(int min, int max) { lock(getrandom) { return getrandom.Next(min, max); } }
__lb__lang-java List list = Arrays.asList(array); list = new LinkedList(Arrays.asList(array)); Set set = new HashSet(Arrays.asList(array));
__lb__lang-sh dpkg -s <pkg-name> 2>/dev/null >/dev/null || sudo apt-get -y install <pkg-name>
__lb__lang-java List<String> newList = new ArrayList<String>(l1); newList.addAll(l2); for(String w:newList) System.out.printf("%s ", w);
__lb__lang-golang 127.0.0.1 5432 <nil> ::1 2345 <nil> localhost 1234 <nil>
__lb__lang-c extern const int i = 0; extern int j; extern "C" { void foo(); }
__lb__lang-cs private static bool IsPowerOfTwo(ulong number) { while (number != 0) { if (number == 1) return true; if ((number & 1) == 1) return false; number = number >> 1; } return false; }
__lb__lang-cs using (ExcelHelper helper = new ExcelHelper(TEMPLATE_FILE_NAME, GENERATED_FILE_NAME)) { helper.Direction = ExcelHelper.DirectionType.TOP_TO_DOWN; helper.CurrentSheetName = "Sheet1"; helper.CurrentPosition = new CellRef("C3"); helper.InsertRange("header"); CellRangeTemplate sample1 = helper.CreateCellRangeTemplate("sample1", new List<string> {"name", "value", "comment"}); helper.InsertRange(sample1, getSample()); helper.DeleteSheet("Sheet3"); }
__lb__lang-cs namespace MyApplication.Helpers.Encoding { public static class EncodingForBase64 { public static string EncodeBase64(this System.Text.Encoding encoding, string text) { if (text == null) { return null; } byte[] textAsBytes = encoding.GetBytes(text); return System.Convert.ToBase64String(textAsBytes); } public static string DecodeBase64(this System.Text.Encoding encoding, string encodedText) { if (encodedText == null) { return null; } byte[] textAsBytes = System.Convert.FromBase64String(encodedText); return encoding.GetString(textAsBytes); } } }
__lb__lang-html <div> <span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Haec et tu ita posuisti, et verba vestra sunt. Non enim iam stirpis bonum quaeret, sed animalis. </span> </div>
__lb__lang-java private static Integer getInteger() { return null; } private static void foo() { int a = 10; if(a == getInteger()) { } }
__lb__lang-sh kill $(ps -o pid= -s $(ps -o sess --no-heading --pid 21709))
__lb__lang-cs public class Startup { public IServiceProvider ConfigureServices(IServiceCollection services) { services.AddMvc().AddJsonOptions(options => { options.SerializerSettings.Converters.Add(new Newtonsoft.Json.Converters.StringEnumConverter()); }); } }
__lb__lang-java <K, V extends Comparable<? super V>> Iterable<Entry<K, V>> sort(Map<K, V> map) { return () -> map.entrySet().stream().sorted(comparingByValue()).iterator(); }
__lb__lang-php function httpPost($url, $data) { $curl = curl_init($url); curl_setopt($curl, CURLOPT_POST, true); curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($data)); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); curl_close($curl); return $response; }
__lb__lang-cpp Global atomic<int> x, y; Thread 1 Thread 2 x.store(17,memory_order_release); cout << y.load(memory_order_acquire) << " "; y.store(37,memory_order_release); cout << x.load(memory_order_acquire) << endl;
__lb__lang-cs [DllImport( "msvcrt.dll", EntryPoint = "memcpy", CallingConvention = CallingConvention.Cdecl, SetLastError = false)] private static extern unsafe void* UnsafeMemoryCopy( void* destination, void* source, uint count); public static byte[] GetUnderlyingBytes(string source) { var length = source.Length * sizeof(char); var result = new byte[length]; unsafe { fixed (char* firstSourceChar = source) fixed (byte* firstDestination = result) { var firstSource = (byte*)firstSourceChar; UnsafeMemoryCopy( firstDestination, firstSource, (uint)length); } } return result; }
__lb__lang-php <?php findWord( function findWord($text) { if (strstr($text, echo } else { echo } } ?>
__lb__lang-java class A { public synchronized void methodA() { } equivalent to public void methodA() { synchronized(this) { } } }
__lb__lang-c int a[]={10,20,30,40,50}; int *p=a; printf("%d\n",*p++); printf("%d\n",*a++);
__lb__lang-java List<String> number = Arrays.asList("1", "2", "3"); Out: ["1", "2", "3"]
__lb__lang-c (set-logic BV) (declare-const mask (_ BitVec 64)) (declare-const multiplicand (_ BitVec 64)) (assert (forall ((x (_ BitVec 64))) (let ((y (bvmul (bvand mask x) multiplicand))) (and (= ((_ extract 63 63) x) ((_ extract 63 63) y)) (= ((_ extract 55 55) x) ((_ extract 62 62) y)) (= ((_ extract 47 47) x) ((_ extract 61 61) y)) (= ((_ extract 39 39) x) ((_ extract 60 60) y)) (= ((_ extract 31 31) x) ((_ extract 59 59) y)) (= ((_ extract 23 23) x) ((_ extract 58 58) y)) (= ((_ extract 15 15) x) ((_ extract 57 57) y)) (= ((_ extract 7 7) x) ((_ extract 56 56) y)) ) ) ) ) (check-sat) (get-model)
__lb__lang-php $value = reset( $array ); $key = key( $array ); unset( $array[ $key ]);
__lb__lang-cs void MyMain(string[] args) { { Console.Write("Demo 1 of shallow and deep copy, using classes and MemberwiseCopy:\n"); var Bob = new Person(30, "Lamborghini"); Console.Write(" Create Bob\n"); Console.Write(" Bob.Age={0}, Bob.Purchase.Description={1}\n", Bob.Age, Bob.Purchase.Description); Console.Write(" Clone Bob >> BobsSon\n"); var BobsSon = Bob.DeepCopy(); Console.Write(" Adjust BobsSon details\n"); BobsSon.Age = 2; BobsSon.Purchase.Description = "Toy car"; Console.Write(" BobsSon.Age={0}, BobsSon.Purchase.Description={1}\n", BobsSon.Age, BobsSon.Purchase.Description); Console.Write(" Proof of deep copy: If BobsSon is a true clone, then adjusting BobsSon details will not affect Bob:\n"); Console.Write(" Bob.Age={0}, Bob.Purchase.Description={1}\n", Bob.Age, Bob.Purchase.Description); Debug.Assert(Bob.Age == 30); Debug.Assert(Bob.Purchase.Description == "Lamborghini"); var sw = new Stopwatch(); sw.Start(); int total = 0; for (int i = 0; i < 100000; i++) { var n = Bob.DeepCopy(); total += n.Age; } Console.Write(" Elapsed time: {0},{1}\n\n", sw.Elapsed, total); } { Console.Write("Demo 2 of shallow and deep copy, using structs:\n"); var Bob = new PersonStruct(30, "Lamborghini"); Console.Write(" Create Bob\n"); Console.Write(" Bob.Age={0}, Bob.Purchase.Description={1}\n", Bob.Age, Bob.Purchase.Description); Console.Write(" Clone Bob >> BobsSon\n"); var BobsSon = Bob.DeepCopy(); Console.Write(" Adjust BobsSon details:\n"); BobsSon.Age = 2; BobsSon.Purchase.Description = "Toy car"; Console.Write(" BobsSon.Age={0}, BobsSon.Purchase.Description={1}\n", BobsSon.Age, BobsSon.Purchase.Description); Console.Write(" Proof of deep copy: If BobsSon is a true clone, then adjusting BobsSon details will not affect Bob:\n"); Console.Write(" Bob.Age={0}, Bob.Purchase.Description={1}\n", Bob.Age, Bob.Purchase.Description); Debug.Assert(Bob.Age == 30); Debug.Assert(Bob.Purchase.Description == "Lamborghini"); var sw = new Stopwatch(); sw.Start(); int total = 0; for (int i = 0; i < 100000; i++) { var n = Bob.DeepCopy(); total += n.Age; } Console.Write(" Elapsed time: {0},{1}\n\n", sw.Elapsed, total); } { Console.Write("Demo 3 of deep copy, using class and serialize/deserialize:\n"); int total = 0; var sw = new Stopwatch(); sw.Start(); var Bob = new Person(30, "Lamborghini"); for (int i = 0; i < 100000; i++) { var BobsSon = MyDeepCopy.DeepCopy<Person>(Bob); total += BobsSon.Age; } Console.Write(" Elapsed time: {0},{1}\n", sw.Elapsed, total); } Console.ReadKey(); }
__lb__lang-sh SCRIPT_OPTS= typeset -A ARRAY_OPTS ARRAY_OPTS=( [foo]=f [bar]=b [foobar]=F [barfoo]=B [help]=h [man]=h ) while getopts ${SCRIPT_OPTS} OPTION ; do if [[ "x$OPTION" == "x-" ]]; then LONG_OPTION=$OPTARG LONG_OPTARG=$(echo $LONG_OPTION | grep "=" | cut -d LONG_OPTIND=-1 [[ "x$LONG_OPTARG" = "x" ]] && LONG_OPTIND=$OPTIND || LONG_OPTION=$(echo $OPTARG | cut -d [[ $LONG_OPTIND -ne -1 ]] && eval LONG_OPTARG="\$$LONG_OPTIND" OPTION=${ARRAY_OPTS[$LONG_OPTION]} [[ "x$OPTION" = "x" ]] && OPTION="?" OPTARG="-$LONG_OPTION" if [[ $( echo "${SCRIPT_OPTS}" | grep -c "${OPTION}:" ) -eq 1 ]]; then if [[ "x${LONG_OPTARG}" = "x" ]] || [[ "${LONG_OPTARG}" = -* ]]; then OPTION=":" OPTARG="-$LONG_OPTION" else OPTARG="$LONG_OPTARG"; if [[ $LONG_OPTIND -ne -1 ]]; then [[ $OPTIND -le $Optnum ]] && OPTIND=$(( $OPTIND+1 )) shift $OPTIND OPTIND=1 fi fi fi fi if [[ "x${OPTION}" != "x:" ]] && [[ "x${OPTION}" != "x?" ]] && [[ "${OPTARG}" = -* ]]; then OPTARG="$OPTION" OPTION=":" fi case "$OPTION" in f ) foo=1 bar=0 ;; b ) foo=0 bar=1 ;; B ) barfoo=${OPTARG} ;; F ) foobar=1 && foobar_name=${OPTARG} ;; h ) usagefull && exit 0 ;; : ) echo "${SCRIPT_NAME}: -$OPTARG: option requires an argument" >&2 && usage >&2 && exit 99 ;; ? ) echo "${SCRIPT_NAME}: -$OPTARG: unknown option" >&2 && usage >&2 && exit 99 ;; esac done shift $((${OPTIND} - 1))
__lb__lang-cs public static class CustomDebug { [DebuggerHidden] public static void Assert(Boolean condition, Func<Exception> exceptionCreator) { ... } } ... CustomDebug.Assert(false, () => new Exception());
__lb__lang-php $url = $getfield = $requestMethod = $twitter = new TwitterAPIExchange($settings); echo $twitter->setGetfield($getfield) ->buildOauth($url, $requestMethod) ->performRequest();
__lb__lang-java String s = Arrays.toString(bytes); System.out.println(s); String[] split = s.substring(1, s.length() - 1).split(", "); byte[] bytes2 = new byte[split.length]; for (int i = 0; i < bytes2.length; i++) bytes2[i] = Byte.parseByte(split[i]);
__lb__lang-java private static <T extends Enum<T>> T valueOf( String name , T defaultVal) { try { return Enum.valueOf(defaultVal.getDeclaringClass() , name); } catch (IllegalArgumentException | NullPointerException e) { return defaultVal; } }
__lb__lang-cs ((System.Data.Entity.Validation.DbEntityValidationException)$exception).EntityValidationErrors
__lb__lang-css form, label { margin: 1em auto; } label { display: block; }
__lb__lang-cs public static T GetEnumFromString<T>(string value, T defaultValue) where T : Enum { if (string.IsNullOrEmpty(value)) return defaultValue; foreach (T item in Enum.GetValues(typeof(T))) { if (item.ToString().ToLower().Equals(value.Trim().ToLower())) return item; } return defaultValue; }
__lb__lang-java module com.foo.bar { requires jdk.incubator.httpclient; }
__lb__lang-sh projects=" web ios android " for project in $projects do cd $HOME/develop/$project && git pull end
__lb__lang-php include("/outside-webroot/db_settings.php"); mysql_connect("localhost", $db_user, $db_pass); unset ($db_user, $db_pass);
__lb__lang-perl open my $fh, read $fh, my $string, -s $fh; close $fh;
__lb__lang-cs var dictionary = new Dictionary<string, int> { { "Key", 12 } }; var aggregateObjectCollection = dictionary.Select( entry => new AggregateObject(entry.Key, entry.Value));
__lb__lang-java 17: iconst_2 18: iload 4 20: imul 21: iload 4 23: imul 24: iadd
__lb__lang-cs var carDic=new Dictionary<int,List<string>>(); for(int i=0;i<persons.length;i++) { var person=persons[i]; if(carDic.ContainsKey(person.PersonId)) { carDic[person.PersonId].Add(person.car); } else { carDic[person.PersonId]=new List<string>(){person.car}; } } var carList=carDic[1];
__lb__lang-java public class TestGenerics { public static void main(String[] args) { Type[] interfaces = TestMySuperGenericType.class.getGenericInterfaces(); for(Type type : interfaces){ Type[] gTypes = ((ParameterizedType)type).getActualTypeArguments(); for(Type gType : gTypes){ System.out.println("Generic type:"+gType.toString()); } } } } interface GenericClass<T> { public void print(T obj); } class TestMySuperGenericType implements GenericClass<Integer> { public void print(Integer obj){} }
__lb__lang-sh case ${filesFound} in "" ) printf "NO files found for target=${fileTarget}\n" ;; * ) printf "FileTarget Files found=${filesFound}\n" ;; esac
__lb__lang-c do { \ extern void you_did_something_bad(void); \ if (!(test)) \ you_did_something_bad(void); \ } while (0)
__lb__lang-perl use strict; use warnings; my $tag = *::->{$tag} = sub { print HTML("body1"); *::->{$tag}("body2");
__lb__lang-java class MyClass extends Foo<T> { .... } MyClass myClassInstance = MyClass.class.newInstance();
__lb__lang-java wget --no-check-certificate -c --header "Cookie: oraclelicense=accept-securebackup-cookie" http:
__lb__lang-cpp class IDemo { public: virtual ~IDemo() {} virtual void OverrideMe() = 0; }; class Child : public IDemo { public: virtual void OverrideMe() { } };
__lb__lang-java Math.ceil(3.0); Math.ceil(3.1); Math.ceil(3.5); Math.ceil(3.9); Math.ceil(-3.0); Math.ceil(-3.1); Math.ceil(-3.5); Math.ceil(-3.9);
__lb__lang-sh if [ "$g" -eq 1 ] && [ "$c" = "123" ] then echo abc elif [ "$g" -eq 2 ] && [ "$c" = "456" ] then echo abc else echo efg fi
__lb__lang-cs { "firstName":"Markoff", "lastName":"Chaney", "dateOfBirth": { "year":"1901", "month":"4", "day":"30" } }
__lb__lang-php <?php $isodate = sprintf("%04d-%02d-%02d", $year, $month, $day); ?>
__lb__lang-java builder - 1 - elapsed: 132us concatenation - 1 - elapsed: 4us creation - 1 - elapsed: 5us builder - 10 - elapsed: 9us concatenation - 10 - elapsed: 26us creation - 10 - elapsed: 5us builder - 100 - elapsed: 77us concatenation - 100 - elapsed: 1669us creation - 100 - elapsed: 43us builder - 1000 - elapsed: 511us concatenation - 1000 - elapsed: 111504us creation - 1000 - elapsed: 282us builder - 10000 - elapsed: 3364us concatenation - 10000 - elapsed: 5709793us creation - 10000 - elapsed: 972us
__lb__lang-php php > $url = <<< <<< > "Which, % of Alice <<< > EOD; php > echo $url, PHP_EOL; "Which, % of Alice php > echo urlencode($url), PHP_EOL; %22Which%2C+%25+of+Alice%27s+tasks+saw+%24s+%40+earnings%3F%22 php > echo rawurlencode($url), PHP_EOL; %22Which%2C%20%25%20of%20Alice%27s%20tasks%20saw%20%24s%20%40%20earnings%3F%22 php > echo rawurldecode(urlencode($url)), PHP_EOL; "Which,+%+of+Alice php > php > echo urldecode(rawurlencode($url)), PHP_EOL; "Which, % of Alice php >
__lb__lang-php <?php $customAlphabet = $generator = new RandomStringGenerator($customAlphabet); $generator->setAlphabet($customAlphabet);
__lb__lang-c static __inline__ int sort6(int * d) { char j, i; int tmp; for (inc = 4; inc > 0; inc -= 3) { for (i = inc; i < 5; i++) { tmp = a[i]; j = i; while (j >= inc && a[j - inc] > tmp) { a[j] = a[j - inc]; j -= inc; } a[j] = tmp; } } }
__lb__lang-php ; modify the absolute path to the cacert.pem file curl.cainfo=c:\php\cacert.pem
__lb__lang-c void use_them(void) { printf("Global variable: %d\n", global_variable++); oddball_struct.a += global_variable; oddball_struct.b -= global_variable / 2; }
__lb__lang-php var_dump(contains( var_dump(contains( var_dump(contains( var_dump(contains( var_dump(contains( var_dump(contains( var_dump(contains( var_dump(contains( var_dump(contains( var_dump(contains( var_dump(contains( var_dump(contains(
__lb__lang-html <form> <div> <input id="blah" type="checkbox"><label for="blah">Label text</label> </div> </form>
__lb__lang-java import java.util.HashMap; public class Test { public static void main(String args[]) { HashMap<Employee, EmployeeVal> aMap = new HashMap<Employee, EmployeeVal>(); Employee emp = new Employee("Vinoth"); EmployeeVal val = new EmployeeVal("Programmer"); aMap.put(emp, val); emp = null; System.gc(); System.out.println("Size of Map" + aMap.size()); } }
__lb__lang-css span { display:inline } span.myclass { background: red }
__lb__lang-cs try { context.SaveChanges(); } catch (DbEntityValidationException e) { var outputLines = new List<string>(); foreach (var eve in e.EntityValidationErrors) { outputLines.Add( $"{DateTime.Now}: Entity of type \"{eve.Entry.Entity.GetType().Name}\" in state \"{eve.Entry.State}\" has the following validation errors:"); outputLines.AddRange(eve.ValidationErrors.Select(ve => $"- Property: \"{ve.PropertyName}\", Error: \"{ve.ErrorMessage}\"")); } File.AppendAllLines(@"c:\temp\dbErrors.txt", outputLines); throw; }
__lb__lang-java System.out.println(tryParseInteger("1234").orElse(-1)); System.out.println(tryParseInteger("foobar").orElse(-1));
__lb__lang-java private static final String ROOT_FILE_PATH="/"; File f=new File(ROOT_FILE_PATH); File[] allSubFiles=f.listFiles(); for (File file : allSubFiles) { if(file.isDirectory()) { System.out.println(file.getAbsolutePath()+" is directory"); } else { System.out.println(file.getAbsolutePath()+" is file"); } }
__lb__lang-java private static class SynchronizedMap<K,V> implements Map<K,V>, Serializable { private static final long serialVersionUID = 1978198479659022715L; private final Map<K,V> m; final Object mutex; SynchronizedMap(Map<K,V> m) { this.m = Objects.requireNonNull(m); mutex = this; } SynchronizedMap(Map<K,V> m, Object mutex) { this.m = m; this.mutex = mutex; } public int size() { synchronized (mutex) {return m.size();} } public boolean isEmpty() { synchronized (mutex) {return m.isEmpty();} } public boolean containsKey(Object key) { synchronized (mutex) {return m.containsKey(key);} } public boolean containsValue(Object value) { synchronized (mutex) {return m.containsValue(value);} } public V get(Object key) { synchronized (mutex) {return m.get(key);} } public V put(K key, V value) { synchronized (mutex) {return m.put(key, value);} } public V remove(Object key) { synchronized (mutex) {return m.remove(key);} } public void putAll(Map<? extends K, ? extends V> map) { synchronized (mutex) {m.putAll(map);} } public void clear() { synchronized (mutex) {m.clear();} } private transient Set<K> keySet; private transient Set<Map.Entry<K,V>> entrySet; private transient Collection<V> values; public Set<K> keySet() { synchronized (mutex) { if (keySet==null) keySet = new SynchronizedSet<>(m.keySet(), mutex); return keySet; } } public Set<Map.Entry<K,V>> entrySet() { synchronized (mutex) { if (entrySet==null) entrySet = new SynchronizedSet<>(m.entrySet(), mutex); return entrySet; } } public Collection<V> values() { synchronized (mutex) { if (values==null) values = new SynchronizedCollection<>(m.values(), mutex); return values; } } public boolean equals(Object o) { if (this == o) return true; synchronized (mutex) {return m.equals(o);} } public int hashCode() { synchronized (mutex) {return m.hashCode();} } public String toString() { synchronized (mutex) {return m.toString();} } @Override public V getOrDefault(Object k, V defaultValue) { synchronized (mutex) {return m.getOrDefault(k, defaultValue);} } @Override public void forEach(BiConsumer<? super K, ? super V> action) { synchronized (mutex) {m.forEach(action);} } @Override public void replaceAll(BiFunction<? super K, ? super V, ? extends V> function) { synchronized (mutex) {m.replaceAll(function);} } @Override public V putIfAbsent(K key, V value) { synchronized (mutex) {return m.putIfAbsent(key, value);} } @Override public boolean remove(Object key, Object value) { synchronized (mutex) {return m.remove(key, value);} } @Override public boolean replace(K key, V oldValue, V newValue) { synchronized (mutex) {return m.replace(key, oldValue, newValue);} } @Override public V replace(K key, V value) { synchronized (mutex) {return m.replace(key, value);} } @Override public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction) { synchronized (mutex) {return m.computeIfAbsent(key, mappingFunction);} } @Override public V computeIfPresent(K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction) { synchronized (mutex) {return m.computeIfPresent(key, remappingFunction);} } @Override public V compute(K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction) { synchronized (mutex) {return m.compute(key, remappingFunction);} } @Override public V merge(K key, V value, BiFunction<? super V, ? super V, ? extends V> remappingFunction) { synchronized (mutex) {return m.merge(key, value, remappingFunction);} } private void writeObject(ObjectOutputStream s) throws IOException { synchronized (mutex) {s.defaultWriteObject();} } }
__lb__lang-hs map_euler = map euler sumEuler = sum . map_euler . mkList
__lb__lang-java Stream.of(Direction.values()).forEach(System.out::println);
__lb__lang-css .container::after { content: ""; display: table; clear: both; }
__lb__lang-php <script> console.log("i am everywhere " + name); </script>
__lb__lang-cpp $ readelf --symbols src1.o 8: 0000000000000000 4 OBJECT GLOBAL DEFAULT 3 local_var_name
__lb__lang-java public class MyCustomClass implements Comparable<MyCustomClass>{
__lb__lang-cs Items = Items.OrderBy(o => Guid.NewGuid().ToString()).ToList();
__lb__lang-php <?php per_days_diff( function per_days_diff($start_date, $end_date) { $per_days = 0; $noOfWeek = 0; $noOfWeekEnd = 0; $highSeason=array("7", "8"); $current_date = strtotime($start_date); $current_date += (24 * 3600); $end_date = strtotime($end_date); $seassion = (in_array(date( $noOfdays = array( while ($current_date <= $end_date) { if ($current_date <= $end_date) { $date = date( array_push($noOfdays,$date); $current_date = strtotime( } } $finalDays = array_shift($noOfdays); $weekFirst = array("week"=>array(),"weekEnd"=>array()); for($i = 0; $i < count($noOfdays); $i++) { if ($noOfdays[$i] == 1) { if($noOfdays[$i+6]==7) { $noOfWeek++; $i=$i+6; } else { $per_days++; } } else if($noOfdays[$i]==5) { if($noOfdays[$i+2] ==7) { $noOfWeekEnd++; $i = $i+2; } else { $per_days++; } } else { $per_days++; } } /*echo $noOfWeek; echo "<br/>"; echo $noOfWeekEnd; echo "<br/>"; print_r($per_days); echo "<br/>"; print_r($weekFirst); */ $duration = array("weeks"=>$noOfWeek, "weekends"=>$noOfWeekEnd, "perDay"=>$per_days, "seassion"=>$seassion); return $duration; ?>
__lb__lang-java static Charset encoding = org.apache.commons.io.Charsets.UTF_8; public static String commons_IOUtils( URL url ) throws IOException { java.io.InputStream in = url.openStream(); try { return IOUtils.toString( in, encoding ); } finally { IOUtils.closeQuietly(in); } } public static String commons_FileUtils( File file ) throws IOException { return FileUtils.readFileToString( file, encoding ); /*List<String> lines = FileUtils.readLines( fileName, encoding ); return lines.stream().collect( Collectors.joining("\n") );*/ }
__lb__lang-java Boolean caught = true; Exception e; try { ... caught = false; } catch (TransformerException te) { e = te; } catch (SocketException se) { e = se; } catch (IOException ie) { e = ie; } if (caught) { someCode(); }
__lb__lang-java public static ArrayList<File> listFilesForFolder(final File folder, final boolean recursivity, final String patternFileFilter) { boolean filteredFile = false; final ArrayList<File> output = new ArrayList<File> (); for (final File fileEntry : folder.listFiles()) { if (fileEntry.isDirectory()) { if (recursivity) { output.addAll(listFilesForFolder(fileEntry, recursivity, patternFileFilter)); } } else { if (patternFileFilter.length() == 0) { filteredFile = true; } else { filteredFile = Pattern.matches(patternFileFilter, fileEntry.getName()); } if (filteredFile) { output.add(fileEntry); } } } return output; }
__lb__lang-c x/(1-1/y) = x * (1+y) / (1-y^2) = x * (1+y) * (1+y^2) / (1-y^4) = ... = x * (1+y) * (1+y^2) * (1+y^4) * ... * (1+y^(2^i)) / (1-y^(2^(i+i)) = x * (1+y) * (1+y^2) * (1+y^4) * ... * (1+y^(2^i))
__lb__lang-java List<String> list = new ArrayList<String>(m.values());
__lb__lang-perl use strict; open (IN, "qq.in") || die "Cannot open qq.in"; while (my $line = <IN>) { chomp $line; print "$line\n"; while ($line ne "") { $line =~ s/^\s+ my $field = ""; if ($line =~ m/^"((?:[^"]|\\.)*)"([^,]*)(?:,|$)/) { $field = "$1$2"; $line = substr($line, length($field)+2); $field =~ s/""/"/g; } elsif ($line =~ m/^([^,]*)(?:,|$)/) { $field = "$1"; $line = substr($line, length($field)); } else { print "WTF?? ($line)\n"; } $line =~ s/^, print " [$field]\n"; } } close (IN);
__lb__lang-golang lock(l); defer unlock(l); for i := 0; i <= 3; i++ { defer fmt.Print(i); }
__lb__lang-java public class poly extends my { public static void main(String[] a) { my m = new poly.1(); m.mymethod(); } }
__lb__lang-cs static readonly Func<X> YCreator = Expression.Lambda<Func<X>>( Expression.New(typeof(Y).GetConstructor(Type.EmptyTypes)) ).Compile(); X x = YCreator();
__lb__lang-java private static MySingleton INSTANCE; public static synchronized MySingleton getInstance() { if (INSTANCE == null) { INSTANCE = new MySingleton(); } return INSTANCE; }
__lb__lang-cs string url = "http: var Webget = new HtmlWeb(); var doc = Webget.Load(url); foreach (HtmlNode node in doc.DocumentNode.SelectNodes(" { names.Add(node.ChildNodes[0].InnerHtml); } foreach (HtmlNode node in doc.DocumentNode.SelectNodes(" { phones.Add(node.ChildNodes[0].InnerHtml); }
__lb__lang-java MutableLongList longList = LongLists.mutable.of(1L, 2L, 3L); MutableCharList charList = CharLists.mutable.of( MutableShortList shortList = ShortLists.mutable.of((short) 1, (short) 2, (short) 3); MutableByteList byteList = ByteLists.mutable.of((byte) 1, (byte) 2, (byte) 3); MutableBooleanList booleanList = BooleanLists.mutable.of(true, false); MutableFloatList floatList = FloatLists.mutable.of(1.0f, 2.0f, 3.0f); MutableDoubleList doubleList = DoubleLists.mutable.of(1.0, 2.0, 3.0);
__lb__lang-sh function wrap_alias() { [[ "$ local alias_name="$1" local aliased_command="$2" local alias_arguments="$3" local num_alias_arguments=$(echo "$alias_arguments" | wc -w) local completion=$(complete -p $aliased_command 2> /dev/null) echo $completion | grep -q -- -F || return 0 local namespace=alias_completion:: local completion_function=${completion completion_function=${completion_function%% *} [[ "${completion_function local wrapper_name="${namespace}${alias_name}" eval " function ${wrapper_name}() { let COMP_CWORD+=$num_alias_arguments args=( \"${alias_arguments}\" ) COMP_WORDS=( $aliased_command \${args[@]} \${COMP_WORDS[@]:1} ) $completion_function } " local new_completion=${completion/-F * /-F $wrapper_name } new_completion="${new_completion% *} $alias_name" eval "$new_completion" } eval "$(alias -p | sed -e unset wrap_alias
__lb__lang-java public class Bar implements IFoo { @Override public void foo() { throw new InterruptedException(); } }
__lb__lang-java List<String> names = .... List<String> toRemove= new ArrayList<String>(); for (String name : names) { toRemove.add(name); } names.removeAll(toRemove);
__lb__lang-php $result = stripos("I love PHP, I love PHP too!", "php"); if ($result === false) { } else { }
__lb__lang-php for ($i=0; $i<count($things); $i++) { ... } foreach ($things as $i=>$thing) { ... }
__lb__lang-cpp std::ifstream t("file.txt"); t.seekg(0, std::ios::end); size_t size = t.tellg(); std::string buffer(size, t.seekg(0); t.read(&buffer[0], size);
__lb__lang-sh cronjob_editor () { if [[ -z "$1" ]] ;then printf " no interval specified\n" ;fi if [[ -z "$2" ]] ;then printf " no command specified\n" ;fi if [[ -z "$3" ]] ;then printf " no action specified\n" ;fi if [[ "$3" == add ]] ;then ( crontab -l | grep -v -F -w "$2" ; echo "$1 $2" ) | crontab - elif [[ "$3" == remove ]] ;then ( crontab -l | grep -v -F -w "$2" ) | crontab - fi } cronjob_editor "$1" "$2" "$3"
__lb__lang-golang package main import "fmt" func Bar() { fmt.Println("Bar") }
__lb__lang-php export PATH=/Applications/MAMP/bin/php/php5.4.10/bin:$PATH
__lb__lang-php <?php echo round(3.4); echo round(3.5); echo round(3.6); echo round(3.6, 0); echo round(1.95583, 2); echo round(1241757, -3); echo round(5.045, 2); echo round(5.055, 2); ?>
__lb__lang-cpp baz(x1); baz(Z(x1)); baz(static_cast<Z>(x1)); baz(y1); baz(Z(y1)); baz(static_cast<Z>(y1));
__lb__lang-java String out = String.join("\n", Files.readAllLines(Paths.get("file.txt")));
__lb__lang-golang type MyStructType struct{} func myFunction1() (*MyStructType, error) { var chunk *MyStructType = new(MyStructType) return chunk, nil } func myFunction2() (*MyStructType, error) { var chunk MyStructType return &chunk, nil }
__lb__lang-html <script language="javascript"> window.location.href = "http: </script>
__lb__lang-cs public class EntryPoint { [STAThread] public static void Main(string[] args) { SingleInstanceManager manager = new SingleInstanceManager(); manager.Run(args); } }
__lb__lang-hs > import qualified Text.Regex as R > R.splitRegex (R.mkRegex "x") "2x3x777" > ["2","3","777"]
__lb__lang-perl use constant { HOME => WORK => MOBILE => }; $phone_number->{type} = HOME;
__lb__lang-cpp ([](){ \ static const decltype(first) arr[] = { first,__VA_ARGS__ }; \ std::vector<decltype(first)> ret(arr, arr + sizeof(arr) / sizeof(*arr)); \ return ret;})()
__lb__lang-php function children( &$parents, $parent, $selected ){ if ($parents[$parent]){ $list = $counter = count($parents[$parent]); $class = array( foreach ($parents[$parent] as $child){ if ($child[ if (!--$counter) $class[] = $list .= $class = array(); $list .= children($parents, $child[ } $list .= return $list; } } $output .= children( $parents, 0, $p_industry_id);
__lb__lang-cpp std::istring a = "Hello, World!"; std::istring b = "hello, world!"; assert( a == b );
__lb__lang-sh cd some_dir ./configure --some-flags make make install
__lb__lang-css td.male { color: blue; } td.female { color: pink; }
__lb__lang-java import java.util.Optional; public class HomeServices { private static final int NOW = 0; private static Optional<HomeServices> service; public static Optional<HomeServices> get() { service = Optional.of(service.orElse(new HomeServices())); return service; } public Optional<Service> getRefrigertorControl() { Service s = new RefrigeratorService(); return Optional.ofNullable(s); } public static void main(String[] args) { Optional<HomeServices> homeServices = HomeServices.get(); if(homeServices != null) { Optional<Service> refrigertorControl = homeServices.get().getRefrigertorControl(); refrigertorControl.ifPresent(HomeServices::switchItOn); } } public static void switchItOn(Service s){ } }
__lb__lang-cpp using namespace std; template<typename T> T toIntegralType(const string &str) { static_assert(is_integral<T>::value, "Integral type required."); T ret; stringstream ss(str); ss >> ret; if ( to_string(ret) != str) throw invalid_argument("Can return ret; }
__lb__lang-java Compiled from "Demonstration.java" public class Demonstration { public Demonstration(); Code: 0: aload_0 1: invokespecial 4: return public void normal(); Code: 0: new 3: dup 4: iconst_1 5: invokespecial 8: astore_1 9: aload_1 10: ldc 12: invokeinterface 17: pop 18: return public void parameterized(); Code: 0: new 3: dup 4: iconst_1 5: invokespecial 8: astore_1 9: aload_1 10: ldc 12: invokeinterface 17: pop 18: return }
__lb__lang-cpp template<class F, class T, class U=decltype(std::declval<F>()(std::declval<T>()))> std::vector<U> fmap(F f, const std::vector<T>& vec) { std::vector<U> result; std::transform(vec.begin(), vec.end(), std::back_inserter(result), f); return result; }
__lb__lang-sh typeset -r __TRUE=0 typeset -r __FALSE=1 function isNumber { typeset TESTVAR="$(echo "$1" | sed [ "${TESTVAR}"x = ""x ] && return ${__TRUE} || return ${__FALSE} } isNumber $1 if [ $? -eq ${__TRUE} ] ; then print "is a number" fi
__lb__lang-java try { YourClass yourClass = new YourClass(); Method method = YourClass.class.getMethod("yourMethodName", ParameterOfThisMethod.class); method.invoke(yourClass, parameter); } catch (Exception e) { e.printStackTrace(); }
__lb__lang-sh variable1=$1 variable2=${2:-$variable1} echo $variable1 echo $variable2
__lb__lang-java for (Integer i : l) { if (i.intValue() == 5){ itemsToRemove.add(i); break; } }
__lb__lang-perl .... main::(./test.pl:29): $b = DB<1> n main::(./test.pl:30): print "STEP " . &$a . " NOW\n"; DB<1> n main::(./test.pl:31): $b = DB<1> n main::(./test.pl:32): print "STEP " . &$a . " AGAIN\n"; DB<1> n Debugged program terminated. Use q to quit or R to restart, use o inhibit_exit to avoid stopping after program termination, h q, h R or h o to get additional info. DB<1>
__lb__lang-php <?php $dirname = "small"; $filename = "upload/".$dirname."/"; if (!is_dir($filename )) { mkdir("upload/" . $dirname, 0777, true); echo "The directory $dirname was successfully created."; exit; } else { echo "The directory $dirname exists."; } ?>
__lb__lang-css form, label { margin: 1em auto; } label { display: block; }
__lb__lang-cs using System; using ClassLibrary1; namespace ConsoleApplication4 { class DifferentAssemblyClass { public DifferentAssemblyClass() { SameAssemblyBaseClass p = new SameAssemblyBaseClass(); Console.WriteLine(p.publicVariable); } } class DifferentAssemblyDerivedClass : SameAssemblyBaseClass { static void Main(string[] args) { DifferentAssemblyDerivedClass p = new DifferentAssemblyDerivedClass(); Console.WriteLine(p.publicVariable); Console.WriteLine(p.protectedVariable); Console.WriteLine(p.protected_InternalVariable); SameAssemblyDerivedClass dd = new SameAssemblyDerivedClass(); dd.test(); } } }
__lb__lang-golang func MustGet(value int) Item { i, err := Get(value) if err != nil { panic(err) } return i }
__lb__lang-hs WHNF = thunk : thunk HNF = 0 : thunk NF = 0 : 1 : 2 : 3 : []
__lb__lang-cs using System; using System.Collections.Generic; using System.Linq; using System.Windows.Forms; using SingleInstanceController_NET; namespace SingleInstance { static class Program { static Form CreateForm() { return new Form1(); } static void OnStartNextInstance(Form mainWindow) { mainWindow.WindowState = FormWindowState.Maximized; } [STAThread] static void Main() { Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); SingleInstanceController controller = new SingleInstanceController(CreateForm, OnStartNextInstance); controller.Run(); } } }
__lb__lang-hs do { do { do { r1 <- do { x <- m; r0 <- m; r0 <- m; = do { = r1 <- f r0; f r0 r1 <- f x; g r1 }; g r1 } g r1 } } }
__lb__lang-cpp std::unique_ptr<Base> &&temporary = std::move(oldPtr); std::unique_ptr<Base> newPtr(temporary);
__lb__lang-golang sudo apt-get install python-software-properties sudo add-apt-repository ppa:duh/golang sudo apt-get update sudo apt-get install golang
__lb__lang-php <?php $arr = [ ]; foreach($arr as $k=>$v) { $kk = is_numeric($k) ? $v : $k; $vv = is_numeric($k) ? null : $v; $arr2[$kk] = $vv; } print_r($arr2);
__lb__lang-java Map<String, String> myMap = new HashMap<>() {{ put("a", "b"); put("c", "d"); }};
__lb__lang-java new ValueComparableMap(Ordering.natural()); new ValueComparableMap(Ordering.from(comparator));
__lb__lang-java Exception in thread "main" java.lang.RuntimeException at test.stack.trace.SomeClass.methodC(SomeClass.java:18) at test.stack.trace.SomeClass.methodB(SomeClass.java:13) at test.stack.trace.SomeClass.methodA(SomeClass.java:9) at test.stack.trace.SomeClass.main(SomeClass.java:27)
__lb__lang-cs [HttpPost] public async Task<JsonResult> CreateUserThenGenerateToken(CreateUserViewModel view) { string passportPicture = null, profilePicture = null; if (view.PassportPicture != null) { passportPicture = SaveFile(view.PassportPicture,acceptedExtention:new List<String>() { ".png", ".Jpeg"},saveInDirectory: "content/img/PassportPicture"); } if (view.ProfilePicture != null) { profilePicture = SaveFile(yourHttpPostedFileBase, acceptedExtention: new List<String>() { ".png", ".Jpeg" }, saveInDirectory: "content/img/ProfilePicture"); } var input = view.MapTo<CreateUserInput>(); input.PassportPicture = passportPicture; input.ProfilePicture = profilePicture; var getUserOutput = await _userAppService.CreateUserThenGenerateToken(input); return new AbpJsonResult(getUserOutput); }
__lb__lang-perl use strict; use warnings; use Scalar::MoreUtils qw( define ); my $name; print "nonempty\n" if length($name = define $name); print "
__lb__lang-sh $ mkdir foo bar $ touch foo/a.txt foo/Music.txt $ find foo -type f ! -name $ ls bar a.txt
__lb__lang-sh IFS=: read -ra arr < <(grep "^$USER:" /etc/passwd) for a in "${arr[@]}"; do echo "[$a]"; done
__lb__lang-cpp switch (val) { /* This *will* work, even in C89 */ int newVal = 42; case VAL: newVal = 1984; break; case ANOTHER_VAL: newVal = 2001; break; }
__lb__lang-cs public string Name { get { return name; } protected set { name = value; } }
__lb__lang-java public class SneakyThrow { public static RuntimeException sneak(Throwable t) { throw SneakyThrow.<RuntimeException> throwGivenThrowable(t); } private static <T extends Throwable> RuntimeException throwGivenThrowable(Throwable t) throws T { throw (T) t; } }
__lb__lang-cs Produce consumable[0] Produce consumable[1] Produce consumable[2] Produce consumable[3] Consume consumable[0] Consume consumable[1] Consume consumable[2] Consume consumable[3]
__lb__lang-cpp template<class T> void f_tmpl () { T::foo * x; /* <-- (A) */ }
__lb__lang-java Collections.sort(Database.arrayList, (o1, o2) -> o1.getStartDate().compareTo(o2.getStartDate()));
__lb__lang-cpp StreamArrayReader::StreamArrayReader(istream * is) { init_stream_array_reader(this, is); }
__lb__lang-java FinancesApi api = FinancesApiBuilder.build("http: api.getStock("INTC").enqueue(new Callback<Stock>(){ @Override public void onResponse(Call<Stock> stockCall, Response<Stock> stockResponse){ Stock stock = stockCall.body(); } @Override public void onResponse(Call<Stock> stockCall, Throwable t){ } }
__lb__lang-c static inline void sort6_insertion_sort_avx(int* d) { __m256i src = _mm256_setr_epi32(d[0], d[1], d[2], d[3], d[4], d[5], 0, 0); __m256i index = _mm256_setr_epi32(0, 1, 2, 3, 4, 5, 6, 7); __m256i shlpermute = _mm256_setr_epi32(7, 0, 1, 2, 3, 4, 5, 6); __m256i sorted = _mm256_setr_epi32(d[0], INT_MAX, INT_MAX, INT_MAX, INT_MAX, INT_MAX, INT_MAX, INT_MAX); __m256i val, gt, permute; unsigned j; val = _mm256_permutevar8x32_epi32(src, _mm256_set1_epi32(I));\ gt = _mm256_cmpgt_epi32(sorted, val);\ permute = _mm256_blendv_epi8(index, shlpermute, gt);\ j = ffs( _mm256_movemask_epi8(gt)) >> 2;\ sorted = _mm256_blendv_epi8(_mm256_permutevar8x32_epi32(sorted, permute),\ val, _mm256_cmpeq_epi32(index, _mm256_set1_epi32(j))) ITER(1); ITER(2); ITER(3); ITER(4); ITER(5); int x[8]; _mm256_storeu_si256((__m256i*)x, sorted); d[0] = x[0]; d[1] = x[1]; d[2] = x[2]; d[3] = x[3]; d[4] = x[4]; d[5] = x[5]; }
__lb__lang-sh export LC_ALL=en_US.UTF-8 start_trash(){ ver="htrash.sh v0.0.4" $TRASH_DIR $TRASH_SIZE echo "Would you like to empty Trash [y/n]?" read ans if [ $ans = y -o $ans = Y -o $ans = yes -o $ans = Yes -o $ans = YES ] then echo " cd $TRASH_DIR && $EMPTY_TRASH fi if [ $ans = n -o $ans = N -o $ans = no -o $ans = No -o $ans = NO ] then echo " fi return $TRUE } start_help(){ echo "HELP COMMANDS-----------------------------" echo "htest www open a homepage " echo "htest trash empty trash " return $TRUE } homepage="" return $TRUE } if [ -z $1 ] then val="*** Unknown ***" elif [ -n $1 ] then val=$1 fi case $val in "trash") start_trash ;; "help") start_help ;; "www") firefox $homepage ;; *) echo "Sorry, I can not get a $val for you!";; esac
__lb__lang-perl use MooseX::Declare; class Foo { use MooseX::MultiMethods; multi method foo (ArrayRef $arg){ say "arg is an array" } multi method foo (HashRef $arg) { say "arg is a hash" } multi method foo (Any $arg) { say "arg is something else" } } Foo->new->foo([]); Foo->new->foo(40);
__lb__lang-java java version "1.7.0" Java(TM) SE Runtime Environment (build 1.7.0-b147) Java HotSpot(TM) 64-Bit Server VM (build 21.0-b17, mixed mode)
__lb__lang-perl $ perl -MCPAN -e shell cpan[1]> o conf prerequisites_policy follow cpan[2]> o conf commit exit
__lb__lang-php set_error_handler(function ($err_severity, $err_msg, $err_file, $err_line, array $err_context) { throw new ErrorException( $err_msg, 0, $err_severity, $err_file, $err_line ); }, E_WARNING); try { $iResult = file_get_contents($sUrl); } catch (Exception $e) { $this->sErrorMsg = $e->getMessage(); } restore_error_handler();
__lb__lang-cpp int compare_strict(double a, double b) { return a < b; }
__lb__lang-c void print(); void execute(void (*f)()); int main() { execute(&print); return 0; } void print() { printf("Hello!"); } void execute(void (*f)()) { f(); }
__lb__lang-java class C { private final MyType mustBeSet; public C(MyType mything) { mustBeSet=Contract.notNull(mything); } private String name = "<unknown>"; public void setName(String s) { name = Contract.notNull(s); } } class Contract { public static <T> T notNull(T t) { if (t == null) { throw new ContractException("argument must be non-null"); return t; } }
__lb__lang-hs fmap extract . duplicate == \z -> fmap (const (here z)) z
__lb__lang-golang gost goCommand [-p {pathName}] -- [goFlags...] [goArgs...]
__lb__lang-cs using System; using System.Net; using System.Net.Mail; namespace SendMailViaGmail { class Program { static void Main(string[] args) { string SendersAddress = "Sendersaddress@gmail.com"; string ReceiversAddress = "ReceiversAddress@yahoo.com"; const string SendersPassword = "Password"; const string subject = "Testing"; const string body = "Hi This Is my Mail From Gmail"; try { SmtpClient smtp = new SmtpClient { Host = "smtp.gmail.com", Port = 587, EnableSsl = true, DeliveryMethod = SmtpDeliveryMethod.Network, Credentials = new NetworkCredential(SendersAddress, SendersPassword), Timeout = 3000 }; MailMessage message = new MailMessage(SendersAddress, ReceiversAddress, subject, body); /*WE use smtp sever we specified above to send the message(MailMessage message)*/ smtp.Send(message); Console.WriteLine("Message Sent Successfully"); Console.ReadKey(); } catch (Exception ex) { Console.WriteLine(ex.Message); Console.ReadKey(); } } } }
__lb__lang-php <?php $ids=array(1,2,3,7,8,9); $db = new PDO(...); $stmt = $db->prepare( FROM table WHERE id = ANY (:an_array)' ); $stmt->bindParam( $stmt->execute(); ?>
__lb__lang-sh ./cli-5.sh -v --loglevel=44 --toc TRUE ./cli-5.sh -v --loglevel=44 --toc=TRUE ./cli-5.sh --loglevel 7 ./cli-5.sh --loglevel=8 ./cli-5.sh -l9 ./cli-5.sh --toc FALSE --loglevel=77 ./cli-5.sh --toc=FALSE --loglevel=77 ./cli-5.sh -l99 -t yyy ./cli-5.sh -l 99 -t yyy
__lb__lang-php $request = new \Zend\Http\PhpEnvironment\Request(); $httpMethod = $request->getMethod();
__lb__lang-golang var t = template.Must(template.New("name").Parse("text")) var validID = regexp.MustCompile(`^[a-z]+\[[0-9]+\]$`)
__lb__lang-java HashMap<String, String> getItems(javax.servlet.http.HttpSession session) { HashMap<?, ?> theHash = (HashMap<?, ?>)session.getAttribute("attributeKey"); HashMap<String, String> returingHash = new HashMap<>(); for (Entry<?, ?> entry : theHash.entrySet()) { returingHash.put((String) entry.getKey(), (String) entry.getValue()); } return returingHash; }
__lb__lang-php (unix_timestamp(DATE2) - unix_timestamp(DATE1)) / 86400
__lb__lang-java Manifest-Version: 1.0 Created-By: 1.7.0_80 (Oracle Corporation) sony@sony-VPCEH25EN:~/Documents$ java -jar first.jar no main manifest attribute, in first.jar
__lb__lang-java final long[] i = {0}; map.entrySet().stream().parallel().forEach(e -> i[0] += e.getKey() + e.getValue());
__lb__lang-css form, label { margin: 1em auto; } label { display: block; } input { outline: none; }
__lb__lang-java Map<String, Long> map = new HashMap<String, Long>(); Queue queue = new PriorityQueue( map.size(), new MapComparable() ); queue.addAll( map.entrySet() ); LinkedHashMap<String, Long> linkedMap = new LinkedHashMap<String, Long>(); for (Map.Entry<String, Long> entry; (entry = queue.poll())!=null;) { linkedMap.put(entry.getKey(), entry.getValue()); } public static class MapComparable implements Comparator<Map.Entry<String, Long>>{ public int compare(Entry<String, Long> e1, Entry<String, Long> e2) { return e1.getValue().compareTo(e2.getValue()); } }
__lb__lang-cpp int main() { MyInstantiatedTemplate m(100); m.dump(); return 0; }
__lb__lang-java Map<String, Object> map = ...; for (String key : map.keySet()) { }
__lb__lang-php $myarray = array_filter($myarray, $myarray = array_filter($myarray);
__lb__lang-cpp c:\dev>cl /nologo helloworld.png cl : Command line warning D9024 : unrecognized source file type helloworld.png : fatal error LNK1107: invalid or corrupt file: cannot read at 0x5172
__lb__lang-c +-------+ 0x1010 | | 0x1011 | typ | 0x1012 | | 0x1013 | | +-------+ 0x1014 | | 0x1015 | str | 0x1016 | | 0x1017 | | +-------+ 0x1018 | | 0x1019 | val | 0x101A | | 0x101B | | +-------+
__lb__lang-html <p><font color= <p><font color= <p><span style="color: chucknorris">Black</span></p>
__lb__lang-html <div class="out" onclick="alert(1)"> <div> <span><img src="http: <div> <span>A lovely clickable option.</span> </div> </div> <div class="out" onclick="alert(2)"> <div> <span><img src="http: <div> <span>Something charming to click on.</span> </div> </div>
__lb__lang-java HashMap items = getItems(session); items.put("this", "that"); Type safety: The method put(Object, Object) belongs to the raw type HashMap. References to generic type HashMap<K,V> should be parameterized.
__lb__lang-sh AmIRoot() { ! (( ${EUID:-0} || $(id -u) )) } AmIRoot && echo
__lb__lang-c a/3 = a * 1/3 a/3 = a * (1/4 + 1/16 + 1/64 + ...) a/3 = a/4 + a/16 + 1/64 + ... a/3 = a >> 2 + a >> 4 + a >> 6 + ...
__lb__lang-golang type MyRouter struct { *mux.Router } func (m *MyRouter) F() { ... } ... r := &MyRouter{router} r.F()
__lb__lang-cs public static string Random(this string chars, int length = 8) { var randomString = new StringBuilder(); var random = new Random(); for (int i = 0; i < length; i++) randomString.Append(chars[random.Next(chars.Length)]); return randomString.ToString(); }
__lb__lang-cs Iterations: 5000000 00:00:00.2659981, Activator.CreateInstance(string, string) 00:00:00.2603770, Activator.CreateInstance(type) 00:00:00.7478936, ConstructorInfo.Invoke 00:00:00.0700757, Compiled expression 00:00:00.0286710, new
__lb__lang-perl for (@badparams) { if ($_ eq $value) { print "found"; } }
__lb__lang-php function startsWith($haystack, $needle) { return substr($haystack, 0, strlen($needle)) == $needle; }
__lb__lang-java List<? extends Number> foo3 = new ArrayList<Number>(); List<? extends Number> foo3 = new ArrayList<Integer>(); List<? extends Number> foo3 = new ArrayList<Double>();
__lb__lang-cs String str = "asdf éß"; String str2 = "asdf gh"; EncodingInfo[] info = Encoding.GetEncodings(); foreach (EncodingInfo enc in info) { System.Console.WriteLine(enc.Name + " - " + enc.GetEncoding().GetByteCount(str) + enc.GetEncoding().GetByteCount(str2)); }
__lb__lang-java public static final <T> Set<T> makeSet(@SuppressWarnings("unchecked") T... o) { return new HashSet<T>() { private static final long serialVersionUID = -3634958843858172518L; { for (T x : o) add(x); } }; }
__lb__lang-html <div id="div_link"> <h2><a href="mylink.htm">The Link and Headline</a></h2> <p>Some more stuff and maybe another <a href="mylink.htm">link</a>.</p> </div>
__lb__lang-cpp std::ifstream t; int length; t.open("file.txt"); t.seekg(0, std::ios::end); length = t.tellg(); t.seekg(0, std::ios::beg); buffer = new char[length]; t.read(buffer, length); t.close();
__lb__lang-cs DateTime myDate; if (!DateTime.TryParse(dateString, out myDate)) { }
__lb__lang-php $result = current(explode("\n", wordwrap($str, $width, "...\n")));
__lb__lang-cs public enum Suits { Spades, Hearts, Clubs, Diamonds, NumSuits } public void PrintAllSuits() { foreach (var suit in Enum.GetValues(typeof(Suits))) { System.Console.WriteLine(suit.ToString()); } }
__lb__lang-css .tri { --wg1: 20px; --wg2: 60px; --hg:30px; width:calc(var(--wg1) + var(--wg2)); height:100px; display:inline-block; background-image: linear-gradient(to bottom right, transparent 50%,red 0), linear-gradient(to bottom left, transparent 50%,red 0); background-size:var(--wg1) var(--hg),var(--wg2) var(--hg); background-position: left bottom,right bottom; background-repeat:no-repeat; }
__lb__lang-java List<User> users = Arrays.asList(user1,user2,user3); users.sort( (u1, u2) -> { return u1.getFirstName.compareTo(u2.getFirstName());});
__lb__lang-cpp template<typename T> struct Foo { T bar; void doSomething(T param) { } }; Foo<int> f;
__lb__lang-java SimpleDateFormat sdf = new SimpleDateFormat("yyyy:MM:dd::HH:mm:ss"); System.out.println(sdf.format(System.currentTimeMillis()));
__lb__lang-cpp void f(const StudentT & s) { cout << s.getId(); cout << s.getName(); }
__lb__lang-html <table> <tr> <td> <div class="centered">This div<br />is centered</div> <p> Lorem ipsum dolor sit amet, nam sint laoreet at, his ne sumo causae, simul decore deterruisset ne mel. Exerci atomorum est ut. At choro vituperatoribus usu. Dico epicurei persequeris quo ex, ea ius zril phaedrum eloquentiam, duo in aperiam admodum fuisset. No quidam consequuntur usu, in amet hinc simul eos. Ex soleat meliore percipitur mea, nihil omittam salutandi ut eos. Mea et impedit facilisi pertinax, ea viris graeci fierent pri, te sonet intellegebat his. Vis denique albucius instructior ad, ex eum iudicabit elaboraret. Sit ea intellegam liberavisse. Nusquam quaestio maiestatis ut qui, eam decore altera te. Unum cibo aliquip ut qui, te mea doming prompta. Ex rebum interesset nam, te nam zril suscipit, qui suavitate explicari appellantur te. Usu brute corpora mandamus eu. Dicit soluta his eu. In sint consequat sed, quo ea tota petentium. Adhuc prompta splendide mel ad, soluta delenit nec cu. </p> </td> <td> <p> Lorem ipsum dolor sit amet, dico choro recteque te cum, ex omnesque consectetuer sed, alii esse utinam et has. An qualisque democritum usu. Ea has habeo labores, laoreet intellegat te mea. Eius equidem inermis vel ne. Ne eum sonet labitur, nec id natum munere. Primis graecis est cu, quis dictas eu mea, eu quem offendit forensibus nec. Id animal mandamus his, vis in sonet tempor luptatum. Ne civibus oporteat comprehensam vix, per facete discere atomorum eu. Mucius probatus volutpat sit an, sumo nominavi democritum eam ut. Ea sit choro graece debitis, per ex verear voluptua epicurei. Id eum wisi dicat, ea sit velit doming cotidieque, eu sea amet delenit. Populo tacimates dissentiunt has cu. Has wisi hendrerit at, et quo doming putent docendi. Ea nibh vide omnium usu. </p> </td> </tr> </table>
__lb__lang-cs static void Main(string[] args) { foreach (int value in Enum.GetValues(typeof(DaysOfWeek))) { Console.WriteLine(((DaysOfWeek)value).ToString()); } foreach (string value in Enum.GetNames(typeof(DaysOfWeek))) { Console.WriteLine(value); } Console.ReadLine(); } public enum DaysOfWeek { monday, tuesday, wednesday }
__lb__lang-sh structure project_name window editor run window terminal run focus editor connect project_name
__lb__lang-cpp the format (-5) or (25) etc... some text.. and then.. 7987...78hjh.hhjg9878
__lb__lang-cs "hello-world123, 456!?".MakeAlphaNumeric(new char[]{ public static class StringExtensions { public static string MakeAlphaNumeric(this string input, params char[] exceptions) { var charArray = input.ToCharArray(); var alphaNumeric = Array.FindAll<char>(charArray, (c => char.IsLetterOrDigit(c)|| exceptions?.Contains(c) == true)); return new string(alphaNumeric); } }
__lb__lang-golang package main import ( "io/ioutil" "bufio" "os" "strconv" ) func main() { out := bufio.NewWriter(os.Stdout) ints := getInts() var T int64 T, ints = ints[0], ints[1:] .. out.WriteString(strconv.Itoa(my_num) + "\n") out.Flush() } } func getInts() []int64 { var buf []byte buf, _ = ioutil.ReadAll(os.Stdin) var ints []int64 num := int64(0) found := false for _, v := range buf { if num = 10*num + int64(v - found = true } else if found { ints = append(ints, num) found = false num = 0 } } if found { ints = append(ints, num) found = false num = 0 } return ints }
__lb__lang-java @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_top); Customer cust=new Customer(); cust.setName("abc"); cust.setCity("xyz"); Intent intent=new Intent(abc.this,xyz.class); intent.putExtra("bundle",cust); startActivity(intent); }
__lb__lang-php <?php $string = file_get_contents("/home/michael/test.json"); $json_a = json_decode($string, true); echo $json_a[ echo $json_a[
__lb__lang-sh [[ -z "$MY_VAR" ]] && MY_VAR="default" [[ -z "$MY_VAR" ]] && MY_VAR="default" || echo "Variable already set."
__lb__lang-java Table<Vertex, Vertex, Double> weightedGraph = HashBasedTable.create(); weightedGraph.put(v1, v2, 4); weightedGraph.put(v1, v3, 20); weightedGraph.put(v2, v3, 5); weightedGraph.row(v1); weightedGraph.column(v3);
__lb__lang-perl package MyClass; my $object = { }; bless $object, "MyClass";
__lb__lang-c int64_t my_int = 999999999999999999; printf("%" PRId64 "\n", my_int);
__lb__lang-sh $ a=hip $ b=hop $ ab=$a$b $ echo $ab hiphop $ echo $a$b hiphop
__lb__lang-cs public static class PathUtilities { public static string GetAdjacentFile(string relativePath) { return GetDirectoryForCaller(1) + relativePath; } public static string GetDirectoryForCaller() { return GetDirectoryForCaller(1); } public static string GetDirectoryForCaller(int callerStackDepth) { var stackFrame = new StackTrace(true).GetFrame(callerStackDepth + 1); return GetDirectoryForStackFrame(stackFrame); } public static string GetDirectoryForStackFrame(StackFrame stackFrame) { return new FileInfo(stackFrame.GetFileName()).Directory.FullName + Path.DirectorySeparatorChar; } }
__lb__lang-cs public class ProxyCreator { public static T MakeINotifyPropertyChanged<T>() where T : class, new() { var proxyGen = new ProxyGenerator(); var proxy = proxyGen.CreateClassProxy( typeof(T), new[] { typeof(INotifyPropertyChanged) }, ProxyGenerationOptions.Default, new NotifierInterceptor() ); return proxy as T; } }
__lb__lang-sh if [ "$(whoami)" == "user" ]; then echo "Executing the installer script" else echo "user is only allowed to execute the installer script" fi
__lb__lang-hs let s0 = 34 s1 = (+ 1) s0 n = (* 12) s1 s2 = (+ 7) s1 in (show n, s2)
__lb__lang-hs data InVec (a :: x) (as :: Vec n x) = forall m z (zs :: Vec x m). (n ~ S m, as ~ VCons z zs) => Here | forall m y z (ys :: Vec x m). (n ~ S m, as ~ VCons y ys) => After (InVec z ys)
__lb__lang-sh cat find_replace | while read pattern replacement ; do sed -i "/${pattern}/c ${replacement}" file done
__lb__lang-golang origin := r.Header.Get("Origin") validOrigin, err := validateOrigin(origin) if err != nil { return err } if validOrigin { w.Header().Set("Access-Control-Allow-Origin", origin) w.Header().Set("Access-Control-Allow-Methods", "POST") w.Header().Set("Access-Control-Allow-Headers", "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization") }
__lb__lang-css .attachFileSpan{ color: cursor:pointer; } .attachFileSpan:hover{ text-decoration: underline; }
__lb__lang-php prettyPrint( $json ) === prettyPrint( prettyPrint( $json ) )
__lb__lang-php <?php class GrandPas { public $name1 = protected $name2 = private $name3 = } $granpaWithoutReflections = new GrandPas; print_r($granpaWithoutReflections);
__lb__lang-java public static byte[] serializeObj(Object obj) throws IOException { ByteArrayOutputStream baOStream = new ByteArrayOutputStream(); ObjectOutputStream objOStream = new ObjectOutputStream(baOStream); objOStream.writeObject(obj); objOStream.flush(); objOStream.close(); return baOStream.toByteArray(); }
__lb__lang-cpp bool isZero(int number) { if (number = 0) return true; else return false; }
__lb__lang-cs using System; using System.IO; using System.Runtime.InteropServices; using System.Text; public class AppInfo { [DllImport("kernel32.dll", CharSet = CharSet.Auto, ExactSpelling = false)] private static extern int GetModuleFileName(HandleRef hModule, StringBuilder buffer, int length); private static HandleRef NullHandleRef = new HandleRef(null, IntPtr.Zero); public static string StartupPath { get { StringBuilder stringBuilder = new StringBuilder(260); GetModuleFileName(NullHandleRef, stringBuilder, stringBuilder.Capacity); return Path.GetDirectoryName(stringBuilder.ToString()); } } }
__lb__lang-php <?php error_reporting( E_ALL ); ?> <html> <head> <title></title> <link rel="icon" type="image/png" href="favicon.ico"> <?php if( $_SERVER[ $err = array(); if( empty( $_POST[ if( empty( $_POST[ if( empty( $_POST[ if( !$err ) { try { $DBH = new PDO( "mysql:host=localhost;dbname=database1", "user", "pass" ); $DBH -> setAttribute( PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION ); $STH = $DBH -> prepare( "delete into table1 (display_name, email, password) values ( :display_name, :email, :password )" ); $STH -> bindParam( $STH -> bindParam( $STH -> bindParam( $STH -> execute(); $STH = $DBH -> prepare( "delete into table2 ( username, status, users_id ) values ( :username, :status, :users_id )" ); $strStatus = 1; $STH -> bindParam( $STH -> bindParam( $STH -> bindParam( $STH -> execute(); $DBH = null; } catch( PDOException $e ) { echo $e -> getMessage(); } header( "Location: ".$_SERVER[ exit; } else { foreach( $_POST as $key => $val ) { $form[$key] = htmlspecialchars($val); } } } else { $form[ } ?> </head> <body> <?php foreach( $err as $line ) { ?> <div style="error"><?php echo $line; ?></div> <?php } ?> <h1>register</h1> <form method="post"> referers id:<br /> <input type="text" name="referer" /><br /><br /> name:<br /> <input type="text" name="display_name" value="<?php echo $form[ email:<br /> <input type="text" name="email" value="<?php echo $form[ password:<br /> <input type="text" name="password" value="<?php echo $form[ <input type="submit" value="register" /> </form> </body> </html>
__lb__lang-php $( class or id also) var formData = $( var url = $.ajax({ type : url : data : formData, dataType : beforeSend : function() { you want like show loaded }, success:function(response){ var obj = eval(response); if(obj) { if(obj.error==0){ alert( } else{ alert( } } }, complete : function() { }, error:function (xhr, ajaxOptions, thrownError){ alert( } }); event.preventDefault(); });
__lb__lang-hs instance Diff t => Comonad (Zipper t) where extract = here duplicate = around
__lb__lang-css .container{ height:180px; border:3px solid display:flex; align-items:stretch; } div { display:flex; border:3px solid } .second { display:flex; flex-grow:1; border:3px solid }
__lb__lang-java if(clazz.isArray()){ Class<?> arrayType = clazz.getComponentType(); attributeValue = Array.newInstance(arrayType, 0); }
__lb__lang-hs colorPixel :: World -> ((Float,Float),([(Float,Float)],[(Float,Float)])) -> Color
__lb__lang-java import java.io.File; import java.util.ArrayList; import java.util.List; public class AvoidNullExp { public static void main(String[] args) { List<File> fileList =new ArrayList<>(); final File folder = new File("g:/master"); new AvoidNullExp().listFilesForFolder(folder, fileList); } public void listFilesForFolder(final File folder,List<File> fileList) { File[] filesInFolder = folder.listFiles(); if (filesInFolder != null) { for (final File fileEntry : filesInFolder) { if (fileEntry.isDirectory()) { System.out.println("DIR : "+fileEntry.getName()); listFilesForFolder(fileEntry,fileList); } else { System.out.println("FILE : "+fileEntry.getName()); fileList.add(fileEntry); } } } } }
__lb__lang-cs SomeEnum enum = (SomeEnum)Enum.Parse(typeof(SomeEnum), "EnumValue");
__lb__lang-c typedef enum {RANDOM, IMMEDIATE, SEARCH} strategy_type; strategy_type my_strategy = IMMEDIATE;
__lb__lang-perl $ perldoc perllocal | grep Module $ perldoc perllocal | grep -E
__lb__lang-php header( $json_ugly = $json_pretty = json_encode(json_decode($json_ugly), JSON_PRETTY_PRINT); echo $json_pretty;
__lb__lang-sh foo="Today is: " foo=$(printf "%s %s" "$foo" "$(date)") echo $foo Today is: Sun Aug 4 11:58:23 CEST 2013
__lb__lang-java Long.toString(Math.abs( UUID.randomUUID().getLeastSignificantBits(), 36));
__lb__lang-java Set<Integer> set = new HashSet<Integer>(); set.add(3.45);
__lb__lang-sh SHELL ["/bin/bash", "-c", "source /usr/local/bin/virtualenvwrapper.sh"]
__lb__lang-cs public static string ByteArrayToString(byte[] ba) { StringBuilder hex = new StringBuilder(ba.Length * 2); for(int i=0; i < ga.Length; i++) hex.Append(ba[i].ToString("X2")); return hex.ToString(); }
__lb__lang-perl /etc/port1-192.9.200.1-255.555.255.0 /etc/port1-192.90.2.1-255.555.0.0 /etc/port2-192.9.200.1-255.555.255.0 /etc/port2-192.90.2.1-255.555.0.0 /etc/port3-192.9.200.1-255.555.255.0 /etc/port3-192.90.2.1-255.555.0.0 /etc/port4-192.9.200.1-255.555.255.0 /etc/port4-192.90.2.1-255.555.0.0 /etc/port5-192.9.200.1-255.555.255.0 /etc/port5-192.90.2.1-255.555.0.0
__lb__lang-cpp const float x[16] = { 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6}; const float z[16] = {1.123, 1.234, 1.345, 156.467, 1.578, 1.689, 1.790, 1.812, 1.923, 2.034, 2.145, 2.256, 2.367, 2.478, 2.589, 2.690}; float y[16]; for (int i = 0; i < 16; i++) { y[i] = x[i]; } for (int j = 0; j < 9000000; j++) { for (int i = 0; i < 16; i++) { y[i] *= x[i]; y[i] /= z[i]; y[i] = y[i] + 0.1f; y[i] = y[i] - 0.1f; } }
__lb__lang-java Intent iPODetails = new Intent(ActivityOne.this, ActivityTwo.class); iPODetails.putExtra("poSuppliersDetails", poSuppliersDetails);
__lb__lang-cs string dateTime = "01/08/2008 14:50:50.42"; DateTime dt = Convert.ToDateTime(dateTime); Console.WriteLine("Year: {0}, Month: {1}, Day: {2}, Hour: {3}, Minute: {4}, Second: {5}, Millisecond: {6}", dt.Year, dt.Month, dt.Day, dt.Hour, dt.Minute, dt.Second, dt.Millisecond);
__lb__lang-php function mysql_insert($table, $inserts) { $keys = array_keys($inserts); exec_query("START TRANSACTION;"); $query= exec_query($query); $id= mysql_insert_id(); if (mysql_error()) { exec_query("ROLLBACK;"); die("Error: $query"); } else { exec_query("COMMIT;"); } return $id; }
__lb__lang-java public static Scanner input = new Scanner(System.in); public static void main(String[] args) { System.out.print("Insert a number: "); int number = input.nextInt(); System.out.print("Text1: "); String text1 = input.next(); System.out.print("Text2: "); String text2 = input.next(); }
__lb__lang-c static const unsigned char BitReverseTable256[] = { 0x00, 0x80, 0x40, 0xC0, 0x20, 0xA0, 0x60, 0xE0, 0x10, 0x90, 0x50, 0xD0, 0x30, 0xB0, 0x70, 0xF0, 0x08, 0x88, 0x48, 0xC8, 0x28, 0xA8, 0x68, 0xE8, 0x18, 0x98, 0x58, 0xD8, 0x38, 0xB8, 0x78, 0xF8, 0x04, 0x84, 0x44, 0xC4, 0x24, 0xA4, 0x64, 0xE4, 0x14, 0x94, 0x54, 0xD4, 0x34, 0xB4, 0x74, 0xF4, 0x0C, 0x8C, 0x4C, 0xCC, 0x2C, 0xAC, 0x6C, 0xEC, 0x1C, 0x9C, 0x5C, 0xDC, 0x3C, 0xBC, 0x7C, 0xFC, 0x02, 0x82, 0x42, 0xC2, 0x22, 0xA2, 0x62, 0xE2, 0x12, 0x92, 0x52, 0xD2, 0x32, 0xB2, 0x72, 0xF2, 0x0A, 0x8A, 0x4A, 0xCA, 0x2A, 0xAA, 0x6A, 0xEA, 0x1A, 0x9A, 0x5A, 0xDA, 0x3A, 0xBA, 0x7A, 0xFA, 0x06, 0x86, 0x46, 0xC6, 0x26, 0xA6, 0x66, 0xE6, 0x16, 0x96, 0x56, 0xD6, 0x36, 0xB6, 0x76, 0xF6, 0x0E, 0x8E, 0x4E, 0xCE, 0x2E, 0xAE, 0x6E, 0xEE, 0x1E, 0x9E, 0x5E, 0xDE, 0x3E, 0xBE, 0x7E, 0xFE, 0x01, 0x81, 0x41, 0xC1, 0x21, 0xA1, 0x61, 0xE1, 0x11, 0x91, 0x51, 0xD1, 0x31, 0xB1, 0x71, 0xF1, 0x09, 0x89, 0x49, 0xC9, 0x29, 0xA9, 0x69, 0xE9, 0x19, 0x99, 0x59, 0xD9, 0x39, 0xB9, 0x79, 0xF9, 0x05, 0x85, 0x45, 0xC5, 0x25, 0xA5, 0x65, 0xE5, 0x15, 0x95, 0x55, 0xD5, 0x35, 0xB5, 0x75, 0xF5, 0x0D, 0x8D, 0x4D, 0xCD, 0x2D, 0xAD, 0x6D, 0xED, 0x1D, 0x9D, 0x5D, 0xDD, 0x3D, 0xBD, 0x7D, 0xFD, 0x03, 0x83, 0x43, 0xC3, 0x23, 0xA3, 0x63, 0xE3, 0x13, 0x93, 0x53, 0xD3, 0x33, 0xB3, 0x73, 0xF3, 0x0B, 0x8B, 0x4B, 0xCB, 0x2B, 0xAB, 0x6B, 0xEB, 0x1B, 0x9B, 0x5B, 0xDB, 0x3B, 0xBB, 0x7B, 0xFB, 0x07, 0x87, 0x47, 0xC7, 0x27, 0xA7, 0x67, 0xE7, 0x17, 0x97, 0x57, 0xD7, 0x37, 0xB7, 0x77, 0xF7, 0x0F, 0x8F, 0x4F, 0xCF, 0x2F, 0xAF, 0x6F, 0xEF, 0x1F, 0x9F, 0x5F, 0xDF, 0x3F, 0xBF, 0x7F, 0xFF }; unsigned int v; unsigned int c; c = (BitReverseTable256[v & 0xff] << 24) | (BitReverseTable256[(v >> 8) & 0xff] << 16) | (BitReverseTable256[(v >> 16) & 0xff] << 8) | (BitReverseTable256[(v >> 24) & 0xff]); unsigned char * p = (unsigned char *) &v; unsigned char * q = (unsigned char *) &c; q[3] = BitReverseTable256[p[0]]; q[2] = BitReverseTable256[p[1]]; q[1] = BitReverseTable256[p[2]]; q[0] = BitReverseTable256[p[3]];
__lb__lang-sh time { for (( i=1; i<10000; i++ )); do echo 1 >/dev/null done }
__lb__lang-sh i=2 end=5 while [ $i -le $end ]; do echo $i i=$(($i+1)) done
__lb__lang-java class A { class B { } static class C { static int x; } } class Test { public static void main(String… str) { A o=new A(); A.B obj1 =o.new B(); A.C obj2 =new A.C(); } }
__lb__lang-cpp dumb_array& operator=(const dumb_array& other) { dumb_array temp(other); swap(*this, temp); return *this; }
__lb__lang-cpp foo *safe_foo_malloc() { static_assert(std::is_pod<foo>::value, "foo must be POD"); return static_cast<foo*>(malloc(sizeof(foo))); }
__lb__lang-cs MemoryStream source = new MemoryStream(byteArray); MemoryStream copy = new MemoryStream(byteArray);
__lb__lang-golang accounts := router.Path("/accounts").Subrouter() accounts.Methods("POST").Handler(AccountsCreate) accounts.Methods("OPTIONS").Handler(AccountsCreatePreFlight)
__lb__lang-perl $ awk United Arab Emirates AE Antigua & Barbuda AG Netherlands Antilles AN American Samoa AS Bosnia and Herzegovina BA Burkina Faso BF Brunei Darussalam BN
__lb__lang-cs [Flags] enum SandwichStuff { Cheese = 1, Pickles = 2, Chips = 4, Ham = 8, Eggs = 16, PeanutButter = 32, Jam = 64 }; public Sandwich MakeSandwich(SandwichStuff stuff) { Console.WriteLine(stuff.ToString()); } MakeSandwich(SandwichStuff.Cheese | SandwichStuff.Ham | SandwichStuff.PeanutButter);
__lb__lang-cs Dictionary<String, Double> myProductPrices = new Dictionary<String, Double>(); myProductPrices.ToList().ForEach(kvP => { kvP.Value *= 1.15; Console.Writeline(String.Format("Product });
__lb__lang-java public class Singleton<T> implements Supplier<T> { private boolean initialized; private Supplier<T> singletonSupplier; public Singleton(T singletonValue) { this.singletonSupplier = () -> singletonValue; } public Singleton(Supplier<T> supplier) { this.singletonSupplier = () -> { synchronized (supplier) { if (!initialized) { T singletonValue = supplier.get(); singletonSupplier = () -> singletonValue; initialized = true; } return singletonSupplier.get(); } }; } @Override public T get() { return singletonSupplier.get(); } }
__lb__lang-html <div id="header"> <h1>Header title</h1> Header content (one or multiple lines) </div>
__lb__lang-perl use ExtUtils::Installed; my $inst = ExtUtils::Installed->new(); my @modules = $inst->modules(); foreach $module (@modules){ print $module ." - ". $inst->version($module). "\n"; } =head1 ABOUT This scripts lists installed cpan modules using the ExtUtils modules =head1 FORMAT Prints each module in the following format <name> - <version> =cut
__lb__lang-cs Version version = Assembly.GetEntryAssembly().GetName().Version;
__lb__lang-java package com.java.java8; import java.nio.file.Files; import java.nio.file.Paths; import java.util.stream.Stream; /** * The Class ReadLargeFile. * * @author Ankit Sood Apr 20, 2017 */ public class ReadLargeFile { /** * The main method. * * @param args * the arguments */ public static void main(String[] args) { try { Stream<String> stream = Files.lines(Paths.get("C:\\Users\\System\\Desktop\\demoData.txt")); stream.forEach(System.out::println); } catch (Exception e) { e.printStackTrace(); } } }
__lb__lang-sh 127.0.0.1 - - [30/Dec/2010 22:18:17] "GET / HTTP/1.0" 200 -
__lb__lang-cpp using namespace std; int main() { const auto M = 2; const auto N = 2; auto array = new double[M][N]; array[0][0] = 2; array[1][0] = 3; array[0][1] = 4; array[1][1] = 5; delete[] array; array = new double[M][N]; for(int r = 0; r < M; r++) { for(int c = 0; c < N; c++) cout << array[r][c] << " "; cout << endl; } cout << endl; delete[] array; array = new double[M][N](); for(int r = 0; r < M; r++) { for(int c = 0; c < N; c++) cout << array[r][c] << " "; cout << endl; } int info; cout << abi::__cxa_demangle(typeid(array).name(),0,0,&info) << endl; return 0; }
__lb__lang-cs foreach (Object o in collection) { @collection.IndexOf(o) }
__lb__lang-c typedef enum {RANDOM, IMMEDIATE, SEARCH} StrategyType; StrategyType strategy = IMMEDIATE;
__lb__lang-java List<String> parts = new ArrayList<String>(); FluentIterable<Integer> partsStartingA = FluentIterable.from(parts).filter(new Predicate<String>() { @Override public boolean apply(final String input) { return input.startsWith("a"); } }).transform(new Function<String, Integer>() { @Override public Integer apply(final String input) { return input.length(); } });
__lb__lang-php function str_replace_first($search, $replace, $subject) { $pos = strpos($subject, $search); if ($pos !== false) { return substr_replace($subject, $replace, $pos, strlen($search)); } return $subject; }
__lb__lang-sh cd dirIwantToRMin; find ~/clang+llvm-3.3/bin/ -type f -exec basename {} \; | xargs rm
__lb__lang-java Array<String> both = array(first).append(array(second));
__lb__lang-hs -- | Since -- reasoning tool of \"ex falso quodlibet\". absurd :: Void -> a
__lb__lang-php array(2) { [20]=> string(1) "b" [30]=> string(1) "c" }
__lb__lang-sh y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/
__lb__lang-php ⇓ function myfunc($param1, $param2 $param3, $param4)
__lb__lang-java public static final List<String> STRINGS = Arrays.asList("firstString", "secondString" ...., "lastString");
__lb__lang-php function array_remove_by_value($array, $value) { return array_values(array_diff($array, array($value))); } $array = array(312, 401, 1599, 3); $newarray = array_remove_by_value($array, 401); print_r($newarray);
__lb__lang-hs foldr c n = para (\ x xs t -> c x t) n para c n = snd . foldr (\ x (xs, t) -> (x : xs, c x xs t)) ([], n)
__lb__lang-java Integer[] values = { 1, 3, 7 }; List<Integer> list = new ArrayList<Integer>(Arrays.asList(values));
__lb__lang-c 13FE81C51 cmp qword ptr [rsp+30h],1 13FE81C57 je testSwitch+73h (13FE81C73h) 13FE81C59 cmp qword ptr [rsp+30h],2 13FE81C5F je testSwitch+87h (13FE81C87h) 13FE81C61 cmp qword ptr [rsp+30h],3 13FE81C67 je testSwitch+9Bh (13FE81C9Bh) 13FE81C69 cmp qword ptr [rsp+30h],4 13FE81C6F je testSwitch+0AFh (13FE81CAFh)
__lb__lang-sh peek@peek:~$ ./setver.sh ./setver.sh: line 13: 1: You must pass a version of the format 0.0.0 as the only argument
__lb__lang-html <button id="go">Change Class</button> <div id="one" class="bordered green"> </div>
__lb__lang-cs int[] numbers = new int[] { 1,2,3,4,5 }; int aggregatedValue = numbers.Aggregate(10, (total, nextValue) => total + nextValue);
__lb__lang-cs void GenerateWorkbook(...) { ApplicationClass xl; Workbook xlWB; try { xl = ... xlWB = xl.Workbooks.Add(...); ... } finally { ... Marshal.ReleaseComObject(xlWB) ... GC.Collect(); GC.WaitForPendingFinalizers(); } }
__lb__lang-hs createGroceryItem [a, b, c] = makeGroceryItem a (parse b) (parse c) -- pattern match error if not exactly 3 items in list
__lb__lang-sh $ ask continue? [y=yes|n=no|m=maybe] g continue? [y=yes|n=no|m=maybe] k continue? [y=yes|n=no|m=maybe] y $
__lb__lang-golang type Page struct { PageId string `bson:"pageId" json:"pageId"` Meta map[string]interface{} `bson:"meta" json:"pageId"` }
__lb__lang-golang -X importpath.name=value Set the value of the string variable in importpath named name to value. Note that before Go 1.5 this option took two separate arguments. Now it takes one argument split on the first = sign.
__lb__lang-sh $ ./test.sh TEST=/home/ubuntu/. TMP=/home/ubuntu/blah REL=blah
__lb__lang-php <?php namespace MyApp\Http; class Curl { /** @var resource cURL handle */ private $ch; /** @var mixed The response */ private $response = false; /** * @param string $url * @param array $options */ public function __construct($url, array $options = array()) { $this->ch = curl_init($url); foreach ($options as $key => $val) { curl_setopt($this->ch, $key, $val); } curl_setopt($this->ch, CURLOPT_RETURNTRANSFER, true); } /** * Get the response * @return string * @throws \RuntimeException On cURL error */ public function getResponse() { if ($this->response) { return $this->response; } $response = curl_exec($this->ch); $error = curl_error($this->ch); $errno = curl_errno($this->ch); if (is_resource($this->ch)) { curl_close($this->ch); } if (0 !== $errno) { throw new \RuntimeException($error, $errno); } return $this->response = $response; } /** * Let echo out the response * @return string */ public function __toString() { return $this->getResponse(); } } $curl = new \MyApp\Http\Curl( CURLOPT_POSTFIELDS => array( )); try { echo $curl; } catch (\RuntimeException $ex) { die(sprintf( }
__lb__lang-java String response = HttpRequest.get("http: .accept("application/json") .body(); System.out.println("Response was: " + response);
__lb__lang-css .pane, .pane > .back, .pane > .cont { display: block; } .pane { position: relative; } .pane > .back { position: absolute; width: 100%; height: 100%; top: auto; bottom: auto; left: auto; right: auto; } .pane > .cont { position: relative; z-index: 10; }
__lb__lang-css table { border-collapse: collapse; } table td, table th { padding: 0; }
__lb__lang-cs var result = Task.Run(async () => await configManager.GetConfigurationAsync()).ConfigureAwait(false); OpenIdConnectConfiguration config = result.GetAwaiter().GetResult();
__lb__lang-sh while read LINE do echo $LINE done <$1 echo 11111----------- echo $LINE
__lb__lang-cs for (var flagIterator = 0; flagIterator < 32; flagIterator++) { int bitValue = 1 << flagIterator; if ((intValue & bitValue) != 0) { if (Enum.IsDefined(typeof(MyEnum), bitValue)) Console.WriteLine((MyEnum)bitValue); } }
__lb__lang-php Array ( [1] => 0.54248125036058 [3] => 0.21699250014423 )
__lb__lang-cs TenMostExpensiveProducts().AsDynamic().Where (x => x.UnitPrice > 62.500M)
__lb__lang-golang import strings stringFiles := strings.Join(fileSlice[:], ",")
__lb__lang-html <div id="outer"> <center> <div id="inner">Foo foo</div> </center> </div>
__lb__lang-java Comparator c = (p1, p2) -> p1.getAge().compareTo(p2.getAge());
__lb__lang-cs <%= Html.ActionLink("Text", "Action", "Controller", null, new { @class = "some_css_class" })%>
__lb__lang-cs var conditionalStatement = conditionSetting.Value; conditionalStatement = conditionalStatement.Replace("==", "~").Replace("!=", "~").Replace( var listOfValidConditions = new List<string>() { "!=", "==", ">", "<", ">=", "<=" }; if (conditionalStatement.Count(x => x == { result.InvalidFieldList.Add(new KeyFieldData(batch.DECurrentField, "The IsDoubleKeyCondition does not contain a supported conditional statement. Contact System Administrator.")); result.Status = ValidatorStatus.Fail; return result; }
__lb__lang-cs public static string Capitalize( this string word ) { return word[0].ToString( ).ToUpper( ) + word.Substring( 1 ); }
__lb__lang-cs this.UIThread(() => this.myLabel.Text = "Text Goes Here");
__lb__lang-cpp int** ary = new int*[N]; for(int i = 0; i < N; i++) ary[i] = new int[M];
__lb__lang-cpp 1.78814e-007 1.3411e-007 1.04308e-007 0 7.45058e-008 6.70552e-008 6.70552e-008 5.58794e-007 3.05474e-007 2.16067e-007 1.71363e-007 1.49012e-007 1.2666e-007 1.11759e-007 1.04308e-007 1.04308e-007 1.78814e-007 1.3411e-007 1.04308e-007 0 7.45058e-008 6.70552e-008 6.70552e-008 5.58794e-007 3.05474e-007 2.16067e-007 1.71363e-007 1.49012e-007 1.2666e-007 1.11759e-007 1.04308e-007 1.04308e-007 6.30584e-044 3.92364e-044 3.08286e-044 0 1.82169e-044 1.54143e-044 2.10195e-044 2.46842e-029 7.56701e-044 4.06377e-044 3.92364e-044 3.22299e-044 3.08286e-044 2.66247e-044 2.66247e-044 2.24208e-044 6.30584e-044 3.92364e-044 3.08286e-044 0 1.82169e-044 1.54143e-044 2.10195e-044 2.45208e-029 7.56701e-044 4.06377e-044 3.92364e-044 3.22299e-044 3.08286e-044 2.66247e-044 2.66247e-044 2.24208e-044
__lb__lang-sh with_key("/home/christoffer/ssh_keys/theuser") do sh("git clone git@github.com:TheUser/TheProject.git") end
__lb__lang-java public static String millisToShortDHMS(long duration) { String res = ""; long days = TimeUnit.MILLISECONDS.toDays(duration); long hours = TimeUnit.MILLISECONDS.toHours(duration) - TimeUnit.DAYS.toHours(TimeUnit.MILLISECONDS.toDays(duration)); long minutes = TimeUnit.MILLISECONDS.toMinutes(duration) - TimeUnit.HOURS.toMinutes(TimeUnit.MILLISECONDS.toHours(duration)); long seconds = TimeUnit.MILLISECONDS.toSeconds(duration) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(duration)); long millis = TimeUnit.MILLISECONDS.toMillis(duration) - TimeUnit.SECONDS.toMillis(TimeUnit.MILLISECONDS.toSeconds(duration)); if (days == 0) res = String.format("%02d:%02d:%02d.%04d", hours, minutes, seconds, millis); else res = String.format("%dd %02d:%02d:%02d.%04d", days, hours, minutes, seconds, millis); return res; }
__lb__lang-hs foldr _ z [] = z foldr f z (x:xs) = f x $ foldr f z xs
__lb__lang-cpp False Chain 0: 41959360000 0.57748 sec 18.1578 GB/s False Chain 1: 41959360000 0.585398 sec 17.9122 GB/s False Chain 2: 41959360000 0.645483 sec 16.2448 GB/s False Chain 3: 41959360000 0.929718 sec 11.2784 GB/s False Chain 4: 41959360000 1.23572 sec 8.48557 GB/s
__lb__lang-java import com.google.common.base.Charsets; import com.google.common.io.Files; String text = Files.toString(new File(path), Charsets.UTF_8);
__lb__lang-java InputStream in = ...; ByteArrayOutputStream bos = new ByteArrayOutputStream(); in.transferTo( bos ); byte[] bytes = bos.toByteArray();
__lb__lang-cs public static int AgeInYears(DateTime birthday, DateTime today) { return ((today.Year - birthday.Year) * 372 + (today.Month - birthday.Month) * 31 + (today.Day - birthday.Day)) / 372; }
__lb__lang-golang const ( bit0, mask0 = 1 << iota, 1<<iota - 1 bit1, mask1 _, _ bit3, mask3 )
__lb__lang-php $date1 = "2007-03-24"; $date2 = "2009-06-26"; $diff = abs(strtotime($date2) - strtotime($date1)); $years = floor($diff / (365*60*60*24)); $months = floor(($diff - $years * 365*60*60*24) / (30*60*60*24)); $days = floor(($diff - $years * 365*60*60*24 - $months*30*60*60*24)/ (60*60*24)); printf("%d years, %d months, %d days\n", $years, $months, $days);
__lb__lang-cs public class Int32TextBox : TextBox { protected override void OnKeyPress(KeyPressEventArgs e) { base.OnKeyPress(e); NumberFormatInfo fi = CultureInfo.CurrentCulture.NumberFormat; string c = e.KeyChar.ToString(); if (char.IsDigit(c, 0)) return; if ((SelectionStart == 0) && (c.Equals(fi.NegativeSign))) return; if ((((int)e.KeyChar == 22) || ((int)e.KeyChar == 3)) && ((ModifierKeys & Keys.Control) == Keys.Control)) return; if (e.KeyChar == return; e.Handled = true; } protected override void WndProc(ref System.Windows.Forms.Message m) { const int WM_PASTE = 0x0302; if (m.Msg == WM_PASTE) { string text = Clipboard.GetText(); if (string.IsNullOrEmpty(text)) return; if ((text.IndexOf( return; int i; if (!int.TryParse(text, out i)) return; if ((i < 0) && (SelectionStart != 0)) return; } base.WndProc(ref m); }
__lb__lang-css a:focus, a:active, button::-moz-focus-inner, input[type="reset"]::-moz-focus-inner, input[type="button"]::-moz-focus-inner, input[type="submit"]::-moz-focus-inner, select::-moz-focus-inner, input[type="file"] > input[type="button"]::-moz-focus-inner { border: 0; outline : 0; }
__lb__lang-perl sub MyRegexCheck { my ($string, $regex) = @_; if ($string) { return ($string =~ $regex); } return; } my $regex = qr{http: @results = MyRegexCheck(q{http:
__lb__lang-hs newtype State st t = State { stateProc :: st -> (t, st) } instance Functor (State st) where map :: (a -> b) -> ((State st) a -> (State st) b) map f (State p) = State $ \ s0 -> let (x, s1) = p s0 in (f x, s1) instance Monad (State st) where return :: t -> (State st) t return x = State $ \ s -> (x, s) (=<<) :: (a -> (State st) b) -> (State st) a -> (State st) b f =<< (State p) = State $ \ s0 -> let (x, s1) = p s0 in stateProc (f x) s1
__lb__lang-sh In script.sh line 13: : ${FOO:?"The environment variable ^-- SC2086: Double quote to prevent globbing and word splitting.
__lb__lang-sh echo -n Password: read -s password echo echo $password
__lb__lang-java String[] both = (String[])ArrayUtils.addAll(first, second);
__lb__lang-cs public static string ByteArrayToString2(byte[] ba) { char[] c = new char[ba.Length * 2]; for( int i = 0; i < ba.Length * 2; ++i) { byte b = (byte)((ba[i>>1] >> 4*((i&1)^1)) & 0xF); c[i] = (char)(55 + b + (((b-10)>>31)&-7)); } return new string( c ); }
__lb__lang-cpp namespace std { template<typename _Tp> struct is_pod : public integral_constant<bool, __is_pod(_Tp)> { }; }
__lb__lang-java public enum MyEnum { FIRST, SECOND, THIRD; public static Optional<MyEnum> fromString(String value){ try{ return Optional.of(MyEnum.valueOf(value)); }catch(Exception e){ return Optional.empty(); } } }
__lb__lang-hs {- class Functor (f :: * -> *) where map :: (a -> b) -> (f a -> f b)
__lb__lang-golang package main import "fmt" import "golang.org/x/text/unicode/norm" func main() { var ia norm.Iter ia.InitString(norm.NFKD, "école") nc := 0 for !ia.Done() { nc = nc + 1 ia.Next() } fmt.Printf("Number of chars: %d\n", nc) }
__lb__lang-hs aroundF z@(MuCx {aboveY = dXs, belowY = dY} :<-: _) = MuCx { aboveY = yOnUp dXs (In (up VY (zZipY z))) , belowY = contextualize dXs (cxZ $ around VY (zZipY z)) } :<-: z
__lb__lang-php xdebug.force_display_errors = 1; xdebug.force_error_reporting = -1;
__lb__lang-sh echo `cd "$1" 2>/dev/null&&pwd||(cd "$(dirname "$1")";pwd|sed "s|/*\$|/${1
__lb__lang-php $arrayWithValuesRemoved = array_diff($arrayOfData, $arrayOfValuesToRemove);
__lb__lang-java @Override public void onAttach(Activity activity) { super.onAttach(activity); context=activity; }
__lb__lang-java String [] stockArr = stockList.toArray(new String[0]);
__lb__lang-php $messages=array(); $messages[312] = 312; $messages[401] = 401; $messages[1599] = 1599; $messages[3] = 3; unset($messages[3]);
__lb__lang-cs using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Windows.Forms; namespace example_string_to_int { public partial class Form1 : Form { public Form1() { InitializeComponent(); } private void button1_Click(object sender, EventArgs e) { string a = textBox1.Text; int b; if (!int.TryParse(a, out b)) { MessageBox.Show("this is not a number"); } else { textBox2.Text = a+" is a number" ; } } } }
__lb__lang-sh if [[ "${var}" == "true" ]]; then ... if [[ "${var}" == "false" ]]; then ... if [[ -n "${var:-}" ]]; then echo "var is not empty" ...
__lb__lang-sh $ date | clipboard Sat Dec 29 14:12:57 PST 2018 $ date Sat Dec 29 14:12:57 PST 2018 $ date | clipboard | wc 1 6 29
__lb__lang-sh $ ls foo_bar_baz.txt foo bar baz.txt $ getlist File found: foo_bar_baz.txt File found: foo File found: bar File found: baz.txt
__lb__lang-java public static byte[] readBytes(InputStream inputStream) throws IOException { byte[] buffer = new byte[32 * 1024]; int bufferSize = 0; for (;;) { int read = inputStream.read(buffer, bufferSize, buffer.length - bufferSize); if (read == -1) { return Arrays.copyOf(buffer, bufferSize); } bufferSize += read; if (bufferSize == buffer.length) { buffer = Arrays.copyOf(buffer, bufferSize * 2); } } }
__lb__lang-java 17: iconst_2 18: iload 4 20: iload 4 22: imul 23: imul 24: iadd
__lb__lang-java final Handler handler = new Handler(Looper.getMainLooper()); handler.postDelayed(new Runnable() { @Override public void run() { } }, 100);
__lb__lang-sh $ echo "hello" > file $ echo "world" >> file $ cat file hello world
__lb__lang-cs [Flags] public enum Options { None = 0, Option1 = 1, Option2 = 2, Option3 = 4, Option4 = 8 }
__lb__lang-html <script src="https: <form id="myForm"> <input type="radio" name="radioName" value="1" /> 1 <br /> <input type="radio" name="radioName" value="2" /> 2 <br /> <input type="radio" name="radioName" value="3" /> 3 <br /> </form>
__lb__lang-php <?php $object = $dorm->getClassName( $dorm->save($object); $dorm->delete($object);
__lb__lang-java package com.levo.jsonex.model; public class Post { private String post_id; private String actor_id; private String picOfPersonWhoPosted; private String nameOfPersonWhoPosted; private String message; private int likesCount; private String[] comments; private int timeOfPost; public String getPost_id() { return post_id; } public void setPost_id(String post_id) { this.post_id = post_id; } public String getActor_id() { return actor_id; } public void setActor_id(String actor_id) { this.actor_id = actor_id; } public String getPicOfPersonWhoPosted() { return picOfPersonWhoPosted; } public void setPicOfPersonWhoPosted(String picOfPersonWhoPosted) { this.picOfPersonWhoPosted = picOfPersonWhoPosted; } public String getNameOfPersonWhoPosted() { return nameOfPersonWhoPosted; } public void setNameOfPersonWhoPosted(String nameOfPersonWhoPosted) { this.nameOfPersonWhoPosted = nameOfPersonWhoPosted; } public String getMessage() { return message; } public void setMessage(String message) { this.message = message; } public int getLikesCount() { return likesCount; } public void setLikesCount(int likesCount) { this.likesCount = likesCount; } public String[] getComments() { return comments; } public void setComments(String[] comments) { this.comments = comments; } public int getTimeOfPost() { return timeOfPost; } public void setTimeOfPost(int timeOfPost) { this.timeOfPost = timeOfPost; } }
